R-ASSEMBLER VERSION 1.05C    RA.ASM                       1

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0100              1     ; --------------------------------
 0100              2     ; R-ASSEMBLER VERSION 1.05C
 0100              3     PCCHAR  EQU     24H
 0100              4     DEFORG  EQU     100H
 0100              5     DEFPAG  EQU     50
 0100              6     INFN    EQU     VARS+40H
 0100              7     OUTFN   EQU     VARS+60H
 0100              8     LSTFN   EQU     VARS+80H
 0100              9     SYMFN   EQU     VARS+0A0H
 0100              10    DEFFN   EQU     VARS+0C0H
 0100              11    
 0100              12    ; ASSEMBLER MODULE VARIABLES
 0100              13    FUNC    EQU     VARS
 0100              14    TXTLEN  EQU     VARS+2
 0100              15    BINLEN  EQU     VARS+4
 0100              16    PC      EQU     VARS+6
 0100              17    VORG    EQU     VARS+8
 0100              18    USIZE   EQU     VARS+0AH
 0100              19    STK     EQU     VARS+0CH
 0100              20    WADJ    EQU     VARS+10H
 0100              21    PREFIX  EQU     VARS+12H
 0100              22    SEGPRE  EQU     VARS+13H
 0100              23    OPCODE  EQU     VARS+14H
 0100              24    MODRM   EQU     VARS+15H
 0100              25    DISP    EQU     VARS+16H
 0100              26    IMM     EQU     VARS+18H
 0100              27    FLAGS   EQU     VARS+1AH
 0100              28    SYMFLG  EQU     VARS+1BH
 0100              29    ARGS    EQU     VARS+1CH
 0100              30    SIZES   EQU     VARS+1EH
 0100              31    
 0100              32    ; SYSTEM INTERFACE VARIABLES
 0100              33    OUTHDL  EQU     VARS+20H
 0100              34    LSTHDL  EQU     VARS+22H
 0100              35    SYMHDL  EQU     VARS+24H
 0100              36    INCLEV  EQU     VARS+26H
 0100              37    PASS    EQU     VARS+28H
 0100              38    OLDPC   EQU     VARS+2AH
 0100              39    ERRORS  EQU     VARS+2CH
 0100              40    PAGNUM  EQU     VARS+2EH
 0100              41    LSTLIN  EQU     VARS+30H
 0100              42    LSTWID  EQU     VARS+32H
 0100              43            ORG     100H
 0100              44    
 0100              45    ; --------------------------------
 0100              46    ; DISPLAY PROGRAM MESSAGE AND
 0100              47    ; CHECK DOS VERSION
 0100 B409         48    START:  MOV     AH,9
 0102 BA2C21       49            MOV     DX,AMSG
 0105 CD21         50            INT     21H
R-ASSEMBLER VERSION 1.05C    RA.ASM                      2

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0107 B430         51            MOV     AH,30H
 0109 CD21         52            INT     21H
 010B 84C0         53            TEST    AL,AL
 010D 7512         54            JNZ     MAIN
 010F              55    
 010F              56    ; 2.0 OR HIGHER REQUIRED FOR
 010F              57    ; FILE HANDLES
 010F B409         58            MOV     AH,9
 0111 BA4821       59            MOV     DX,DOSERR
 0114 CD21         60            INT     21H
 0116 CD20         61            INT     20H
 0118              62    
 0118              63    ; COMMAND LINE PARAMETER ERROR
 0118              64    ; NOT SUPER SERIOUS, SO ERROR
 0118              65    ; CODE 0
 0118 B409         66    ERROR:  MOV     AH,9
 011A CD21         67            INT     21H
 011C B8004C       68            MOV     AX,4C00H
 011F CD21         69            INT     21H
 0121              70    
 0121              71    ; BLANK ALL TEMPORARY VARIABLES
 0121              72    ; AND STORAGE BUFFERS
 0121 31C0         73    MAIN:   XOR     AX,AX
 0123 BF7022       74            MOV     DI,TXTBUF
 0126 B90309       75            MOV     CX,SYMBS-TXTBUF+3
 0129 FC           76            CLD
 012A F3AA         77            REP STOSB
 012C              78    
 012C              79    ; START LISTING ON PAGE ONE
 012C 40           80            INC     AX
 012D A39E28       81            MOV     [PAGNUM],AX
 0130 A3702B       82            MOV     [SYMBS],AX
 0133              83    
 0133              84    ; FIRST SYMBOL RESERVED FOR
 0133              85    ; LOAD ADDRESS
 0133 B80001       86            MOV     AX,DEFORG
 0136 A3732B       87            MOV     [SYMBS+3],AX
 0139 A37828       88            MOV     [VORG],AX
 013C              89    
 013C              90    ; START READING COMMAND LINE
 013C BE8200       91            MOV     SI,82H
 013F E8DF00       92            CALL    PARAM
 0142 72D4         93            JC      ERROR
 0144 E87205       94            CALL    OPEN
 0147 7245         95            JC      BAH
 0149 FF367028     96            PUSH    WORD [FUNC]
 014D              97    
 014D              98    ; SIMPLE TWO-PASS STRUCTURE
 014D BF7025       99    RUN:    MOV     DI,TEMP
 0150 BEF320       100           MOV     SI,PASSM
R-ASSEMBLER VERSION 1.05C    RA.ASM                      3

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0153 E82B0D       101           CALL    WRM
 0156 A19828       102           MOV     AX,[PASS]
 0159 40           103           INC     AX
 015A A39828       104           MOV     [PASS],AX
 015D B90A00       105           MOV     CX,10
 0160 E8C40A       106           CALL    WN
 0163 E85508       107           CALL    PRUNT
 0166 E87401       108           CALL    PROCF
 0169 7223         109           JC      BAH
 016B              110   
 016B              111   ; IF ERRORS WERE ENCOUNTERED,
 016B              112   ; ABORT FURTHER ASSEMBLY UNTIL
 016B              113   ; CORRECTED
 016B A19C28       114           MOV     AX,[ERRORS]
 016E 85C0         115           TEST    AX,AX
 0170 7520         116           JNZ     HUMBUG
 0172              117   
 0172              118   ; FUNC GETS PROGRESSIVELY BLANKED
 0172              119   ; BUT SINCE THERE'S ONLY TWO
 0172              120   ; BYTES, ONLY TWO PASSES WILL
 0172              121   ; BE EXECUTED.  MODIFYING THIS
 0172              122   ; FOR A MULTI-PASS STRUCTURE
 0172              123   ; COULD BE DONE WITH A DEDICATED
 0172              124   ; FUNC BUFFER
 0172 A17028       125           MOV     AX,[FUNC]
 0175 30C0         126           XOR     AL,AL
 0177 86E0         127           XCHG    AL,AH
 0179 A37028       128           MOV     [FUNC],AX
 017C 84C0         129           TEST    AL,AL
 017E 75CD         130           JNZ     RUN
 0180 8F067028     131           POP     WORD [FUNC]
 0184 E85A07       132           CALL    UDDUMP
 0187 E8CE05       133           CALL    SYMDMP
 018A 30C0         134           XOR     AL,AL
 018C EB06         135           JMP     SHORT CLOSE
 018E              136   
 018E              137   ; ERROR CODE 1 FOR ERRORS WITH
 018E              138   ; FILE I/O
 018E B001         139   BAH:    MOV     AL,1
 0190 EB02         140           JMP     SHORT CLOSE
 0192              141   
 0192              142   ; ERROR CODE 2 FOR ERRORS IN
 0192              143   ; THE PROGRAM
 0192 B002         144   HUMBUG: MOV     AL,2
 0194              145   
 0194              146   ; --------------------------------
 0194              147   ; CLOSE ALL OPEN FILES AND
 0194              148   ; ANNOUNCE WHICH ONES WERE
 0194              149   ; PRODUCED
 0194 B44C         150   CLOSE:  MOV     AH,4CH
R-ASSEMBLER VERSION 1.05C    RA.ASM                      4

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0196 50           151           PUSH    AX
 0197 E83C02       152           CALL    CALF
 019A B43E         153           MOV     AH,3EH
 019C 8B1C         154           MOV     BX,[SI]
 019E CD21         155           INT     21H
 01A0 BF7025       156           MOV     DI,TEMP
 01A3 BEFE20       157           MOV     SI,OUTM
 01A6 E8D80C       158           CALL    WRM
 01A9              159   
 01A9              160   ; FLAG BY FLAG
 01A9 B91010       161           MOV     CX,1010H
 01AC BED028       162           MOV     SI,OUTFN
 01AF 8B1E9028     163           MOV     BX,[OUTHDL]
 01B3 E82700       164           CALL    CLOSF
 01B6 B92020       165           MOV     CX,2020H
 01B9 BEF028       166           MOV     SI,LSTFN
 01BC 8B1E9228     167           MOV     BX,[LSTHDL]
 01C0 E81A00       168           CALL    CLOSF
 01C3 B94040       169           MOV     CX,4040H
 01C6 BE1029       170           MOV     SI,SYMFN
 01C9 8B1E9428     171           MOV     BX,[SYMHDL]
 01CD E80D00       172           CALL    CLOSF
 01D0              173   
 01D0              174   ; DO NOT ANNOUNCE OUTPUT FILES
 01D0              175   ; IF THERE ARE NONE
 01D0 830E9C2800   176           OR      WORD [ERRORS],0
 01D5 7503         177           JNZ     CLOSE1
 01D7 E8E107       178           CALL    PRUNT
 01DA 58           179   CLOSE1: POP     AX
 01DB CD21         180           INT     21H
 01DD 850E7028     181   CLOSF:  TEST    [FUNC],CX
 01E1 740A         182           JZ      CLOSF1
 01E3 E89B0C       183           CALL    WRM
 01E6 B020         184           MOV     AL,20H
 01E8 AA           185           STOSB
 01E9 B43E         186           MOV     AH,3EH
 01EB CD21         187           INT     21H
 01ED C3           188   CLOSF1: RET
 01EE              189   
 01EE              190   ; THE ENTRY POINT FOR THIS IS A
 01EE              191   ; FALLTHROUGH FURTHER AHEAD; THIS
 01EE              192   ; PART SPECIFIES THE WRITTEN LOAD
 01EE              193   ; ADDRESS FOR DISASSEMBLY
 01EE E80A09       194   PARAO:  CALL    CC
 01F1 7472         195           JZ      PARANO
 01F3 57           196           PUSH    DI
 01F4 E8920D       197           CALL    RNC
 01F7 5F           198           POP     DI
 01F8 726B         199           JC      PARANO
 01FA 8915         200           MOV     [DI],DX
R-ASSEMBLER VERSION 1.05C    RA.ASM                      5

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 01FC EB23         201           JMP     SHORT PARAM
 01FE              202   
 01FE              203   ; TEST IF BUFFER HOLDS FILESPEC
 01FE              204   ; WRITE NAME IF NOT; COMPLAIN IF
 01FE              205   ; IT DOES
 01FE 8A05         206   PARAWF: MOV     AL,[DI]
 0200 84C0         207           TEST    AL,AL
 0202 755C         208           JNZ     PARARG
 0204 89F2         209           MOV     DX,SI
 0206 E86201       210           CALL    WFN
 0209              211   
 0209              212   ; ALSO SAVE THE FIRST DETECTED
 0209              213   ; FILESPEC AS DEFAULT FILE NAME
 0209 A03029       214           MOV     AL,[DEFFN]
 020C 84C0         215           TEST    AL,AL
 020E 7511         216           JNZ     PARAM
 0210 56           217           PUSH    SI
 0211 89D6         218           MOV     SI,DX
 0213 BF3029       219           MOV     DI,DEFFN
 0216 E85201       220           CALL    WFN
 0219 BE3029       221           MOV     SI,DEFFN
 021C              222   
 021C              223   ; WITHOUT AN EXTENSION
 021C F9           224           STC
 021D E88A01       225           CALL    ADDEX
 0220 5E           226           POP     SI
 0221              227   
 0221              228   ; --------------------------------
 0221              229   ; PROCESS COMMAND LINE AND SET
 0221              230   ; FUNCTION AND FILE FLAGS
 0221 BFB028       231   PARAM:  MOV     DI,INFN
 0224 EB48         232           JMP     SHORT PARAG
 0226 BF7828       233   PARASC: MOV     DI,VORG
 0229 3C4F         234           CMP     AL,"O"
 022B 74C1         235           JE      PARAO
 022D BFA228       236           MOV     DI,LSTWID
 0230 3C57         237           CMP     AL,"W"
 0232 74BA         238           JE      PARAO
 0234              239   
 0234              240   ; SET REQUESTED FUNCTION CODES
 0234              241   ; AND FILE NAME BUFFER FOR GIVEN
 0234              242   ; SWITCH AND BRANCH TO CONFIRM
 0234 BA0112       243           MOV     DX,1201H
 0237 BFD028       244           MOV     DI,OUTFN
 023A 3C41         245           CMP     AL,"A"
 023C 742C         246           JE      PARAFN
 023E BA9000       247           MOV     DX,90H
 0241 3C44         248           CMP     AL,"D"
 0243 7425         249           JE      PARAFN
 0245 BA0122       250           MOV     DX,2201H
R-ASSEMBLER VERSION 1.05C    RA.ASM                      6

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0248 BFF028       251           MOV     DI,LSTFN
 024B 3C4C         252           CMP     AL,"L"
 024D 741B         253           JE      PARAFN
 024F BAA000       254           MOV     DX,0A0H
 0252 3C55         255           CMP     AL,"U"
 0254 7414         256           JE      PARAFN
 0256 BA0040       257           MOV     DX,4000H
 0259 BF1029       258           MOV     DI,SYMFN
 025C 3C53         259           CMP     AL,"S"
 025E 740A         260           JE      PARAFN
 0260 BA6E21       261   PARARG: MOV     DX,USAGE
 0263 F9           262           STC
 0264 C3           263           RET
 0265 BA5A21       264   PARANO: MOV     DX,NOPAR
 0268 F9           265           STC
 0269 C3           266           RET
 026A 09167028     267   PARAFN: OR      [FUNC],DX
 026E E81001       268   PARAG:  CALL    RFN
 0271 72B3         269           JC      PARASC
 0273 7589         270           JNZ     PARAWF
 0275              271   
 0275              272   ; DONE READING THROUGH PARAMETERS
 0275 800E302900   273   PARAEN: OR      BYTE [DEFFN],0
 027A 74E9         274           JZ      PARANO
 027C              275   
 027C              276   ; NOW ASSIGN DEFAULT FILE
 027C              277   ; EXTENSIONS TO NAMES WITHOUT
 027C              278   ; SPECIFIED EXTENSIONS
 027C BDE720       279           MOV     BP,DOTCOM
 027F BAE320       280           MOV     DX,DOTASM
 0282 BFB028       281           MOV     DI,INFN
 0285 A17028       282           MOV     AX,[FUNC]
 0288 A98030       283           TEST    AX,3080H
 028B 7505         284           JNZ     PARAST
 028D              285   
 028D              286   ; IF NO I/O MODE WAS SPECIFIED,
 028D              287   ; I.E. IF PERHAPS ONLY A FILE
 028D              288   ; NAME WAS GIVEN AS THE SOLE
 028D              289   ; PARAMETER, THE FUNCTION FLAGS
 028D              290   ; ARE NOT SET, SO DEFAULT TO
 028D              291   ; OUTPUTTING A BINARY AND A
 028D              292   ; LISTING AND SET FUNC TO
 028D              293   ; TWO-PASS ASSEMBLY
 028D 0D0132       294           OR      AX,3201H
 0290 7510         295           JNZ     PARANS
 0292 A880         296   PARAST: TEST    AL,80H
 0294 740C         297           JZ      PARANS
 0296              298   
 0296              299   ; DEFAULT INPUT EXTENSION IS ASM
 0296              300   ; AND OUTPUT IS COM, BUT IF
R-ASSEMBLER VERSION 1.05C    RA.ASM                      7

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0296              301   ; DISASSEMBLY IS REQUESTED, SWAP
 0296              302   ; THE EXTENSIONS
 0296 87D5         303           XCHG    BP,DX
 0298              304   
 0298              305   ; SYMBOL FILE REQUESTED WITH
 0298              306   ; DISASSEMBLY WILL HAVE IT BEING
 0298              307   ; READ AND SYMBOL SCANNING FLAG
 0298              308   ; MUST BE SET IN FUNCTION FLAGS
 0298 A90040       309           TEST    AX,4000H
 029B 7405         310           JZ      PARANS
 029D 25FFBF       311           AND     AX,0BFFFH
 02A0 0C06         312           OR      AL,6
 02A2 A37028       313   PARANS: MOV     [FUNC],AX
 02A5 BE3029       314           MOV     SI,DEFFN
 02A8 E8E900       315           CALL    RFN1
 02AB E81700       316           CALL    PARAWN
 02AE 89EA         317           MOV     DX,BP
 02B0 BFD028       318           MOV     DI,OUTFN
 02B3 E80F00       319           CALL    PARAWN
 02B6 BAEF20       320           MOV     DX,DOTSYM
 02B9 BF1029       321           MOV     DI,SYMFN
 02BC E80600       322           CALL    PARAWN
 02BF BAEB20       323           MOV     DX,DOTLST
 02C2 BFF028       324           MOV     DI,LSTFN
 02C5              325   
 02C5              326   ; GENERATE NAMES AND EXTENSIONS
 02C5              327   ; THAT WERE NOT SPECIFIED
 02C5 53           328   PARAWN: PUSH    BX
 02C6 56           329           PUSH    SI
 02C7 57           330           PUSH    DI
 02C8 8B05         331           MOV     AX,[DI]
 02CA 84C0         332           TEST    AL,AL
 02CC 7503         333           JNZ     PARANX
 02CE E89A00       334           CALL    WFN
 02D1 5E           335   PARANX: POP     SI
 02D2 E8BF00       336           CALL    RFN1
 02D5 F8           337           CLC
 02D6 E8D100       338           CALL    ADDEX
 02D9 5E           339           POP     SI
 02DA 5B           340           POP     BX
 02DB F8           341           CLC
 02DC C3           342           RET
 02DD              343   
 02DD              344   ; --------------------------------
 02DD              345   ; ASSEMBLE OR DISASSEMBLE AN
 02DD              346   ; ENTIRE FILE
 02DD A17828       347   PROCF:  MOV     AX,[VORG]
 02E0 A37628       348           MOV     [PC],AX
 02E3              349   
 02E3              350   ; RESET ALL PERTINENT COUNTERS
R-ASSEMBLER VERSION 1.05C    RA.ASM                      8

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 02E3 31C0         351           XOR     AX,AX
 02E5 A37A28       352           MOV     [USIZE],AX
 02E8 A3A028       353           MOV     [LSTLIN],AX
 02EB              354   
 02EB              355   ; ENSURE LISTING WIDTH IS WITHIN
 02EB              356   ; ACCEPTABLE BOUNDS
 02EB B80300       357           MOV     AX,3
 02EE 3906A228     358           CMP     [LSTWID],AX
 02F2 720C         359           JB      PROCF0
 02F4 B80800       360           MOV     AX,8
 02F7 3B06A228     361           CMP     AX,[LSTWID]
 02FB 7203         362           JB      PROCF0
 02FD A1A228       363           MOV     AX,[LSTWID]
 0300              364   
 0300              365   ; DUMP EQUATES
 0300 A3A228       366   PROCF0: MOV     [LSTWID],AX
 0303 E87205       367           CALL    EQDUMP
 0306              368   
 0306              369   ; GET INPUT FILE PARAMETERS
 0306 E8CD00       370           CALL    CALF
 0309 AD           371           LODSW
 030A BB0042       372           MOV     BX,4200H
 030D 93           373           XCHG    AX,BX
 030E              374   
 030E              375   ; RESET FILE READ POINTER
 030E 31C9         376           XOR     CX,CX
 0310 31D2         377           XOR     DX,DX
 0312 8914         378           MOV     [SI],DX
 0314 CD21         379           INT     21H
 0316 E88C02       380   PROCF1: CALL    READ
 0319              381   
 0319              382   ; CARRY FLAG SIGNALS READ ERROR,
 0319              383   ; SO ABORT IMMEDIATELY ON ERROR
 0319 7217         384           JC      PROCF2
 031B              385   
 031B              386   ; ZERO FLAG SIGNALS END OF FILE
 031B 741B         387           JZ      PROCF3
 031D              388   
 031D              389   ; SAVE PROGRAM COUNTER FOR LISTING
 031D A17628       390           MOV     AX,[PC]
 0320 A39A28       391           MOV     [OLDPC],AX
 0323 E81907       392           CALL    ASM
 0326 7217         393           JC      PROCF4
 0328 E80801       394           CALL    WLST
 032B 7205         395           JC      PROCF2
 032D E81203       396           CALL    WRITE
 0330 73E4         397           JNC     PROCF1
 0332              398   
 0332              399   ; ON ANY FILE ERRORS, CLOSE ALL
 0332              400   ; OPEN INPUT FILES AND ABORT WITH
R-ASSEMBLER VERSION 1.05C    RA.ASM                      9

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0332              401   ; CARRY
 0332 E8E700       402   PROCF2: CALL    DECF
 0335 73FB         403           JNC     PROCF2
 0337 C3           404           RET
 0338              405   
 0338              406   ; ON END OF FILE, CLOSE CURRENT
 0338              407   ; INPUT FILE
 0338 E8E100       408   PROCF3: CALL    DECF
 033B 73D9         409           JNC     PROCF1
 033D              410   
 033D              411   ; DO NOT SIGNAL ERROR, EOF IS
 033D              412   ; A LEGITIMATE CAUSE OF QUITTING
 033D F8           413           CLC
 033E C3           414           RET
 033F              415   
 033F              416   ; SIGNED ERROR CODES ARE DISGUISED
 033F              417   ; SYSTEM INTERFACE REQUESTS FROM
 033F              418   ; THE ASSEMBLER, BUT AS THEY WORK
 033F              419   ; VIA THE ERROR HANDLER INTERFACE
 033F              420   ; THE LINE HAS TO BE MANUALLY
 033F              421   ; ECHOED TO LISTING HERE
 033F E8F100       422   PROCF4: CALL    WLST
 0342 84C0         423           TEST    AL,AL
 0344 7911         424           JNS     PROCF5
 0346              425   
 0346              426   ; PROCESS SYSTEM REQUEST;
 0346              427   ; END DIRECTIVE TRIGGERS ZERO FLAG
 0346 98           428           CBW
 0347 F7D0         429           NOT     AX
 0349 74ED         430           JZ      PROCF3
 034B              431   
 034B              432   ; HANDLER TABLE STARTS ON INCLUDE
 034B              433   ; DIRECTIVE SO MAKE THAT BASELINE
 034B 48           434           DEC     AX
 034C BFAC1F       435           MOV     DI,ADIR
 034F D1E0         436           SHL     AX,1
 0351 01C7         437           ADD     DI,AX
 0353 FF15         438           CALL    [DI]
 0355 73BF         439           JNC     PROCF1
 0357              440   
 0357              441   ; WRITE ERROR MESSAGE TO CONSOLE
 0357              442   ; AND LISTING
 0357 E80B06       443   PROCF5: CALL    SCREAM
 035A F606702820   444           TEST    BYTE [FUNC],20H
 035F 74B5         445           JZ      PROCF1
 0361 B440         446           MOV     AH,40H
 0363 8B1E9228     447           MOV     BX,[LSTHDL]
 0367 CD21         448           INT     21H
 0369 EBAB         449           JMP     SHORT PROCF1
 036B              450   
R-ASSEMBLER VERSION 1.05C    RA.ASM                      10

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 036B              451   ; --------------------------------
 036B              452   ; WRITE BX-LENGTH STRING FROM SI
 036B              453   ; TO DI, CONVERTED TO UPPERCASE
 036B              454   ; AND ZERO-TERMINATED
 036B FC           455   WFN:    CLD
 036C 53           456           PUSH    BX
 036D AC           457   WFN1:   LODSB
 036E 3C61         458           CMP     AL,61H
 0370 7206         459           JC      WFN2
 0372 3C7B         460           CMP     AL,7BH
 0374 7302         461           JNC     WFN2
 0376 24DF         462           AND     AL,0DFH
 0378 AA           463   WFN2:   STOSB
 0379 4B           464           DEC     BX
 037A 75F1         465           JNZ     WFN1
 037C 30C0         466           XOR     AL,AL
 037E AA           467           STOSB
 037F 5B           468           POP     BX
 0380 C3           469           RET
 0381              470   
 0381              471   ; --------------------------------
 0381              472   ; READ COMMAND LINE ELEMENT,
 0381              473   ; SET CARRY FLAG IF SWITCH
 0381 FC           474   RFN:    CLD
 0382 AC           475           LODSB
 0383 3C00         476           CMP     AL,0
 0385 741D         477           JE      RFN4
 0387 3C0D         478           CMP     AL,0DH
 0389 7419         479           JE      RFN4
 038B 3C21         480           CMP     AL,21H
 038D 72F2         481           JB      RFN
 038F 3C2F         482           CMP     AL,2FH
 0391 7412         483           JE      RFN5
 0393 4E           484           DEC     SI
 0394 31DB         485   RFN1:   XOR     BX,BX
 0396 43           486   RFN2:   INC     BX
 0397 8A00         487           MOV     AL,[BX+SI]
 0399 3C2F         488           CMP     AL,2FH
 039B 7404         489           JE      RFN3
 039D 3C21         490           CMP     AL,21H
 039F 73F5         491           JNB     RFN2
 03A1 83FB00       492   RFN3:   CMP     BX,0
 03A4 C3           493   RFN4:   RET
 03A5 AC           494   RFN5:   LODSB
 03A6 24DF         495           AND     AL,0DFH
 03A8 F9           496           STC
 03A9 C3           497           RET
 03AA              498   
 03AA              499   ; --------------------------------
 03AA              500   ; ADD OR REMOVE EXTENSION FROM
R-ASSEMBLER VERSION 1.05C    RA.ASM                      11

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 03AA              501   ; BX-LENGTH FILE NAME AT SI,
 03AA              502   ; DEPENDING ON CARRY FLAG BEING
 03AA              503   ; RESET OR SET, RESPECTIVELY
 03AA 9F           504   ADDEX:  LAHF
 03AB 8D38         505           LEA     DI,[BX+SI]
 03AD B02E         506           MOV     AL,2EH
 03AF 89D9         507           MOV     CX,BX
 03B1              508   
 03B1              509   ; FIND FINAL OCCURRENCE OF
 03B1              510   ; EXTENSION DOT
 03B1 FD           511           STD
 03B2 F2AE         512           REPNE SCASB
 03B4 7506         513           JNZ     ADDEX1
 03B6              514   
 03B6              515   ; GET ENTRY STATE OF CARRY FLAG
 03B6 9E           516           SAHF
 03B7 7317         517           JNC     ADDEX0
 03B9              518   
 03B9              519   ; GET BACK TO DOT LOCATION AND
 03B9              520   ; PREPARE TO CUT OFF
 03B9 47           521           INC     DI
 03BA EB10         522           JMP     SHORT ADDEX3
 03BC 9E           523   ADDEX1: SAHF
 03BD 7211         524           JC      ADDEX0
 03BF 8D38         525           LEA     DI,[BX+SI]
 03C1 87D6         526           XCHG    SI,DX
 03C3              527   
 03C3              528   ; ADD ZERO TERMINATED FILE
 03C3              529   ; EXTENSION
 03C3 FC           530           CLD
 03C4 AA           531   ADDEX2: STOSB
 03C5 AC           532           LODSB
 03C6 84C0         533           TEST    AL,AL
 03C8 75FA         534           JNZ     ADDEX2
 03CA 87D6         535           XCHG    SI,DX
 03CC              536   
 03CC              537   ; GET NEW LENGTH
 03CC 89FB         538   ADDEX3: MOV     BX,DI
 03CE 29F3         539           SUB     BX,SI
 03D0 8D38         540   ADDEX0: LEA     DI,[BX+SI]
 03D2              541   
 03D2              542   ; TERMINATE FILESPEC WITH ZERO
 03D2 30C0         543           XOR     AL,AL
 03D4 AA           544           STOSB
 03D5 C3           545           RET
 03D6              546   
 03D6              547   ; --------------------------------
 03D6              548   ; RETRIEVE CURRENT INPUT FILE
 03D6              549   ; PARAMETERS
 03D6 A19628       550   CALF:   MOV     AX,[INCLEV]
R-ASSEMBLER VERSION 1.05C    RA.ASM                      12

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 03D9 85C0         551           TEST    AX,AX
 03DB 743D         552           JZ      CALF0
 03DD FC           553           CLD
 03DE 48           554           DEC     AX
 03DF              555   
 03DF              556   ; ZERO FLAG SET MEANS IT IS THE
 03DF              557   ; FIRST OPEN INPUT FILE
 03DF 9C           558           PUSHF
 03E0 86E0         559           XCHG    AL,AH
 03E2 D1E8         560           SHR     AX,1
 03E4 D1E8         561           SHR     AX,1
 03E6 BE7029       562           MOV     SI,INCBUF
 03E9 01C6         563           ADD     SI,AX
 03EB              564   
 03EB              565   ; RETRIEVE ZERO FLAG AND CLEAR
 03EB              566   ; ERROR FLAG
 03EB 9D           567           POPF
 03EC F8           568           CLC
 03ED C3           569           RET
 03EE              570   
 03EE              571   ; --------------------------------
 03EE              572   ; OPEN NEW INPUT FILE
 03EE FF069628     573   INCF:   INC     WORD [INCLEV]
 03F2 89F7         574           MOV     DI,SI
 03F4 E8DFFF       575           CALL    CALF
 03F7 721D         576           JC      INCF0
 03F9 87F7         577           XCHG    DI,SI
 03FB 57           578           PUSH    DI
 03FC FC           579           CLD
 03FD 31C0         580           XOR     AX,AX
 03FF              581   
 03FF              582   ; CLEAR FILE HANDLE
 03FF AB           583           STOSW
 0400              584   
 0400              585   ; CLEAR CURRENT LINE
 0400 AB           586           STOSW
 0401              587   
 0401              588   ; SAVE FILE NAME IN BUFFER
 0401 89FA         589           MOV     DX,DI
 0403 E865FF       590           CALL    WFN
 0406 B8003D       591           MOV     AX,3D00H
 0409 CD21         592           INT     21H
 040B              593   
 040B              594   ; RESTORE HANDLE POSITION
 040B              595   ; IN BUFFER AND STORE HANDLE
 040B 5F           596           POP     DI
 040C 7208         597           JC      INCF0
 040E AB           598           STOSW
 040F              599   
 040F              600   ; SIGNAL END OF PAGE TO START
R-ASSEMBLER VERSION 1.05C    RA.ASM                      13

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 040F              601   ; ON A NEW PAGE
 040F A1AA1F       602           MOV     AX,[PAGLEN]
 0412 A3A028       603           MOV     [LSTLIN],AX
 0415 C3           604           RET
 0416 FF0E9628     605   INCF0:  DEC     WORD [INCLEV]
 041A F9           606   CALF0:  STC
 041B C3           607           RET
 041C              608   
 041C              609   ; --------------------------------
 041C              610   ; CLOSE CURRENT INPUT FILE
 041C E8B7FF       611   DECF:   CALL    CALF
 041F 76F9         612           JBE     CALF0
 0421 B43E         613           MOV     AH,3EH
 0423 8B1C         614           MOV     BX,[SI]
 0425 CD21         615           INT     21H
 0427 FF0E9628     616           DEC     WORD [INCLEV]
 042B              617   
 042B              618   ; END OF PAGE, TURN A NEW LEAF
 042B A1AA1F       619           MOV     AX,[PAGLEN]
 042E A3A028       620           MOV     [LSTLIN],AX
 0431 F8           621           CLC
 0432 C3           622           RET
 0433              623   
 0433              624   ; --------------------------------
 0433              625   ; WRITE LISTING
 0433 50           626   WLST:   PUSH    AX
 0434 52           627           PUSH    DX
 0435 53           628           PUSH    BX
 0436 56           629           PUSH    SI
 0437 57           630           PUSH    DI
 0438              631   
 0438              632   ; ONLY WRITE LISTING IF REQUESTED
 0438 F606702820   633           TEST    BYTE [FUNC],20H
 043D 746B         634           JZ      WLSTE
 043F BE7023       635           MOV     SI,BINBUF
 0442 BF7024       636           MOV     DI,LSTBUF
 0445 8B1E7428     637           MOV     BX,[BINLEN]
 0449 8B169A28     638           MOV     DX,[OLDPC]
 044D 89FD         639           MOV     BP,DI
 044F              640   
 044F              641   ; PRINT ADDRESS AND FIRST COUPLE
 044F              642   ; OF BYTES OF DATA
 044F E85E00       643           CALL    WLSTS
 0452              644   
 0452              645   ; PRINT SPACES AND LINE NUMBER
 0452 E88400       646           CALL    WLSTI
 0455              647   
 0455              648   ; SAVE POSITION FOR TAB TO SPACE
 0455              649   ; CONVERSION
 0455 89FD         650           MOV     BP,DI
R-ASSEMBLER VERSION 1.05C    RA.ASM                      14

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0457 53           651   WLSTT:  PUSH    BX
 0458 56           652           PUSH    SI
 0459              653   
 0459              654   ; WRITE INPUT LINE TO LISTING
 0459 BE7022       655           MOV     SI,TXTBUF
 045C 8B1E7228     656           MOV     BX,[TXTLEN]
 0460 85DB         657           TEST    BX,BX
 0462 7424         658           JZ      WLSTM
 0464 AC           659   WLSTL:  LODSB
 0465 84C0         660           TEST    AL,AL
 0467 741F         661           JZ      WLSTM
 0469 3C0D         662           CMP     AL,0DH
 046B 741B         663           JE      WLSTM
 046D 3C0A         664           CMP     AL,0AH
 046F 7417         665           JE      WLSTM
 0471 3C09         666           CMP     AL,9
 0473 750F         667           JNE     WLSTN
 0475              668   
 0475              669   ; CONVERT TABS TO SPACES FOR
 0475              670   ; JUSTICE AND GLORY AND POTENTIAL
 0475              671   ; FOR MISCONFIGURED TABS
 0475 89F9         672           MOV     CX,DI
 0477 29E9         673           SUB     CX,BP
 0479 83E107       674           AND     CX,7
 047C F7D9         675           NEG     CX
 047E 83C108       676           ADD     CX,8
 0481 B020         677           MOV     AL,20H
 0483 F3           678           REP
 0484              679   
 0484              680   ; ONLY REP IF THERE'S SPACES
 0484              681   ; TO FILL, OTHERWISE JUST SKIP
 0484              682   ; RIGHT TO THE STOSB
 0484 AA           683   WLSTN:  STOSB
 0485 4B           684           DEC     BX
 0486 75DC         685           JNZ     WLSTL
 0488              686   
 0488              687   ; LINE TERMINATED OR EMPTY
 0488 5E           688   WLSTM:  POP     SI
 0489 5B           689           POP     BX
 048A              690   
 048A              691   ; TERMINATE LINE AND WRITE TO
 048A              692   ; LISTING FILE
 048A 52           693   WLSTB:  PUSH    DX
 048B 53           694           PUSH    BX
 048C 56           695           PUSH    SI
 048D 57           696           PUSH    DI
 048E E87A00       697           CALL    WTITLE
 0491 5F           698           POP     DI
 0492 B80D0A       699           MOV     AX,0A0DH
 0495 AB           700           STOSW
R-ASSEMBLER VERSION 1.05C    RA.ASM                      15

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0496 BA7024       701           MOV     DX,LSTBUF
 0499 E8B604       702           CALL    WROTE
 049C 5E           703           POP     SI
 049D 5B           704           POP     BX
 049E 5A           705           POP     DX
 049F 7209         706           JC      WLSTE
 04A1 BF7024       707           MOV     DI,LSTBUF
 04A4              708   
 04A4              709   ; KEEP WRITING LEFTOVER DATA
 04A4              710   ; TO LISTING TO STAY WITHIN THE
 04A4              711   ; SANCTIONED HEXDUMP WIDTH
 04A4 E80900       712           CALL    WLSTS
 04A7 75E1         713           JNZ     WLSTB
 04A9 F8           714           CLC
 04AA 5F           715   WLSTE:  POP     DI
 04AB 5E           716           POP     SI
 04AC 5B           717           POP     BX
 04AD 5A           718           POP     DX
 04AE 58           719           POP     AX
 04AF C3           720           RET
 04B0              721   
 04B0              722   ; --------------------------------
 04B0              723   ; WRITE ADDRESS AND PARTIAL
 04B0              724   ; HEXDUMP
 04B0 B020         725   WLSTS:  MOV     AL,20H
 04B2 FC           726           CLD
 04B3 AA           727           STOSB
 04B4 89D0         728           MOV     AX,DX
 04B6 E88F04       729           CALL    WHEX
 04B9 85DB         730           TEST    BX,BX
 04BB 741B         731           JZ      WLSTX
 04BD 89D9         732           MOV     CX,BX
 04BF              733   
 04BF              734   ; THE LISTING HEX FIELD IS A
 04BF              735   ; SET WIDTH, AND OUTPUT EXCEEDING
 04BF              736   ; THE WIDTH HAS TO BE WRITTEN ON
 04BF              737   ; SEPARATE LINES
 04BF 3B0EA228     738           CMP     CX,[LSTWID]
 04C3 7604         739           JBE     WLSTG
 04C5 8B0EA228     740           MOV     CX,[LSTWID]
 04C9 29CB         741   WLSTG:  SUB     BX,CX
 04CB 01CA         742           ADD     DX,CX
 04CD B020         743           MOV     AL,20H
 04CF AA           744           STOSB
 04D0 AC           745   WLSTP:  LODSB
 04D1 E80B07       746           CALL    HALX
 04D4 E2FA         747           LOOP    WLSTP
 04D6 84C0         748           TEST    AL,AL
 04D8 C3           749   WLSTX:  RET
 04D9              750   
R-ASSEMBLER VERSION 1.05C    RA.ASM                      16

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 04D9              751   ; --------------------------------
 04D9              752   ; WRITE PADDING, LINE NUMBER
 04D9 52           753   WLSTI:  PUSH    DX
 04DA 53           754           PUSH    BX
 04DB 56           755           PUSH    SI
 04DC 8B0EA228     756           MOV     CX,[LSTWID]
 04E0 D1E1         757           SHL     CX,1
 04E2 81C17724     758           ADD     CX,LSTBUF+7
 04E6 29F9         759           SUB     CX,DI
 04E8 B020         760           MOV     AL,20H
 04EA F3AA         761           REP STOSB
 04EC E8E7FE       762           CALL    CALF
 04EF 7216         763           JC      WLSTO
 04F1 89FD         764           MOV     BP,DI
 04F3              765   
 04F3              766   ; LINE NUMBER IS SECOND PARAMETER
 04F3 8B4402       767           MOV     AX,[SI+2]
 04F6 B90A00       768           MOV     CX,10
 04F9 E82B07       769           CALL    WN
 04FC              770   
 04FC              771   ; PAD TO MAXIMUM DIGIT COUNT
 04FC              772   ; PLUS EXTRA SPACE
 04FC 89E9         773           MOV     CX,BP
 04FE 29F9         774           SUB     CX,DI
 0500 83C106       775           ADD     CX,6
 0503 B020         776           MOV     AL,20H
 0505 F3AA         777           REP STOSB
 0507 5E           778   WLSTO:  POP     SI
 0508 5B           779           POP     BX
 0509 5A           780           POP     DX
 050A C3           781           RET
 050B              782   
 050B              783   ; --------------------------------
 050B              784   ; WRITE PAGE TITLE AND/OR
 050B              785   ; INCREMENT LINE NUMBER
 050B FC           786   WTITLE: CLD
 050C BF7026       787           MOV     DI,TEMP2
 050F BE2C21       788           MOV     SI,AMSG
 0512 8D4D3A       789           LEA     CX,[DI+3AH]
 0515 A1A028       790           MOV     AX,[LSTLIN]
 0518              791   
 0518              792   ; START OF LISTING?  WRITE PAGE
 0518              793   ; HEADER.  LSTLIN CAN ONLY BE
 0518              794   ; ZERO HERE WHEN WTITLE HASN'T
 0518              795   ; BEEN CALLED HITHERTO
 0518 85C0         796           TEST    AX,AX
 051A 7413         797           JZ      WTITL1
 051C              798   
 051C              799   ; END OF PAGE?  WRITE PAGE FEED
 051C              800   ; CHARACTER AND THEN PROCEED TO
R-ASSEMBLER VERSION 1.05C    RA.ASM                      17

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 051C              801   ; WRITE PAGE HEADER
 051C 3B06AA1F     802           CMP     AX,[PAGLEN]
 0520 727D         803           JC      WTITL5
 0522 FF069E28     804           INC     WORD [PAGNUM]
 0526 C706A0280000 805           MOV     WORD [LSTLIN],0
 052C B00C         806           MOV     AL,0CH
 052E AA           807           STOSB
 052F              808   
 052F              809   ; WRITE HEADER WITH FILE NAME
 052F              810   ; AND PAGE NUMBER
 052F E84F09       811   WTITL1: CALL    WRM
 0532 E8A1FE       812           CALL    CALF
 0535 720B         813           JC      WTITL2
 0537 83C604       814           ADD     SI,4
 053A B82020       815           MOV     AX,2020H
 053D AB           816           STOSW
 053E AB           817           STOSW
 053F E83F09       818           CALL    WRM
 0542              819   
 0542              820   ; RIGHT JUSTIFY PAGE NUMBER
 0542 29F9         821   WTITL2: SUB     CX,DI
 0544 B020         822           MOV     AL,20H
 0546 F3AA         823           REP STOSB
 0548 A19E28       824           MOV     AX,[PAGNUM]
 054B B10A         825           MOV     CL,10
 054D E8D706       826           CALL    WN
 0550 B80D0A       827           MOV     AX,0A0DH
 0553 AB           828           STOSW
 0554              829   
 0554              830   ; WRITE USER DEFINED PAGE TITLE
 0554 BE7027       831           MOV     SI,TTLBUF
 0557 800C00       832           OR      BYTE [SI],0
 055A 7407         833           JZ      WTITL3
 055C E82209       834           CALL    WRM
 055F B80D0A       835           MOV     AX,0A0DH
 0562 AB           836           STOSW
 0563 AB           837   WTITL3: STOSW
 0564              838   
 0564              839   ; WRITE APPROPRIATE LISTING HEADER
 0564 BE1E21       840           MOV     SI,SYMLIN
 0567 830E982800   841           OR      WORD [PASS],0
 056C 741A         842           JZ      WTITL4
 056E 8B0EA228     843           MOV     CX,[LSTWID]
 0572 D1E1         844           SHL     CX,1
 0574 83C107       845           ADD     CX,7
 0577 01F9         846           ADD     CX,DI
 0579 BE0421       847           MOV     SI,BINLIN
 057C E80209       848           CALL    WRM
 057F 29F9         849           SUB     CX,DI
 0581 B020         850           MOV     AL,20H
R-ASSEMBLER VERSION 1.05C    RA.ASM                      18

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0583 F3AA         851           REP STOSB
 0585 BE1121       852           MOV     SI,SRCLIN
 0588 E8F608       853   WTITL4: CALL    WRM
 058B B80D0A       854           MOV     AX,0A0DH
 058E AB           855           STOSW
 058F              856   
 058F              857   ; AND DASHES
 058F B140         858           MOV     CL,40H
 0591 B02D         859           MOV     AL,2DH
 0593 F3AA         860           REP STOSB
 0595 B80D0A       861           MOV     AX,0A0DH
 0598 AB           862           STOSW
 0599 BA7026       863           MOV     DX,TEMP2
 059C E8B303       864           CALL    WROTE
 059F FF06A028     865   WTITL5: INC     WORD [LSTLIN]
 05A3 F8           866           CLC
 05A4 C3           867           RET
 05A5              868   
 05A5              869   ; --------------------------------
 05A5              870   ; READ FROM CURRENT INPUT FILE
 05A5 E82EFE       871   READ:   CALL    CALF
 05A8 722C         872           JC      READ1
 05AA              873   
 05AA              874   ; INCREMENT INPUT LINE NUMBER
 05AA FF4402       875           INC     WORD [SI+2]
 05AD 8B1C         876           MOV     BX,[SI]
 05AF F606702880   877           TEST    BYTE [FUNC],80H
 05B4 7423         878           JZ      READ2
 05B6              879   
 05B6              880   ; IF DISASSEMBLING, FIRST SEEK
 05B6              881   ; TO CURRENT PROGRAM COUNTER;
 05B6              882   ; TAKE CARE TO SKIP LOAD ADDRESS
 05B6 B80042       883           MOV     AX,4200H
 05B9 31C9         884           XOR     CX,CX
 05BB 8B167628     885           MOV     DX,[PC]
 05BF 2B167828     886           SUB     DX,[VORG]
 05C3 CD21         887           INT     21H
 05C5 7271         888           JC      READ8
 05C7              889   
 05C7              890   ; MAXIMUM 8086 INSTRUCTION LENGTH
 05C7              891   ; IS 8 BYTES
 05C7 B43F         892           MOV     AH,3FH
 05C9 B90800       893           MOV     CX,8
 05CC BA7023       894           MOV     DX,BINBUF
 05CF CD21         895           INT     21H
 05D1 7265         896           JC      READ8
 05D3 85C0         897           TEST    AX,AX
 05D5 C3           898           RET
 05D6              899   
 05D6              900   ; SET ZERO FLAG
R-ASSEMBLER VERSION 1.05C    RA.ASM                      19

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 05D6 29C0         901   READ1:  SUB     AX,AX
 05D8 C3           902           RET
 05D9              903   
 05D9              904   ; READ AN INDISCRIMINATE BLOCK
 05D9              905   ; OF TEXT
 05D9 B43F         906   READ2:  MOV     AH,3FH
 05DB B90001       907           MOV     CX,100H
 05DE BA7022       908           MOV     DX,TXTBUF
 05E1 CD21         909           INT     21H
 05E3 7253         910           JC      READ8
 05E5 85C0         911           TEST    AX,AX
 05E7 74ED         912           JZ      READ1
 05E9 89C1         913           MOV     CX,AX
 05EB 89C2         914           MOV     DX,AX
 05ED 31DB         915           XOR     BX,BX
 05EF              916   
 05EF              917   ; FIND FIRST LINE BREAK
 05EF BF7022       918           MOV     DI,TXTBUF
 05F2 8A01         919   READ3:  MOV     AL,[BX+DI]
 05F4 43           920           INC     BX
 05F5 B40A         921           MOV     AH,0AH
 05F7 3C0D         922           CMP     AL,0DH
 05F9 741E         923           JZ      READ6
 05FB B40D         924           MOV     AH,0DH
 05FD 3C0A         925           CMP     AL,0AH
 05FF 7418         926           JZ      READ6
 0601 E2EF         927           LOOP    READ3
 0603              928   
 0603              929   ; NO LINE TERMINATOR FOUND
 0603              930   ; IF THE LINE IS BELOW MAXIMUM
 0603              931   ; BUFFER LENGTH, IT MIGHT BE
 0603              932   ; THE FINAL LINE IN THE FILE
 0603 81FB0001     933           CMP     BX,100H
 0607 730B         934           JNC     READ5
 0609 8821         935           MOV     [BX+DI],AH
 060B 43           936           INC     BX
 060C 891E7228     937   READ4:  MOV     [TXTLEN],BX
 0610 85DB         938           TEST    BX,BX
 0612 F8           939           CLC
 0613 C3           940           RET
 0614              941   
 0614              942   ; LINE TOO LONG ERROR
 0614 B00E         943   READ5:  MOV     AL,0EH
 0616 E94C03       944           JMP     SCREAM
 0619              945   
 0619              946   ; CHECK FOR SECONDARY LINE
 0619              947   ; TERMINATOR AND SKIP PAST BOTH
 0619 E305         948   READ6:  JCXZ    READ7
 061B 3821         949           CMP     [BX+DI],AH
 061D 7501         950           JNZ     READ7
R-ASSEMBLER VERSION 1.05C    RA.ASM                      20

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 061F 43           951           INC     BX
 0620              952   
 0620              953   ; ZERO-TERMINATE LINE FOR
 0620              954   ; EXTRA SAFETY
 0620 30C0         955   READ7:  XOR     AL,AL
 0622 8801         956           MOV     [BX+DI],AL
 0624 89D8         957           MOV     AX,BX
 0626              958   
 0626              959   ; IF LINE IS THE EXACT REQUESTED
 0626              960   ; LENGTH, GO AHEAD AND TERMINATE
 0626 29D0         961           SUB     AX,DX
 0628 74E2         962           JZ      READ4
 062A              963   
 062A              964   ; OTHERWISE, SEEK BACK TO RIGHT
 062A              965   ; PAST LINE TERMINATORS
 062A 99           966           CWD
 062B 53           967           PUSH    BX
 062C B90142       968           MOV     CX,4201H
 062F 92           969           XCHG    AX,DX
 0630 91           970           XCHG    AX,CX
 0631 8B1C         971           MOV     BX,[SI]
 0633 CD21         972           INT     21H
 0635 5B           973           POP     BX
 0636 73D4         974           JNC     READ4
 0638              975   
 0638              976   ; PREPARE INPUT FILE NAME FOR
 0638              977   ; I/O COMPLAINT
 0638 BA0400       978   READ8:  MOV     DX,4
 063B 01F2         979           ADD     DX,SI
 063D B00F         980           MOV     AL,0FH
 063F E92303       981           JMP     SCREAM
 0642              982   
 0642              983   ; --------------------------------
 0642              984   ; WRITE TO BINARY OUTPUT
 0642 F606702810   985   WRITE:  TEST    BYTE [FUNC],10H
 0647 7450         986           JZ      WRITE4
 0649 F606702880   987           TEST    BYTE [FUNC],80H
 064E 7550         988           JNZ     WRITE6
 0650 A17428       989           MOV     AX,[BINLEN]
 0653 8B167A28     990           MOV     DX,[USIZE]
 0657              991   
 0657              992   ; IF THERE IS NO BINARY BUFFER
 0657              993   ; TO WRITE, ABORT
 0657 85C0         994           TEST    AX,AX
 0659 7443         995           JZ      WRITE5
 065B 85D2         996           TEST    DX,DX
 065D 7429         997           JZ      WRITE3
 065F              998   
 065F              999   ; IF THERE IS UNDEFINED DATA
 065F              1000  ; PRESENT, WRITE IT OUT AS ZEROES
R-ASSEMBLER VERSION 1.05C    RA.ASM                      21

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 065F BF7025       1001          MOV     DI,TEMP
 0662 B90001       1002          MOV     CX,100H
 0665 30C0         1003          XOR     AL,AL
 0667 FC           1004          CLD
 0668 F3AA         1005          REP STOSB
 066A 52           1006  WRITE1: PUSH    DX
 066B B90001       1007          MOV     CX,100H
 066E 39D1         1008          CMP     CX,DX
 0670 7202         1009          JB      WRITE2
 0672 89D1         1010          MOV     CX,DX
 0674 51           1011  WRITE2: PUSH    CX
 0675 B440         1012          MOV     AH,40H
 0677 BA7025       1013          MOV     DX,TEMP
 067A 8B1E9028     1014          MOV     BX,[OUTHDL]
 067E CD21         1015          INT     21H
 0680 722F         1016          JC      WRITE7
 0682 59           1017          POP     CX
 0683 5A           1018          POP     DX
 0684 29CA         1019          SUB     DX,CX
 0686 77E2         1020          JA      WRITE1
 0688              1021  
 0688              1022  ; WRITE BINARY BUFFER TO OUTPUT
 0688 B440         1023  WRITE3: MOV     AH,40H
 068A 8B0E7428     1024          MOV     CX,[BINLEN]
 068E BA7023       1025          MOV     DX,BINBUF
 0691 8B1E9028     1026          MOV     BX,[OUTHDL]
 0695 CD21         1027          INT     21H
 0697 7218         1028          JC      WRITE7
 0699              1029  
 0699              1030  ; RESET UNDEFINED DATA COUNTER
 0699 31C0         1031  WRITE4: XOR     AX,AX
 069B A37A28       1032          MOV     [USIZE],AX
 069E F8           1033  WRITE5: CLC
 069F C3           1034          RET
 06A0              1035  
 06A0              1036  ; IF DISASSEMBLER IS INVOKED
 06A0              1037  ; WRITE GENERATED TEXT BUFFER
 06A0              1038  ; INSTEAD
 06A0 B440         1039  WRITE6: MOV     AH,40H
 06A2 8B0E7228     1040          MOV     CX,[TXTLEN]
 06A6 BA7022       1041          MOV     DX,TXTBUF
 06A9 8B1E9028     1042          MOV     BX,[OUTHDL]
 06AD CD21         1043          INT     21H
 06AF 73E8         1044          JNC     WRITE4
 06B1 BAD028       1045  WRITE7: MOV     DX,OUTFN
 06B4 B00F         1046          MOV     AL,0FH
 06B6 E9AC02       1047          JMP     SCREAM
 06B9              1048  
 06B9              1049  ; --------------------------------
 06B9              1050  ; OPEN ALL REQUISITE FILES
R-ASSEMBLER VERSION 1.05C    RA.ASM                      22

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 06B9 BEB028       1051  OPEN:   MOV     SI,INFN
 06BC E8D5FC       1052          CALL    RFN1
 06BF E82CFD       1053          CALL    INCF
 06C2 7242         1054          JC      OPEN1
 06C4 BF7025       1055          MOV     DI,TEMP
 06C7 BEF920       1056          MOV     SI,INM
 06CA E8B407       1057          CALL    WRM
 06CD BEB028       1058          MOV     SI,INFN
 06D0 E8AE07       1059          CALL    WRM
 06D3 57           1060          PUSH    DI
 06D4              1061  
 06D4              1062  ; FOR EACH OF THE ADDITIONAL
 06D4              1063  ; FILES, TEST FOR THE REQUEST
 06D4              1064  ; FLAG AND CONFIRM OR REFUTE IT
 06D4              1065  ; (IF THERE IS A FILE ERROR)
 06D4              1066  ; SO IT CAN BE USED FOR
 06D4              1067  ; PROCESSING AND TO KEEP TALLY
 06D4              1068  ; OF WHAT'S OPEN
 06D4 B91010       1069          MOV     CX,1010H
 06D7 BAD028       1070          MOV     DX,OUTFN
 06DA BF9028       1071          MOV     DI,OUTHDL
 06DD E85D00       1072          CALL    OPENF
 06E0 7224         1073          JC      OPEN1
 06E2 B92020       1074          MOV     CX,2020H
 06E5 BAF028       1075          MOV     DX,LSTFN
 06E8 BF9228       1076          MOV     DI,LSTHDL
 06EB E84F00       1077          CALL    OPENF
 06EE 7216         1078          JC      OPEN1
 06F0 F70670280404 1079          TEST    WORD [FUNC],404H
 06F6 7513         1080          JNZ     OPEN2
 06F8 B94040       1081          MOV     CX,4040H
 06FB BA1029       1082          MOV     DX,SYMFN
 06FE BF9428       1083          MOV     DI,SYMHDL
 0701 E83900       1084          CALL    OPENF
 0704 7331         1085          JNC     OPEN3
 0706 B00B         1086  OPEN1:  MOV     AL,0BH
 0708 E95A02       1087          JMP     SCREAM
 070B              1088  
 070B              1089  ; IF DISASSEMBLER IS ENGAGED,
 070B              1090  ; READ SYMBOL FILE WHOLESALE INTO
 070B              1091  ; SYMBOL BUFFER
 070B 5F           1092  OPEN2:  POP     DI
 070C              1093  
 070C              1094  ; WRITE SYMBOL FILE NAME OUT
 070C              1095  ; THE BINARY ALONG WITH INPUT
 070C              1096  ; FILE
 070C B020         1097          MOV     AL,20H  
 070E AA           1098          STOSB
 070F BE1029       1099          MOV     SI,SYMFN
 0712 E86C07       1100          CALL    WRM
R-ASSEMBLER VERSION 1.05C    RA.ASM                      23

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0715 57           1101          PUSH    DI
 0716 B8003D       1102          MOV     AX,3D00H
 0719 BA1029       1103          MOV     DX,SYMFN
 071C CD21         1104          INT     21H
 071E 72E6         1105          JC      OPEN1
 0720 89C3         1106          MOV     BX,AX
 0722 B43F         1107          MOV     AH,3FH
 0724              1108  
 0724              1109  ; READ EVERYTHING THE SEGMENT
 0724              1110  ; CAN HOLD
 0724 89E1         1111          MOV     CX,SP
 0726 BA702A       1112          MOV     DX,MAPBUF
 0729 29D1         1113          SUB     CX,DX
 072B CD21         1114          INT     21H
 072D B43E         1115          MOV     AH,3EH
 072F CD21         1116          INT     21H
 0731 A1732B       1117          MOV     AX,[SYMBS+3]
 0734 A37828       1118          MOV     [VORG],AX
 0737 5F           1119  OPEN3:  POP     DI
 0738 E88002       1120          CALL    PRUNT
 073B              1121  
 073B              1122  ; TERMINATE WITHOUT ERROR FLAG
 073B F8           1123          CLC
 073C C3           1124          RET
 073D              1125  
 073D              1126  ; --------------------------------
 073D              1127  ; SAVE A FEW BYTES ON A
 073D              1128  ; REPETITIVE PROCESS OF TESTING,
 073D              1129  ; OPENING FILES, AND
 073D              1130  ; SETTING/RESETTING FLAGS
 073D 850E7028     1131  OPENF:  TEST    [FUNC],CX
 0741 740B         1132          JZ      OPENF1
 0743 51           1133          PUSH    CX
 0744 B43C         1134          MOV     AH,3CH
 0746 31C9         1135          XOR     CX,CX
 0748 CD21         1136          INT     21H
 074A 59           1137          POP     CX
 074B 7203         1138          JC      OPENF2
 074D AB           1139          STOSW
 074E F8           1140  OPENF1: CLC
 074F C3           1141          RET
 0750              1142  
 0750              1143  ; TURN OFF REQUEST FLAG SINCE
 0750              1144  ; THE FILE WAS NOT OPENED
 0750 F7D1         1145  OPENF2: NOT     CX
 0752 210E7028     1146          AND     [FUNC],CX
 0756 F9           1147          STC
 0757 C3           1148          RET
 0758              1149  
 0758              1150  ; --------------------------------
R-ASSEMBLER VERSION 1.05C    RA.ASM                      24

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0758              1151  ; WRITE SYMBOL DUMP AT THE END
 0758              1152  ; OF LISTING
 0758 FC           1153  SYMDMP: CLD
 0759 BE702B       1154          MOV     SI,SYMBS
 075C AD           1155          LODSW
 075D 85C0         1156          TEST    AX,AX
 075F 7501         1157          JNZ     SYMDM1
 0761 C3           1158  SYMDM0: RET
 0762 89C1         1159  SYMDM1: MOV     CX,AX
 0764 31C0         1160          XOR     AX,AX
 0766 A39828       1161          MOV     [PASS],AX
 0769 A17028       1162          MOV     AX,[FUNC]
 076C              1163  
 076C              1164  ; IF NEITHER SYMBOL FILE NOR
 076C              1165  ; LISTING IS REQUESTED, ABORT
 076C A96060       1166          TEST    AX,6060H
 076F 74F0         1167          JZ      SYMDM0
 0771              1168  
 0771              1169  ; IF SYMBOL FILE ISN'T REQUESTED
 0771              1170  ; SKIP TO SYMBOL LISTING
 0771 A92020       1171          TEST    AX,2020H
 0774 9C           1172          PUSHF
 0775 A94040       1173          TEST    AX,4040H
 0778 742B         1174          JZ      SYMSRT
 077A              1175  
 077A              1176  ; WRITE DATA MAP BUFFER
 077A 56           1177          PUSH    SI
 077B 51           1178          PUSH    CX
 077C B440         1179          MOV     AH,40H
 077E B90001       1180          MOV     CX,100H
 0781 BA702A       1181          MOV     DX,MAPBUF
 0784 8B1E9428     1182          MOV     BX,[SYMHDL]
 0788 CD21         1183          INT     21H
 078A 59           1184          POP     CX
 078B 51           1185          PUSH    CX
 078C              1186  
 078C              1187  ; FIND SYMBOL TABLE SIZE
 078C AC           1188  SYMDM2: LODSB
 078D 3C21         1189          CMP     AL,21H
 078F 73FB         1190          JNB     SYMDM2
 0791 AD           1191          LODSW
 0792 E2F8         1192          LOOP    SYMDM2
 0794              1193  
 0794              1194  ; WRITE TABLE WHOLESALE
 0794 B440         1195          MOV     AH,40H
 0796 BA702B       1196          MOV     DX,SYMBS
 0799 89F1         1197          MOV     CX,SI
 079B 29D1         1198          SUB     CX,DX
 079D 8B1E9428     1199          MOV     BX,[SYMHDL]
 07A1 CD21         1200          INT     21H
R-ASSEMBLER VERSION 1.05C    RA.ASM                      25

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 07A3 59           1201          POP     CX
 07A4 5E           1202          POP     SI
 07A5 9D           1203  SYMSRT: POPF
 07A6 74B9         1204          JZ      SYMDM0
 07A8 FC           1205          CLD
 07A9 83F902       1206          CMP     CX,2
 07AC              1207  
 07AC              1208  ; ONE SYMBOL?  YEAH, SORT THAT!
 07AC              1209  ; ...NOT!!
 07AC 725A         1210          JB      SYMLST
 07AE 51           1211          PUSH    CX
 07AF 89CA         1212  SYMSR1: MOV     DX,CX
 07B1 51           1213          PUSH    CX
 07B2 56           1214          PUSH    SI
 07B3              1215  
 07B3              1216  ; PERFORM DUMB BUBBLE SORT ON
 07B3              1217  ; SYMBOL TABLE
 07B3 31DB         1218  SYMSR2: XOR     BX,BX
 07B5              1219  
 07B5              1220  ; GET LENGTH OF CURRENT SYMBOL
 07B5 8A00         1221  SYMSR3: MOV     AL,[BX+SI]
 07B7 43           1222          INC     BX
 07B8 3C21         1223          CMP     AL,21H
 07BA 73F9         1224          JNB     SYMSR3
 07BC 43           1225          INC     BX
 07BD 43           1226          INC     BX
 07BE 8D38         1227          LEA     DI,[BX+SI]
 07C0 31ED         1228          XOR     BP,BP
 07C2              1229  
 07C2              1230  ; GET LENGTH OF SYMBOL RIGHT AFTER
 07C2 8A03         1231  SYMSR4: MOV     AL,[BP+DI]
 07C4 45           1232          INC     BP
 07C5 3C21         1233          CMP     AL,21H
 07C7 73F9         1234          JNB     SYMSR4
 07C9 45           1235          INC     BP
 07CA 45           1236          INC     BP
 07CB              1237  
 07CB              1238  ; GET LONGEST LENGTH
 07CB              1239  ; LOGIC BEING THAT IF ONE SYMBOL
 07CB              1240  ; IS SHORTER THAN THE OTHER BUT
 07CB              1241  ; THEY ARE IDENTICAL FOR AT LEAST
 07CB              1242  ; THAT LENGTH, THE SHORTEST WILL
 07CB              1243  ; STILL HAVE A TERMINATOR THAT
 07CB              1244  ; HAS A MUCH LOWER ASCII VALUE
 07CB 89D9         1245          MOV     CX,BX
 07CD 39E9         1246          CMP     CX,BP
 07CF 7302         1247          JNB     SYMSR5
 07D1 89E9         1248          MOV     CX,BP
 07D3              1249  
 07D3              1250  ; BRUTE ASCII COMPARE
R-ASSEMBLER VERSION 1.05C    RA.ASM                      26

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 07D3 56           1251  SYMSR5: PUSH    SI
 07D4 57           1252          PUSH    DI
 07D5 F3A6         1253          REPE CMPSB
 07D7 5F           1254          POP     DI
 07D8 5E           1255          POP     SI
 07D9 721C         1256          JB      SYMSR6
 07DB              1257  
 07DB              1258  ; SAVE LEFT SYMBOL TO TEMP BUFFER
 07DB 56           1259          PUSH    SI
 07DC 57           1260          PUSH    DI
 07DD BF7025       1261          MOV     DI,TEMP
 07E0 89D9         1262          MOV     CX,BX
 07E2 F3A4         1263          REP MOVSB
 07E4 5F           1264          POP     DI
 07E5 5E           1265          POP     SI
 07E6              1266  
 07E6              1267  ; MOVE RIGHT SYMBOL TO THE LEFT
 07E6 56           1268          PUSH    SI
 07E7 87FE         1269          XCHG    SI,DI
 07E9 89E9         1270          MOV     CX,BP
 07EB F3A4         1271          REP MOVSB
 07ED              1272  
 07ED              1273  ; MOVE BUFFERED SYMBOL
 07ED              1274  ; TO THE RIGHT
 07ED BE7025       1275          MOV     SI,TEMP
 07F0 89D9         1276          MOV     CX,BX
 07F2 F3A4         1277          REP MOVSB
 07F4 5E           1278          POP     SI
 07F5 89EB         1279          MOV     BX,BP
 07F7 01DE         1280  SYMSR6: ADD     SI,BX
 07F9              1281  
 07F9              1282  ; TWO SYMBOLS LEFT? THEY ARE
 07F9              1283  ; ALREADY PROCESSED, END HERE
 07F9 4A           1284          DEC     DX
 07FA 83FA02       1285          CMP     DX,2
 07FD 73B4         1286          JNC     SYMSR2
 07FF 5E           1287          POP     SI
 0800 59           1288          POP     CX
 0801              1289  
 0801              1290  ; SCAN FEWER EACH TIME, END WHEN
 0801              1291  ; ONLY TWO ARE LEFT, SINCE THEY
 0801              1292  ; ARE ALREADY PROCESSED
 0801 49           1293          DEC     CX
 0802 83F902       1294          CMP     CX,2
 0805 73A8         1295          JNC     SYMSR1
 0807 59           1296          POP     CX
 0808              1297  
 0808              1298  ; WRITE SYMBOL TABLE TO LISTING
 0808 31D2         1299  SYMLST: XOR     DX,DX
 080A              1300  
R-ASSEMBLER VERSION 1.05C    RA.ASM                      27

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 080A              1301  ; FORCE A NEW PAGE
 080A A1AA1F       1302          MOV     AX,[PAGLEN]
 080D A3A028       1303          MOV     [LSTLIN],AX
 0810 51           1304          PUSH    CX
 0811 56           1305          PUSH    SI
 0812              1306  
 0812              1307  ; GET LENGTH OF LONGEST SYMBOL
 0812 31DB         1308  SYMLS1: XOR     BX,BX
 0814 AC           1309  SYMLS2: LODSB
 0815 43           1310          INC     BX
 0816 3C21         1311          CMP     AL,21H
 0818 73FA         1312          JNB     SYMLS2
 081A AD           1313          LODSW
 081B 39DA         1314          CMP     DX,BX
 081D 7302         1315          JNC     SYMLS3
 081F 89DA         1316          MOV     DX,BX
 0821 E2EF         1317  SYMLS3: LOOP    SYMLS1
 0823 5E           1318          POP     SI
 0824 59           1319          POP     CX
 0825              1320  
 0825              1321  ; PREPARE A LINE OF SYMBOLS
 0825 BF7024       1322          MOV     DI,LSTBUF
 0828 51           1323  SYMLS4: PUSH    CX
 0829 89F9         1324          MOV     CX,DI
 082B FC           1325          CLD
 082C AC           1326  SYMLS5: LODSB
 082D AA           1327          STOSB
 082E 3C21         1328          CMP     AL,21H
 0830 73FA         1329          JNB     SYMLS5
 0832 4F           1330          DEC     DI
 0833 29F9         1331          SUB     CX,DI
 0835              1332  
 0835              1333  ; PAD WITH SPACES TO MAXIMUM
 0835              1334  ; DETECTED SYMBOL LENGTH AND
 0835              1335  ; WRITE VALUE
 0835 01D1         1336          ADD     CX,DX
 0837 B020         1337          MOV     AL,20H
 0839 F3AA         1338          REP STOSB
 083B AD           1339          LODSW
 083C E80901       1340          CALL    WHEX
 083F              1341  
 083F              1342  ; PREPARE FOR NEXT SYMBOL ON LINE
 083F B82020       1343          MOV     AX,2020H
 0842 AB           1344          STOSW
 0843 89F9         1345          MOV     CX,DI
 0845 81E97024     1346          SUB     CX,LSTBUF
 0849 01D1         1347          ADD     CX,DX
 084B              1348  
 084B              1349  ; MAKE SURE LINE DOES NOT EXCEED
 084B              1350  ; MAXIMUM LENGTH
R-ASSEMBLER VERSION 1.05C    RA.ASM                      28

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 084B 83F93F       1351          CMP     CX,3FH
 084E 59           1352          POP     CX
 084F 7206         1353          JB      SYMLS6
 0851 E80600       1354          CALL    SYMLS7
 0854 BF7024       1355          MOV     DI,LSTBUF
 0857 49           1356  SYMLS6: DEC     CX
 0858 75CE         1357          JNZ     SYMLS4
 085A              1358  
 085A              1359  ; WRITE LINE TO LISTING
 085A 81FF7024     1360  SYMLS7: CMP     DI,LSTBUF
 085E 7617         1361          JBE     SYMLS8
 0860 4F           1362          DEC     DI
 0861 4F           1363          DEC     DI
 0862 B80D0A       1364          MOV     AX,0A0DH
 0865 AB           1365          STOSW
 0866 51           1366          PUSH    CX
 0867 52           1367          PUSH    DX
 0868 56           1368          PUSH    SI
 0869              1369  
 0869              1370  ; KEEP UP LINE AND PAGE HANDLING
 0869 57           1371          PUSH    DI
 086A E89EFC       1372          CALL    WTITLE
 086D 5F           1373          POP     DI
 086E BA7024       1374          MOV     DX,LSTBUF
 0871 E8DE00       1375          CALL    WROTE
 0874 5E           1376          POP     SI
 0875 5A           1377          POP     DX
 0876 59           1378          POP     CX
 0877 C3           1379  SYMLS8: RET
 0878              1380  
 0878              1381  ; --------------------------------
 0878              1382  ; DUMP ALL EQUATES FROM SYMBOL
 0878              1383  ; TABLE ONE BY ONE
 0878 A07028       1384  EQDUMP: MOV     AL,[FUNC]
 087B 84C0         1385          TEST    AL,AL
 087D 79F8         1386          JNS     SYMLS8
 087F              1387  
 087F              1388  ; NO REASON TO TRY ANYTHING IF
 087F              1389  ; NO SYMBOL TABLE WAS LOADED
 087F A802         1390          TEST    AL,2
 0881 74F4         1391          JZ      SYMLS8
 0883 FC           1392          CLD
 0884 BE702B       1393          MOV     SI,SYMBS
 0887 AD           1394          LODSW
 0888 89C1         1395          MOV     CX,AX
 088A E32F         1396          JCXZ    EQDUM3
 088C F9           1397  EQDUM0: STC
 088D 19DB         1398          SBB     BX,BX
 088F 43           1399  EQDUM1: INC     BX
 0890 8A00         1400          MOV     AL,[BX+SI]
R-ASSEMBLER VERSION 1.05C    RA.ASM                      29

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0892 3C21         1401          CMP     AL,21H
 0894 73F9         1402          JNB     EQDUM1
 0896              1403  
 0896              1404  ; CHECK FOR EQUATE
 0896 A802         1405          TEST    AL,2
 0898 741A         1406          JZ      EQDUM2
 089A BF7022       1407          MOV     DI,TXTBUF
 089D 51           1408          PUSH    CX
 089E 89D9         1409          MOV     CX,BX
 08A0 FC           1410          CLD
 08A1 F3A4         1411          REP MOVSB
 08A3 46           1412          INC     SI
 08A4              1413  
 08A4              1414  ; WRITE VALUE, TERMINATE LINE,
 08A4              1415  ; AND WRITE TO OUTPUT(S)
 08A4 B8093D       1416          MOV     AX,3D09H
 08A7 AB           1417          STOSW
 08A8 AD           1418          LODSW
 08A9 E89C00       1419          CALL    WHEX
 08AC E81C00       1420          CALL    LINEND
 08AF 59           1421          POP     CX
 08B0 E2DA         1422          LOOP    EQDUM0
 08B2 EB07         1423          JMP     SHORT EQDUM3
 08B4 01DE         1424  EQDUM2: ADD     SI,BX
 08B6 83C603       1425          ADD     SI,3
 08B9 E2D1         1426          LOOP    EQDUM0
 08BB              1427  
 08BB              1428  ; WRITE ORG DIRECTIVE
 08BB BF7022       1429  EQDUM3: MOV     DI,TXTBUF
 08BE B009         1430          MOV     AL,9
 08C0 AA           1431          STOSB
 08C1 B8243D       1432          MOV     AX,3D00H+PCCHAR
 08C4 AB           1433          STOSW
 08C5 A17828       1434          MOV     AX,[VORG]
 08C8 E87D00       1435          CALL    WHEX
 08CB              1436  
 08CB              1437  ; REUSABLE LISTING FUNCTION
 08CB B80D0A       1438  LINEND: MOV     AX,0A0DH
 08CE FC           1439          CLD
 08CF AB           1440          STOSW
 08D0 89F8         1441          MOV     AX,DI
 08D2 2D7022       1442          SUB     AX,TXTBUF
 08D5 A37228       1443          MOV     [TXTLEN],AX
 08D8 56           1444          PUSH    SI
 08D9 E857FB       1445          CALL    WLST
 08DC E863FD       1446          CALL    WRITE
 08DF 5E           1447          POP     SI
 08E0 C3           1448          RET
 08E1              1449  
 08E1              1450  ; --------------------------------
R-ASSEMBLER VERSION 1.05C    RA.ASM                      30

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 08E1              1451  ; WRITE ALL TRAILING UNDEFINED
 08E1              1452  ; NAMED DATA AREAS TO LISTING
 08E1 A07028       1453  UDDUMP: MOV     AL,[FUNC]
 08E4 84C0         1454          TEST    AL,AL
 08E6 795F         1455          JNS     UDDUM3
 08E8              1456  
 08E8              1457  ; NO REASON TO TRY ANYTHING IF
 08E8              1458  ; NO SYMBOL TABLE WAS LOADED
 08E8 A802         1459          TEST    AL,2
 08EA 745B         1460          JZ      UDDUM3
 08EC FC           1461          CLD
 08ED BE752B       1462          MOV     SI,SYMBS+5
 08F0 8B0E702B     1463          MOV     CX,[SYMBS]
 08F4 83F902       1464          CMP     CX,2
 08F7 724E         1465          JB      UDDUM3
 08F9 49           1466          DEC     CX
 08FA C70674280000 1467          MOV     WORD [BINLEN],0
 0900 F9           1468  UDDUM0: STC
 0901 19DB         1469          SBB     BX,BX
 0903 43           1470  UDDUM1: INC     BX
 0904 8A00         1471          MOV     AL,[BX+SI]
 0906 3C21         1472          CMP     AL,21H
 0908 73F9         1473          JNB     UDDUM1
 090A              1474  
 090A              1475  ; CHECK FOR EQUATE
 090A A802         1476          TEST    AL,2
 090C 7532         1477          JNZ     UDDUM2
 090E              1478  
 090E              1479  ; CHECK IF PAST FINAL PC
 090E 8B4001       1480          MOV     AX,[BX+SI+1]
 0911 3B067628     1481          CMP     AX,[PC]
 0915 7229         1482          JB      UDDUM2
 0917 51           1483          PUSH    CX
 0918 BF7022       1484          MOV     DI,TXTBUF
 091B 89D9         1485          MOV     CX,BX
 091D FC           1486          CLD
 091E F3A4         1487          REP MOVSB
 0920 B83A09       1488          MOV     AX,93AH
 0923 AB           1489          STOSW
 0924 B8243D       1490          MOV     AX,3D00H+PCCHAR
 0927 AB           1491          STOSW
 0928 B42B         1492          MOV     AH,2BH
 092A AB           1493          STOSW
 092B 46           1494          INC     SI
 092C AD           1495          LODSW
 092D 2B069A28     1496          SUB     AX,[OLDPC]
 0931 01069A28     1497          ADD     [OLDPC],AX
 0935 E81000       1498          CALL    WHEX
 0938 E890FF       1499          CALL    LINEND
 093B 59           1500          POP     CX
R-ASSEMBLER VERSION 1.05C    RA.ASM                      31

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 093C E2C2         1501          LOOP    UDDUM0
 093E EB07         1502          JMP     SHORT UDDUM3
 0940 01DE         1503  UDDUM2: ADD     SI,BX
 0942 83C603       1504          ADD     SI,3
 0945 E2B9         1505          LOOP    UDDUM0
 0947 C3           1506  UDDUM3: RET
 0948              1507  
 0948              1508  ; --------------------------------
 0948              1509  ; WRITE 16-BIT HEX CONSTANT
 0948 50           1510  WHEX:   PUSH    AX
 0949 88E0         1511          MOV     AL,AH
 094B E89102       1512          CALL    HALX
 094E 58           1513          POP     AX
 094F E98D02       1514          JMP     HALX
 0952              1515  
 0952              1516  ; --------------------------------
 0952              1517  ; ANOTHER CHEAP WAY TO SAVE BYTES
 0952 89F9         1518  WROTE:  MOV     CX,DI
 0954 29D1         1519          SUB     CX,DX
 0956 B440         1520          MOV     AH,40H
 0958 8B1E9228     1521          MOV     BX,[LSTHDL]
 095C CD21         1522          INT     21H
 095E 73E7         1523          JNC     UDDUM3
 0960              1524  
 0960              1525  ; FROM HERE, A FALL-THROUGH
 0960 BAF028       1526  WROTE1: MOV     DX,LSTFN
 0963 B00F         1527          MOV     AL,0FH
 0965              1528  
 0965              1529  ; --------------------------------
 0965              1530  ; TURN AN ERROR CODE INTO A
 0965              1531  ; VISIBLE COMPLAINT ON THE
 0965              1532  ; TERMINAL INTERFACE
 0965 FC           1533  SCREAM: CLD
 0966 98           1534          CBW
 0967 BF7025       1535          MOV     DI,TEMP
 096A 89C1         1536          MOV     CX,AX
 096C              1537  
 096C              1538  ; ERROR CODE $0F IS A FILE ERROR
 096C              1539  ; INVOLVING THE PROGRAM INTERFACE
 096C 3C0F         1540          CMP     AL,0FH
 096E 7427         1541          JZ      SCRUM
 0970              1542  
 0970              1543  ; OTHERWISE THE ERROR IS WITHIN
 0970              1544  ; THE CURRENT INPUT FILE
 0970 E863FA       1545          CALL    CALF
 0973 7218         1546          JC      SCROOM
 0975 AD           1547          LODSW
 0976 AD           1548          LODSW
 0977 50           1549          PUSH    AX
 0978              1550  
R-ASSEMBLER VERSION 1.05C    RA.ASM                      32

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0978              1551  ; WRITE OUT FILE NAME
 0978 E80605       1552          CALL    WRM
 097B B028         1553          MOV     AL,28H
 097D AA           1554          STOSB
 097E 58           1555          POP     AX
 097F 51           1556          PUSH    CX
 0980 52           1557          PUSH    DX
 0981              1558  
 0981              1559  ; WRITE OUT LINE NUMBER
 0981 B90A00       1560          MOV     CX,10
 0984 E8A002       1561          CALL    WN
 0987 5A           1562          POP     DX
 0988 59           1563          POP     CX
 0989 B82920       1564          MOV     AX,2029H
 098C AB           1565          STOSW
 098D              1566  
 098D              1567  ; CHECK FOR ERROR CODES THAT
 098D              1568  ; INVOLVE SPECIAL HANDLING
 098D 80F905       1569  SCROOM: CMP     CL,5
 0990 740C         1570          JZ      SCROYM
 0992 80F90B       1571          CMP     CL,0BH
 0995 7511         1572          JNZ     SCROME
 0997              1573  
 0997              1574  ; WRITE NAME OF REQUESTED INCLUDE
 0997 89D6         1575  SCRUM:  MOV     SI,DX
 0999 E8E504       1576          CALL    WRM
 099C EB0A         1577          JMP     SHORT SCROME
 099E              1578  
 099E              1579  ; WRITE BYTE COUNT FOR MISJUMP
 099E 51           1580  SCROYM: PUSH    CX
 099F 89D0         1581          MOV     AX,DX
 09A1 B90A00       1582          MOV     CX,10
 09A4 E88002       1583          CALL    WN
 09A7 59           1584          POP     CX
 09A8              1585  
 09A8              1586  ; GET THE PERTINENT ERROR MESSAGE
 09A8              1587  ; BY BRUTE FORCE SCANNING THROUGH
 09A8              1588  ; THEM ALL
 09A8 BEB41F       1589  SCROME: MOV     SI,ERRMES
 09AB E307         1590          JCXZ    SCRAM
 09AD AC           1591  SCREM:  LODSB
 09AE 84C0         1592          TEST    AL,AL
 09B0 75FB         1593          JNZ     SCREM
 09B2 E2F9         1594          LOOP    SCREM
 09B4              1595  
 09B4              1596  ; WRITE ERROR MESSAGE AND
 09B4              1597  ; FALL THROUGH TO PRUNT
 09B4 E8CA04       1598  SCRAM:  CALL    WRM
 09B7 FF069C28     1599          INC     WORD [ERRORS]
 09BB              1600  
R-ASSEMBLER VERSION 1.05C    RA.ASM                      33

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 09BB              1601  ; --------------------------------
 09BB              1602  ; ECHO LINE CURRENTLY BEING
 09BB              1603  ; WRITTEN TO TERMINAL
 09BB BA7025       1604  PRUNT:  MOV     DX,TEMP
 09BE B80D0A       1605          MOV     AX,0A0DH
 09C1 AB           1606          STOSW
 09C2 89F9         1607          MOV     CX,DI
 09C4 29D1         1608          SUB     CX,DX
 09C6 51           1609          PUSH    CX
 09C7 52           1610          PUSH    DX
 09C8 B440         1611          MOV     AH,40H
 09CA BB0100       1612          MOV     BX,1
 09CD CD21         1613          INT     21H
 09CF 5A           1614          POP     DX
 09D0 59           1615          POP     CX
 09D1 F9           1616          STC
 09D2 C3           1617          RET
 09D3              1618  
 09D3              1619  ; --------------------------------
 09D3              1620  ; INCLUDE DIRECTIVE REQUESTED
 09D3 30C0         1621  P2:     XOR     AL,AL
 09D5 8800         1622          MOV     [BX+SI],AL
 09D7 E814FA       1623          CALL    INCF
 09DA B00B         1624  P2F:    MOV     AL,0BH
 09DC C3           1625          RET
 09DD              1626  
 09DD              1627  ; --------------------------------
 09DD              1628  ; INCBIN DIRECTIVE REQUESTED
 09DD B8003D       1629  P3:     MOV     AX,3D00H
 09E0 8800         1630          MOV     [BX+SI],AL
 09E2 89F2         1631          MOV     DX,SI
 09E4 CD21         1632          INT     21H
 09E6 72F2         1633          JC      P2F
 09E8 89C3         1634          MOV     BX,AX
 09EA B43F         1635  P3L:    MOV     AH,3FH
 09EC BA7025       1636          MOV     DX,TEMP
 09EF B90001       1637          MOV     CX,100H
 09F2 CD21         1638          INT     21H
 09F4 89F2         1639          MOV     DX,SI
 09F6 72E2         1640          JC      P2F
 09F8 01067628     1641          ADD     [PC],AX
 09FC 89C1         1642          MOV     CX,AX
 09FE E31B         1643          JCXZ    P3E
 0A00 F606702810   1644          TEST    BYTE [FUNC],10H
 0A05 7410         1645          JZ      P3S
 0A07 50           1646          PUSH    AX
 0A08 53           1647          PUSH    BX
 0A09 B440         1648          MOV     AH,40H
 0A0B 8B167025     1649          MOV     DX,[TEMP]
 0A0F 8B1E9028     1650          MOV     BX,[OUTHDL]
R-ASSEMBLER VERSION 1.05C    RA.ASM                      34

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0A13 CD21         1651          INT     21H
 0A15 5B           1652          POP     BX
 0A16 58           1653          POP     AX
 0A17 85C0         1654  P3S:    TEST    AX,AX
 0A19 75CF         1655          JNZ     P3L
 0A1B B43E         1656  P3E:    MOV     AH,3EH
 0A1D CD21         1657          INT     21H
 0A1F C3           1658          RET
 0A20              1659  
 0A20              1660  ; --------------------------------
 0A20              1661  ; TITLE DIRECTIVE REQUESTED
 0A20 FC           1662  P5:     CLD
 0A21 BF7027       1663          MOV     DI,TTLBUF
 0A24 89D9         1664          MOV     CX,BX
 0A26 F3A4         1665          REP MOVSB
 0A28 30C0         1666          XOR     AL,AL
 0A2A AA           1667          STOSB
 0A2B F8           1668          CLC
 0A2C C3           1669          RET
 0A2D              1670  
 0A2D              1671  ; --------------------------------
 0A2D              1672  ; PAGE DIRECTIVE REQUESTED
 0A2D 85D2         1673  P4:     TEST    DX,DX
 0A2F 7508         1674          JNZ     P4S
 0A31 A1AA1F       1675          MOV     AX,[PAGLEN]
 0A34 A3A028       1676          MOV     [LSTLIN],AX
 0A37 F8           1677          CLC
 0A38 C3           1678          RET
 0A39 8916AA1F     1679  P4S:    MOV     [PAGLEN],DX
 0A3D F8           1680          CLC
 0A3E C3           1681          RET
 0A3F              1682  
 0A3F              1683  ; --------------------------------
 0A3F              1684  ; ACTUAL ASSEMBLER MODULES
 0A3F              1685          INCLUDE GENERIC.ASM
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 35

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0A3F              1     ; --------------------------------
 0A3F              2     ; ASSEMBLE ONE LINE
 0A3F 31C0         3     ASM:    XOR     AX,AX
 0A41              4     
 0A41              5     ; SAVE STACK SO EVERY ERROR
 0A41              6     ; CAN RETURN HERE REGARDLESS OF
 0A41              7     ; STACK CONTENTS
 0A41 89267C28     8             MOV     [STK],SP
 0A45 A37428       9             MOV     [BINLEN],AX
 0A48 BE7022       10            MOV     SI,TXTBUF
 0A4B A07028       11            MOV     AL,[FUNC]
 0A4E 84C0         12            TEST    AL,AL
 0A50 7946         13            JNS     ASMLIN
 0A52 FC           14            CLD
 0A53 BF7022       15            MOV     DI,TXTBUF
 0A56              16    
 0A56              17    ; WRITE LABEL IF SYMBOLS ARE TO
 0A56              18    ; BE READ
 0A56 A802         19            TEST    AL,2
 0A58 7419         20            JZ      NOSYM
 0A5A A17628       21            MOV     AX,[PC]
 0A5D BE702B       22            MOV     SI,SYMBS
 0A60 B10C         23            MOV     CL,0CH
 0A62 E82E01       24            CALL    SDEF
 0A65 750C         25            JNZ     NOSYM
 0A67              26    
 0A67              27    ; WRITE SYMBOL IF IT IS NOT
 0A67              28    ; AN EQUATE OR BLANK
 0A67 4B           29            DEC     BX
 0A68 F60002       30            TEST    BYTE [BX+SI],2
 0A6B 7506         31            JNZ     NOSYM
 0A6D E81104       32            CALL    WRM
 0A70 B03A         33            MOV     AL,3AH
 0A72 AA           34            STOSB
 0A73 BE7023       35    NOSYM:  MOV     SI,BINBUF
 0A76 AC           36            LODSB
 0A77 A28428       37            MOV     [OPCODE],AL
 0A7A B009         38            MOV     AL,9
 0A7C AA           39            STOSB
 0A7D E8F50B       40            CALL    DISASM
 0A80 B80D0A       41            MOV     AX,0A0DH
 0A83 AB           42            STOSW
 0A84 89F8         43            MOV     AX,DI
 0A86 2D7022       44            SUB     AX,TXTBUF
 0A89 A37228       45            MOV     [TXTLEN],AX
 0A8C A17428       46            MOV     AX,[BINLEN]
 0A8F 01067628     47            ADD     [PC],AX
 0A93 F8           48            CLC
 0A94 C3           49            RET
 0A95 E8CC01       50    ASMLBL: CALL    LBL
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 36

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0A98              51    
 0A98              52    ; RESET STACK JUST IN CASE WE
 0A98              53    ; GOT BACK HERE FROM SOME OR
 0A98              54    ; OTHER ODD PLACE
 0A98 8B267C28     55    ASMLIN: MOV     SP,[STK]
 0A9C E85C00       56            CALL    CC
 0A9F 7429         57            JZ      SETEQ0
 0AA1              58    
 0AA1              59    ; EQUAL SIGN WORKS LIKE AN EQU
 0AA1 3C3D         60            CMP     AL,3DH
 0AA3 7413         61            JE      ASMEQU
 0AA5              62    
 0AA5              63    ; SET PROGRAM COUNTER BY CHARACTER
 0AA5 3C24         64            CMP     AL,PCCHAR
 0AA7 7423         65            JE      ASMORG
 0AA9 E85504       66            CALL    ASMCMD
 0AAC 75E7         67            JNZ     ASMLBL
 0AAE E84A00       68            CALL    CC
 0AB1 7417         69            JZ      SETEQ0
 0AB3              70    
 0AB3              71    ; CHARACTERS PAST END OF LINE
 0AB3              72    ; ERROR
 0AB3 B009         73            MOV     AL,9
 0AB5 E99502       74            JMP     FAIL
 0AB8 46           75    ASMEQU: INC     SI
 0AB9              76    
 0AB9              77    ; --------------------------------
 0AB9              78    ; EQU DIRECTIVE OR EQUAL SIGN
 0AB9 A07028       79    SETEQU: MOV     AL,[FUNC]
 0ABC A803         80            TEST    AL,3
 0ABE 740A         81            JZ      SETEQ0
 0AC0              82    
 0AC0              83    ; GET OR CALCULATE IMMEDIATE
 0AC0              84    ; AND STORE IT AT POINTER
 0AC0              85    ; GENERATED BY LBL
 0AC0 E8A102       86            CALL    RE
 0AC3 89EF         87            MOV     DI,BP
 0AC5 804DFF02     88            OR      BYTE [DI-1],2
 0AC9 AB           89            STOSW
 0ACA F8           90    SETEQ0: CLC
 0ACB C3           91            RET
 0ACC 46           92    ASMORG: INC     SI
 0ACD E82B00       93            CALL    CC
 0AD0 7424         94            JZ      ASMOER
 0AD2 3C3D         95            CMP     AL,3DH
 0AD4 7520         96            JNE     ASMOER
 0AD6 46           97            INC     SI
 0AD7              98    
 0AD7              99    ; --------------------------------
 0AD7              100   ; ORG DIRECTIVE
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 37

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0AD7 E88A02       101   SETORG: CALL    RE
 0ADA 8B167628     102           MOV     DX,[PC]
 0ADE A37628       103           MOV     [PC],AX
 0AE1              104   
 0AE1              105   ; CHECK FOR START OF PROGRAM
 0AE1 3B167828     106           CMP     DX,[VORG]
 0AE5 740A         107           JE      SETOR2
 0AE7              108   
 0AE7              109   ; IF NEW ADDRESS IS AHEAD,
 0AE7              110   ; DEFINE AS EMPTY SPACE
 0AE7 29D0         111           SUB     AX,DX
 0AE9 7204         112           JB      SETOR1
 0AEB 01067A28     113           ADD     [USIZE],AX
 0AEF F8           114   SETOR1: CLC
 0AF0 C3           115           RET
 0AF1              116   
 0AF1              117   ; SET LOAD ADDRESS AT
 0AF1              118   ; PROGRAM START
 0AF1 A3732B       119   SETOR2: MOV     [SYMBS+3],AX
 0AF4 F8           120           CLC
 0AF5 C3           121           RET
 0AF6              122   
 0AF6              123   ; SYNTAX ERROR
 0AF6 B001         124   ASMOER: MOV     AL,1
 0AF8 E95202       125           JMP     FAIL
 0AFB              126   
 0AFB              127   ; --------------------------------
 0AFB              128   ; SCAN FOR TOKENS AT TXTBUF
 0AFB              129   ; SET SI TO FIRST TOKEN
 0AFB              130   ; LOCATION, BX TO LENGTH,
 0AFB              131   ; AL TO FIRST CHAR
 0AFB 31DB         132   CC:     XOR     BX,BX
 0AFD 8A00         133   CCM:    MOV     AL,[BX+SI]
 0AFF 3C00         134           CMP     AL,0
 0B01 7442         135           JE      CCT
 0B03 3C0D         136           CMP     AL,0DH
 0B05 743E         137           JE      CCT
 0B07 3C21         138           CMP     AL,21H
 0B09 722F         139           JB      CCK
 0B0B 3C22         140           CMP     AL,22H
 0B0D 743B         141           JE      CCQ
 0B0F 3C27         142           CMP     AL,27H
 0B11 7437         143           JE      CCQ
 0B13 3C30         144           CMP     AL,30H
 0B15 722A         145           JB      CCS
 0B17 3C3A         146           CMP     AL,3AH
 0B19 721C         147           JB      CCL
 0B1B 3C3B         148           CMP     AL,3BH
 0B1D 7426         149           JE      CCT
 0B1F 3C41         150           CMP     AL,41H
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 38

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0B21 721E         151           JB      CCS
 0B23 3C5B         152           CMP     AL,5BH
 0B25 7210         153           JB      CCL
 0B27 3C5F         154           CMP     AL,5FH
 0B29 740C         155           JE      CCL
 0B2B 3C61         156           CMP     AL,61H
 0B2D 7212         157           JB      CCS
 0B2F 3C7B         158           CMP     AL,7BH
 0B31 730E         159           JNB     CCS
 0B33              160   
 0B33              161   ; CONVERT NORMAL LETTER
 0B33              162   ; TO UPPERCASE
 0B33 24DF         163           AND     AL,0DFH
 0B35 8800         164           MOV     [BX+SI],AL
 0B37              165   
 0B37              166   ; INCREMENT TOKEN LENGTH
 0B37 43           167   CCL:    INC     BX
 0B38 EBC3         168           JMP     SHORT CCM
 0B3A              169   
 0B3A              170   ; IF THERE IS A TOKEN, ABORT
 0B3A              171   ; AND RETURN IT, OTHERWISE
 0B3A              172   ; SKIP SPACE
 0B3A 85DB         173   CCK:    TEST    BX,BX
 0B3C 7507         174           JNZ     CCT
 0B3E 46           175           INC     SI
 0B3F EBBC         176           JMP     SHORT CCM
 0B41              177   
 0B41              178   ; IF THERE IS ALREADY A TOKEN
 0B41              179   ; ABORT AND RETURN EXISTING
 0B41              180   ; TOKEN, OTHERWISE RETURN
 0B41              181   ; SPECIAL CHARACTER
 0B41 85DB         182   CCS:    TEST    BX,BX
 0B43 740E         183           JZ      CCE
 0B45              184   
 0B45              185   ; ABORT AND RETURN FIRST
 0B45              186   ; CHARACTER ON LINE AND
 0B45              187   ; SET ZERO FLAG
 0B45 8A04         188   CCT:    MOV     AL,[SI]
 0B47 85DB         189           TEST    BX,BX
 0B49 C3           190           RET
 0B4A              191   
 0B4A              192   ; IF TOKEN EXISTS, ABORT AND
 0B4A              193   ; RETURN TOKEN, OTHERWISE
 0B4A              194   ; SCAN UNTIL NEXT MATCHING
 0B4A              195   ; QUOTE AND RETURN QUOTED
 0B4A              196   ; TEXT AS TOKEN
 0B4A 85DB         197   CCQ:    TEST    BX,BX
 0B4C 75F7         198           JNZ     CCT
 0B4E 43           199   CCW:    INC     BX
 0B4F 3A00         200           CMP     AL,[BX+SI]
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 39

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0B51 75FB         201           JNZ     CCW
 0B53 43           202   CCE:    INC     BX
 0B54 C3           203           RET
 0B55              204   
 0B55              205   ; --------------------------------
 0B55              206   ; TEST IF 16-BIT SIGNED NUMBER
 0B55              207   ; CAN UNAMBIGUOUSLY FIT WITHIN
 0B55              208   ; 8 BITS
 0B55 A880         209   AA:     TEST    AL,80H
 0B57 7503         210           JNZ     AA1
 0B59              211   
 0B59              212   ; IF SIGN BIT IS NOT SET ON
 0B59              213   ; LOWER BYTE, UPPER BYTE MUST
 0B59              214   ; BE ZERO
 0B59 84E4         215           TEST    AH,AH
 0B5B C3           216           RET
 0B5C              217   
 0B5C              218   ; IF SIGN BIT IS SET ON LOWER
 0B5C              219   ; BYTE, UPPER BYTE MUST BE FF
 0B5C 80FCFF       220   AA1:    CMP     AH,0FFH
 0B5F C3           221           RET
 0B60              222   
 0B60              223   ; --------------------------------
 0B60              224   ; SCAN SYMBOL TABLE FOR TOKEN
 0B60              225   ; AND RETURN DEFINITION IF FOUND
 0B60 8B15         226   SL:     MOV     DX,[DI]
 0B62 89D9         227           MOV     CX,BX
 0B64              228   
 0B64              229   ; ADVANCE TABLE POINTER, ADD
 0B64              230   ; 2 BYTES FOR DEFINITION
 0B64 47           231   SL1:    INC     DI
 0B65 47           232           INC     DI
 0B66 89CB         233           MOV     BX,CX
 0B68              234   
 0B68              235   ; DECREMENT COUNTER
 0B68 4A           236           DEC     DX
 0B69 7827         237           JS      SL6
 0B6B              238   
 0B6B              239   ; GET ENTRY LENGTH AND CHECK
 0B6B              240   ; WITH SYMBOL; SET BX TO -1
 0B6B              241   ; FIRST TO BE ABLE TO
 0B6B              242   ; PREINCREMENT
 0B6B F9           243           STC
 0B6C 19DB         244           SBB     BX,BX
 0B6E B020         245           MOV     AL,20H
 0B70 43           246   SL2:    INC     BX
 0B71 3A01         247           CMP     AL,[BX+DI]
 0B73 72FB         248           JB      SL2
 0B75 39CB         249           CMP     BX,CX
 0B77 750B         250           JNE     SL4
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 40

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0B79              251   
 0B79              252   ; CHECK ENTRY AGAINST SYMBOL
 0B79 4B           253   SL3:    DEC     BX
 0B7A 780D         254           JS      SL5
 0B7C 8A00         255           MOV     AL,[BX+SI]
 0B7E 3A01         256           CMP     AL,[BX+DI]
 0B80 74F7         257           JE      SL3
 0B82 89CB         258           MOV     BX,CX
 0B84 01DF         259   SL4:    ADD     DI,BX
 0B86 47           260           INC     DI
 0B87 75DB         261           JNE     SL1
 0B89              262   
 0B89              263   ; LOAD DEFINITION INTO AX
 0B89 89CB         264   SL5:    MOV     BX,CX
 0B8B 8B4101       265           MOV     AX,[BX+DI+1]
 0B8E 01DE         266           ADD     SI,BX
 0B90 39DB         267           CMP     BX,BX
 0B92 C3           268   SL6:    RET
 0B93              269   
 0B93              270   ; --------------------------------
 0B93              271   ; SCAN SYMBOL TABLE BY AX FOR
 0B93              272   ; DEFINITION, ACCORDING TO CL,
 0B93              273   ; AND RETURN SYMBOL
 0B93 8B14         274   SDEF:   MOV     DX,[SI]
 0B95 83C603       275           ADD     SI,3
 0B98 4A           276           DEC     DX
 0B99 753E         277           JNZ     SDEF7
 0B9B 4A           278           DEC     DX
 0B9C C3           279           RET
 0B9D              280   
 0B9D              281   ; GET ENTRY LENGTH
 0B9D F9           282   SDEF1:  STC
 0B9E 19DB         283           SBB     BX,BX
 0BA0 43           284   SDEF2:  INC     BX
 0BA1 803821       285           CMP     BYTE [BX+SI],21H
 0BA4 73FA         286           JNB     SDEF2
 0BA6 43           287           INC     BX
 0BA7              288   
 0BA7              289   ; CHECK DEFINITION
 0BA7 F6C10C       290           TEST    CL,0CH
 0BAA 740F         291           JZ      SDEF3
 0BAC F6C108       292           TEST    CL,8
 0BAF 741B         293           JZ      SDEF4
 0BB1 F6C104       294           TEST    CL,4
 0BB4 741B         295           JZ      SDEF5
 0BB6              296   
 0BB6              297   ; FULL WORD
 0BB6 3900         298           CMP     [BX+SI],AX
 0BB8 751D         299           JNE     SDEF6
 0BBA C3           300           RET
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 41

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0BBB              301   
 0BBB              302   ; SIGNED BYTE
 0BBB              303   ; FALLS THROUGH TO LOW BYTE
 0BBB F64001FF     304   SDEF3:  TEST    BYTE [BX+SI+1],0FFH
 0BBF 740B         305           JZ      SDEF4
 0BC1 807801FF     306           CMP     BYTE [BX+SI+1],0FFH
 0BC5 7510         307           JNE     SDEF6
 0BC7 F600FF       308           TEST    BYTE [BX+SI],0FFH
 0BCA 790B         309           JNS     SDEF6
 0BCC              310   
 0BCC              311   ; LOW BYTE
 0BCC 3800         312   SDEF4:  CMP     [BX+SI],AL
 0BCE 7507         313           JNE     SDEF6
 0BD0 C3           314           RET
 0BD1              315   
 0BD1              316   ; HIGH BYTE
 0BD1 384001       317   SDEF5:  CMP     [BX+SI+1],AL
 0BD4 7501         318           JNE     SDEF6
 0BD6 C3           319           RET
 0BD7              320   
 0BD7              321   ; SKIP ENTRY ENTIRELY
 0BD7 01DE         322   SDEF6:  ADD     SI,BX
 0BD9              323   
 0BD9              324   ; ACTUAL START OF LOOP, SINCE
 0BD9              325   ; THE TABLE STARTS ON A TWO-BYTE
 0BD9              326   ; VALUE; PREDECREMENTING DX
 0BD9              327   ; WILL ALSO RESET THE ZERO FLAG
 0BD9              328   ; ONCE IT'S RUN THROUGH WITH
 0BD9              329   ; NO RESULT
 0BD9 46           330   SDEF7:  INC     SI
 0BDA 46           331           INC     SI
 0BDB 4A           332           DEC     DX
 0BDC 79BF         333           JNS     SDEF1
 0BDE C3           334           RET
 0BDF              335   
 0BDF              336   ; --------------------------------
 0BDF              337   ; HUMDRUM HEX CONVERT
 0BDF 50           338   HALX:   PUSH    AX
 0BE0 D0E8         339           SHR     AL,1
 0BE2 D0E8         340           SHR     AL,1
 0BE4 D0E8         341           SHR     AL,1
 0BE6 D0E8         342           SHR     AL,1
 0BE8 E80100       343           CALL    HALL
 0BEB 58           344           POP     AX
 0BEC 240F         345   HALL:   AND     AL,0FH
 0BEE 0C30         346           OR      AL,30H
 0BF0 3C3A         347           CMP     AL,3AH
 0BF2 7202         348           JB      HALN
 0BF4 0407         349           ADD     AL,7
 0BF6              350   
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 42

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0BF6              351   ; WRITE CHARACTER TO
 0BF6              352   ; TEXT BUFFER
 0BF6 AA           353   HALN:   STOSB
 0BF7 C3           354           RET
 0BF8              355   
 0BF8              356   ; --------------------------------
 0BF8              357   ; READ 16-BIT NUMBER IN EITHER
 0BF8              358   ; BINARY, OCTAL, HEX, OR DECIMAL
 0BF8              359   ; AS DEFINED BY ROTATION COUNT
 0BF8              360   ; IN CL
 0BF8 FC           361   RN:     CLD
 0BF9              362   
 0BF9              363   ; BLANK OUT TEMPORARY STORAGE
 0BF9 31D2         364           XOR     DX,DX
 0BFB              365   
 0BFB              366   ; CL BETWEEN 1 AND 4 WORKS WITH
 0BFB              367   ; COMMON NUMBER BASES THAT ARE
 0BFB              368   ; POWERS OF 2.  ANYTHING ELSE
 0BFB              369   ; IS CHANGED TO ZERO WHICH WORKS
 0BFB              370   ; WITH DECIMAL
 0BFB 80F905       371           CMP     CL,5
 0BFE 7202         372           JB      RN1
 0C00 30C9         373           XOR     CL,CL
 0C02 84C9         374   RN1:    TEST    CL,CL
 0C04 750A         375           JNZ     RN2
 0C06              376   
 0C06              377   ; IF NOTHING IN CL, CONTINUE
 0C06              378   ; PROCESSING AS DECIMAL
 0C06 D1E2         379           SHL     DX,1
 0C08 89D0         380           MOV     AX,DX
 0C0A D1E2         381           SHL     DX,1
 0C0C D1E2         382           SHL     DX,1
 0C0E 01C2         383           ADD     DX,AX
 0C10 D3E2         384   RN2:    SHL     DX,CL
 0C12              385   
 0C12              386   ; READ ONE DIGIT FROM LINE
 0C12              387   ; AND USE ALL OF AX FOR IT
 0C12 30E4         388           XOR     AH,AH
 0C14 AC           389           LODSB
 0C15 2C30         390           SUB     AL,30H
 0C17              391   
 0C17              392   ; ANYTHING BELOW $30 WILL
 0C17              393   ; UNDERFLOW OUT OF ITS VALID
 0C17              394   ; DIAPAZON AND WILL NOT PASS THE
 0C17              395   ; FOLLOWING UPPER BOUNDARY TESTS
 0C17 3C0A         396           CMP     AL,0AH
 0C19 7206         397           JB      RN3
 0C1B 2C07         398           SUB     AL,7
 0C1D 3C0F         399           CMP     AL,0FH
 0C1F 7705         400           JNBE    RN0
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 43

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0C21 01C2         401   RN3:    ADD     DX,AX
 0C23 4B           402           DEC     BX
 0C24 75DC         403           JNZ     RN1
 0C26              404   
 0C26              405   ; IF THE TOKEN IS FULLY
 0C26              406   ; PROCESSED, BX WILL END UP
 0C26              407   ; TRIGGERING THE ZERO FLAG.  IF
 0C26              408   ; EXITED VIA THE EARLIER JUMP,
 0C26              409   ; THE ZERO FLAG ISN'T SET,
 0C26              410   ; SIGNALING AN INVALID DIGIT.
 0C26 C3           411   RN0:    RET
 0C27              412   
 0C27              413   ; --------------------------------
 0C27              414   ; WRITE 16-BIT NUMBER TO TEXT
 0C27              415   ; BUFFER AS A NUMERIC CONSTANT
 0C27              416   ; WITHOUT LEADING ZEROES
 0C27              417   ; IN BASE SPECIFIED BY CX
 0C27 FC           418   WN:     CLD
 0C28 39C8         419           CMP     AX,CX
 0C2A 7309         420           JNB     WN1
 0C2C 3D0A00       421           CMP     AX,0AH
 0C2F 7304         422           JNB     WN1
 0C31              423   
 0C31              424   ; NO NEED FOR A LONG RIGMAROLE
 0C31              425   ; IF THERE'S ONLY ONE DIGIT
 0C31 0C30         426           OR      AL,30H
 0C33 AA           427           STOSB
 0C34 C3           428           RET
 0C35 89FE         429   WN1:    MOV     SI,DI
 0C37 31D2         430   WN2:    XOR     DX,DX
 0C39              431   
 0C39              432   ; DIVIDE BY BASE AND GET
 0C39              433   ; REMAINDER FOR EACH DIGIT
 0C39 F7F1         434           DIV     CX
 0C3B 92           435           XCHG    AX,DX
 0C3C              436   
 0C3C              437   ; A VARIATION ON
 0C3C              438   ; ALLISON'S ALGORITHM
 0C3C 3C0A         439           CMP     AL,0AH
 0C3E 1C69         440           SBB     AL,69H
 0C40 2F           441           DAS
 0C41 AA           442           STOSB
 0C42 92           443           XCHG    AX,DX
 0C43 85C0         444           TEST    AX,AX
 0C45 75F0         445           JNZ     WN2
 0C47              446   
 0C47              447   ; DIGITS ARE WRITTEN TO BUFFER
 0C47              448   ; BACKWARDS AT FIRST, AND THE
 0C47              449   ; FINAL ONE WRITTEN IS THE
 0C47              450   ; FIRST DIGIT--IF IT IS NOT A
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 44

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0C47              451   ; NUMERIC, IT REQUIRES A
 0C47              452   ; LEADING ZERO
 0C47 80FA3A       453           CMP     DL,3AH
 0C4A 7203         454           JB      WN5
 0C4C B030         455           MOV     AL,30H
 0C4E AA           456           STOSB
 0C4F              457   
 0C4F              458   ; REVERSE ORDER OF DIGITS IN
 0C4F              459   ; TEXT BUFFER
 0C4F 89F9         460   WN5:    MOV     CX,DI
 0C51 29F1         461           SUB     CX,SI
 0C53 D1E9         462           SHR     CX,1
 0C55              463   
 0C55              464   ; UNLESS THERE'S ONLY ONE
 0C55 740C         465           JZ      WN0
 0C57 29CF         466           SUB     DI,CX
 0C59 01CE         467           ADD     SI,CX
 0C5B 4E           468   WN4:    DEC     SI
 0C5C 8A05         469           MOV     AL,[DI]
 0C5E 8604         470           XCHG    [SI],AL
 0C60 AA           471           STOSB
 0C61 E2F8         472           LOOP    WN4
 0C63 C3           473   WN0:    RET
 0C64              474   
 0C64              475   ; --------------------------------
 0C64              476   ; ADD SYMBOL TO SYMBOL TABLE
 0C64              477   ; OR REDEFINE EXISTING SYMBOL
 0C64 E894FE       478   LBL:    CALL    CC
 0C67 A07028       479           MOV     AL,[FUNC]
 0C6A 2403         480           AND     AL,3
 0C6C 7434         481           JZ      ERR3
 0C6E              482   
 0C6E              483   ; PROCESS DETECTED SYMBOL
 0C6E BF702B       484           MOV     DI,SYMBS
 0C71 E8ECFE       485           CALL    SL
 0C74 750F         486           JNZ     LBL1
 0C76              487   
 0C76              488   ; SYMBOL EXISTS, BUT CAN BE
 0C76              489   ; REDEFINED ON FUNCTION 2
 0C76 01DF         490           ADD     DI,BX
 0C78 47           491           INC     DI
 0C79 A07028       492           MOV     AL,[FUNC]
 0C7C 2402         493           AND     AL,2
 0C7E 7511         494           JNZ     LBL2
 0C80              495   
 0C80              496   ; DUPLICATE SYMBOL ERROR
 0C80 B00A         497           MOV     AL,0AH
 0C82 E9C800       498           JMP     FAIL
 0C85              499   
 0C85              500   ; WRITE SYMBOL TO TABLE
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 45

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0C85 89D9         501   LBL1:   MOV     CX,BX
 0C87 FC           502           CLD
 0C88 F3A4         503           REP MOVSB
 0C8A 30C0         504           XOR     AL,AL
 0C8C AA           505           STOSB
 0C8D              506   
 0C8D              507   ; INCREASE SYMBOL COUNT
 0C8D FF06702B     508           INC     WORD [SYMBS]
 0C91              509   
 0C91              510   ; SAVE POINTER TO ENTRY
 0C91 89FD         511   LBL2:   MOV     BP,DI
 0C93              512   
 0C93              513   ; GET CURRENT PROGRAM COUNTER
 0C93              514   ; AND STORE IN TABLE WITH THE
 0C93              515   ; NEW ENTRY
 0C93 A17628       516           MOV     AX,[PC]
 0C96 AB           517           STOSW
 0C97              518   
 0C97              519   ; CHECK FOR COLON OR INSTRUCTION
 0C97 E861FE       520           CALL    CC
 0C9A 7406         521           JZ      ERR3
 0C9C 3C3A         522           CMP     AL,3AH
 0C9E 7501         523           JNE     LBL3
 0CA0              524   
 0CA0              525   ; SKIP COLON
 0CA0 46           526           INC     SI
 0CA1 C3           527   LBL3:   RET
 0CA2              528   
 0CA2              529   ; INVALID INSTRUCTION ERROR
 0CA2 B003         530   ERR3:   MOV     AL,3
 0CA4 E9A600       531           JMP     FAIL
 0CA7              532   
 0CA7              533   ; --------------------------------
 0CA7              534   ; PROCESS DFB/DFW DIRECTIVE
 0CA7 BF7023       535   SETDFB: MOV     DI,BINBUF
 0CAA 31C9         536           XOR     CX,CX
 0CAC E84CFE       537   SETDMA: CALL    CC
 0CAF 746F         538           JZ      ERR8
 0CB1 3C3F         539           CMP     AL,3FH
 0CB3 7433         540           JE      SETDUD
 0CB5              541   
 0CB5              542   ; DEFINED DATA IS DISCOVERED SO
 0CB5              543   ; WRITE ALL PRECEDING UNDEFINED
 0CB5              544   ; DATA TO BUFFER AS ZEROES;
 0CB5              545   ; IF NONE, REP WILL EXECUTE
 0CB5              546   ; ZERO TIMES
 0CB5 50           547           PUSH    AX
 0CB6 31C0         548           XOR     AX,AX
 0CB8 F3AA         549           REP STOSB
 0CBA 58           550           POP     AX
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 46

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0CBB 3C22         551           CMP     AL,22H
 0CBD 7430         552           JE      SETDQU
 0CBF 3C27         553           CMP     AL,27H
 0CC1 742C         554           JE      SETDQU
 0CC3 51           555   SETDVA: PUSH    CX
 0CC4 57           556           PUSH    DI
 0CC5 E89C00       557           CALL    RE
 0CC8 5F           558           POP     DI
 0CC9 59           559           POP     CX
 0CCA AB           560           STOSW
 0CCB              561   
 0CCB              562   ; STORE ONLY THE NECESSARY
 0CCB              563   ; AMOUNT OF BYTES
 0CCB 803E842802   564           CMP     BYTE [OPCODE],2
 0CD0 7431         565           JE      SETDCM
 0CD2 7303         566           JNB     SETDVW
 0CD4 4F           567           DEC     DI
 0CD5 EB2C         568           JMP     SHORT SETDCM
 0CD7              569   
 0CD7              570   ; VALUES LARGER THAN 16 BITS
 0CD7              571   ; ARE SIGN EXTENDED TO FILL
 0CD7 D1E0         572   SETDVW: SHL     AX,1
 0CD9 18C0         573           SBB     AL,AL
 0CDB 51           574           PUSH    CX
 0CDC 8A0E8428     575           MOV     CL,[OPCODE]
 0CE0              576   
 0CE0              577   ; ALREADY HAVE TWO BYTES OF
 0CE0              578   ; VALUE STORED
 0CE0 80E902       579           SUB     CL,2
 0CE3 F3AA         580           REP STOSB
 0CE5 59           581           POP     CX
 0CE6 EB1B         582           JMP     SHORT SETDCM
 0CE8              583   
 0CE8              584   ; IF ANY UNDEFINED DATA IS
 0CE8              585   ; FOUND, ADD IT UP
 0CE8 020E8428     586   SETDUD: ADD     CL,[OPCODE]
 0CEC 46           587           INC     SI
 0CED EB14         588           JMP     SHORT SETDCM
 0CEF              589   
 0CEF              590   ; QUOTED STRINGS OF LESS THAN 3
 0CEF              591   ; BYTES ARE PROCESSED AS LITERAL
 0CEF              592   ; BINARY CONSTANTS
 0CEF A08428       593   SETDQU: MOV     AL,[OPCODE]
 0CF2 0403         594           ADD     AL,3
 0CF4 38C3         595           CMP     BL,AL
 0CF6 72CB         596           JB      SETDVA
 0CF8 51           597           PUSH    CX
 0CF9 89D9         598           MOV     CX,BX
 0CFB              599   
 0CFB              600   ; WRITE ONLY WHAT IS BETWEEN THE
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 47

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0CFB              601   ; QUOTATION MARKS AND SKIP MARKS
 0CFB 83E902       602           SUB     CX,2
 0CFE 46           603           INC     SI
 0CFF F3A4         604           REP MOVSB
 0D01 46           605           INC     SI
 0D02 59           606           POP     CX
 0D03              607   
 0D03              608   ; IF THERE ARE ANY MORE
 0D03              609   ; CHARACTERS ON THE LINE, THE
 0D03              610   ; FIRST MUST BE A COMMA
 0D03 E8F5FD       611   SETDCM: CALL    CC
 0D06 7407         612           JZ      SETDEN
 0D08 3C2C         613           CMP     AL,2CH
 0D0A 7518         614           JNE     ERR1
 0D0C 46           615           INC     SI
 0D0D EB9D         616           JMP     SHORT SETDMA
 0D0F              617   
 0D0F              618   ; ADD ANY UNDEFINED DATA TO THE
 0D0F              619   ; ACCUMULATED AMOUNT AND UPDATE
 0D0F              620   ; PC BY THE SAME AMOUNT.  THE
 0D0F              621   ; ASM PROCEDURE WILL UPDATE PC
 0D0F              622   ; BY THE LENGTH OF THE BINARY
 0D0F              623   ; OUTPUT PRODUCED, I.E. HOW FAR
 0D0F              624   ; THE BUFFER HAS BEEN SKIPPED
 0D0F 010E7A28     625   SETDEN: ADD     [USIZE],CX
 0D13 89F8         626           MOV     AX,DI
 0D15 2D7023       627           SUB     AX,BINBUF
 0D18 A37428       628           MOV     [BINLEN],AX
 0D1B 01C8         629           ADD     AX,CX
 0D1D E97101       630           JMP     STDAT
 0D20              631   
 0D20              632   ; MISSING OPERAND ERROR
 0D20 B008         633   ERR8:   MOV     AL,8
 0D22 EB29         634           JMP     SHORT FAIL
 0D24              635   
 0D24              636   ; SYNTAX ERROR
 0D24 B001         637   ERR1:   MOV     AL,1
 0D26 EB25         638           JMP     SHORT FAIL
 0D28              639   
 0D28              640   ; --------------------------------
 0D28              641   ; PREPARE FILE NAME FOR
 0D28              642   ; INCLUDE DIRECTIVE
 0D28 E8D0FD       643   SETINC: CALL    CC
 0D2B 74F3         644           JZ      ERR8
 0D2D 3C22         645           CMP     AL,22H
 0D2F 7404         646           JE      SETIN1
 0D31 3C27         647           CMP     AL,27H
 0D33 7508         648           JNE     SETIN2
 0D35 46           649   SETIN1: INC     SI
 0D36              650   
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 48

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0D36              651   ; IF ENCLOSED IN QUOTES, MUST
 0D36              652   ; BE AT LEAST 3 CHARACTERS LONG
 0D36              653   ; INCLUDING THE TWO MARKS
 0D36 83EB02       654           SUB     BX,2
 0D39 76E5         655           JBE     ERR8
 0D3B EB0D         656           JMP     SHORT SETEND
 0D3D              657   
 0D3D              658   ; IF NOT IN QUOTES, GET REST
 0D3D              659   ; OF LINE UNTIL FIRST EMPTY
 0D3D              660   ; SPACE OR SEMICOLON
 0D3D 31DB         661   SETIN2: XOR     BX,BX
 0D3F 43           662   SETIN3: INC     BX
 0D40 8A00         663           MOV     AL,[BX+SI]
 0D42 3C3B         664           CMP     AL,3BH
 0D44 7404         665           JE      SETEND
 0D46 3C21         666           CMP     AL,21H
 0D48 73F5         667           JNB     SETIN3
 0D4A              668   
 0D4A              669   ; PROCEED DIRECTLY INTO THE
 0D4A              670   ; I/O HANDLER
 0D4A A08428       671   SETEND: MOV     AL,[OPCODE]
 0D4D              672   
 0D4D              673   ; --------------------------------
 0D4D              674   ; ERROR AND I/O HANDLER
 0D4D 8B267C28     675   FAIL:   MOV     SP,[STK]
 0D51              676   
 0D51              677   ; FIRST RESET STACK TO TOP LEVEL
 0D51              678   ; CALLER, THE LINE ASSEMBLER
 0D51 3C05         679           CMP     AL,5
 0D53 750D         680           JNE     FAIL2
 0D55              681   
 0D55              682   ; ERROR CODE 5 IS RELATIVE JUMP
 0D55              683   ; OUT OF RANGE; CALCULATE THE
 0D55              684   ; ABSOLUTE AMOUNT OF BYTES
 0D55 8B168828     685           MOV     DX,[IMM]
 0D59 85D2         686           TEST    DX,DX
 0D5B 7902         687           JNS     FAIL1
 0D5D F7D2         688           NOT     DX
 0D5F 83EA7F       689   FAIL1:  SUB     DX,7FH
 0D62 F9           690   FAIL2:  STC
 0D63 C3           691           RET
 0D64              692   
 0D64              693   ; --------------------------------
 0D64              694   ; PRIMITIVE EXPRESSION EVALUATOR
 0D64 30C9         695   RE:     XOR     CL,CL
 0D66 31C0         696           XOR     AX,AX
 0D68 A38828       697           MOV     [IMM],AX
 0D6B E88DFD       698   REA:    CALL    CC
 0D6E 741C         699           JZ      RED
 0D70              700   
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 49

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0D70              701   ; PREPARE TO SET ARITHMETIC
 0D70              702   ; OPERATOR FLAGS
 0D70 3C2B         703           CMP     AL,2BH
 0D72 7412         704           JE      REC
 0D74 3C2D         705           CMP     AL,2DH
 0D76 740B         706           JE      REB
 0D78              707   
 0D78              708   ; GV WILL APPLY THE OPERATOR
 0D78              709   ; AND RESET ITS FLAG
 0D78 E81A00       710           CALL    GV
 0D7B 720F         711           JC      RED
 0D7D              712   
 0D7D              713   ; IF AN IDENTIFIER WAS FOUND,
 0D7D              714   ; GV HAS SET ITS FLAG INSTEAD
 0D7D 01068828     715           ADD     [IMM],AX
 0D81 EBE8         716           JMP     SHORT REA
 0D83              717   
 0D83              718   ; USE OF AN OPERATOR WILL RESET
 0D83              719   ; THE IDENTIFIER FLAG
 0D83 80F180       720   REB:    XOR     CL,80H
 0D86 80E1BF       721   REC:    AND     CL,0BFH
 0D89 46           722           INC     SI
 0D8A EBDF         723           JMP     SHORT REA
 0D8C              724   
 0D8C              725   ; CHECK FOR OPERAND TO MAKE
 0D8C              726   ; SURE THERE ARE NO DANGLING
 0D8C              727   ; OPERATORS
 0D8C F6C140       728   RED:    TEST    CL,40H
 0D8F 748F         729           JZ      ERR8
 0D91 A18828       730           MOV     AX,[IMM]
 0D94 C3           731           RET
 0D95              732   
 0D95              733   ; --------------------------------
 0D95              734   ; HANDLE ONE NUMERIC CONSTANT
 0D95              735   ; OR IDENTIFIER AND GET VALUE
 0D95 F6C140       736   GV:     TEST    CL,40H
 0D98              737   
 0D98              738   ; CHECK FLAGS IF IDENTIFIER WAS
 0D98              739   ; ALREADY PROCESSED
 0D98 752C         740           JNZ     GVA
 0D9A 3C24         741           CMP     AL,PCCHAR
 0D9C 741D         742           JE      GVC
 0D9E 3C22         743           CMP     AL,22H
 0DA0 7426         744           JE      GVQ
 0DA2 3C27         745           CMP     AL,27H
 0DA4 7422         746           JE      GVQ
 0DA6              747   
 0DA6              748   ; CHECK SIZE OVERRIDES AND START
 0DA6              749   ; OVER IF THERE ARE ANY
 0DA6 E82002       750           CALL    RNM
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 50

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0DA9 74EA         751           JZ      GV
 0DAB E8DB01       752           CALL    RNC
 0DAE 7368         753           JNC     GVV
 0DB0              754   
 0DB0              755   ; INVALID CHARACTERS MEANS THE
 0DB0              756   ; END OF THE IDENTIFIER
 0DB0 3C40         757           CMP     AL,40H
 0DB2 7212         758           JB      GVA
 0DB4 A07028       759           MOV     AL,[FUNC]
 0DB7 2403         760           AND     AL,3
 0DB9 752F         761           JNZ     GVL
 0DBB              762   
 0DBB              763   ; ONLY BOTHER READING LABELS
 0DBB              764   ; IF THE FUNCTION IS SPECIFIED
 0DBB              765   ; OTHERWISE JUST GET CURRENT PC
 0DBB 01DE         766   GVC:    ADD     SI,BX
 0DBD 80C901       767           OR      CL,1
 0DC0 8B167628     768           MOV     DX,[PC]
 0DC4 EB52         769           JMP     SHORT GVV
 0DC6              770   
 0DC6              771   ; RETURN WITH CARRY MEANS
 0DC6              772   ; UNEXPECTED ENTRY OR END
 0DC6              773   ; OF LINE
 0DC6 F9           774   GVA:    STC
 0DC7 C3           775           RET
 0DC8              776   
 0DC8              777   ; SAVE TWO PLACES PAST FIRST
 0DC8              778   ; QUOTATION MARK
 0DC8 8B5401       779   GVQ:    MOV     DX,[SI+1]
 0DCB 01DE         780           ADD     SI,BX
 0DCD              781   
 0DCD              782   ; 5 CHARACTERS INCLUDING 2
 0DCD              783   ; QUOTES MEANS 3 CHARACTER VALUE
 0DCD              784   ; AND THAT IS EXCESSIVE
 0DCD 83FB05       785           CMP     BX,5
 0DD0 730E         786           JNB     GV7
 0DD2              787   
 0DD2              788   ; 2 CHARACTER VALUE MEANS WHAT
 0DD2              789   ; WAS SAVED IS GOOD
 0DD2 83FB04       790           CMP     BX,4
 0DD5 7341         791           JNB     GVV
 0DD7              792   
 0DD7              793   ; 0 CHARACTER VALUE CANNOT BE
 0DD7 83FB03       794           CMP     BX,3
 0DDA 7209         795           JB      GV8
 0DDC              796   
 0DDC              797   ; 1 CHARACTER MEANS UPPER BYTE
 0DDC              798   ; OF TEMP VALUE MUST BE BLANKED
 0DDC 30F6         799           XOR     DH,DH
 0DDE 7438         800           JZ      GVV
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 51

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0DE0              801   
 0DE0              802   ; CONSTANT TOO LARGE ERROR
 0DE0 B007         803   GV7:    MOV     AL,7
 0DE2 E968FF       804           JMP     FAIL
 0DE5              805   
 0DE5              806   ; MISSING OPERAND ERROR
 0DE5 B008         807   GV8:    MOV     AL,8
 0DE7 E963FF       808           JMP     FAIL
 0DEA              809   
 0DEA              810   ; PROCESS SYMBOL REFERENCE
 0DEA 51           811   GVL:    PUSH    CX
 0DEB BF702B       812           MOV     DI,SYMBS
 0DEE E86FFD       813           CALL    SL
 0DF1 5B           814           POP     BX
 0DF2              815   
 0DF2              816   ; RESTORE BX AS IT IS ZERO
 0DF2              817   ; AFTER SKIPPING TOKEN
 0DF2 87CB         818           XCHG    BX,CX
 0DF4 BA0201       819           MOV     DX,102H
 0DF7 92           820           XCHG    DX,AX
 0DF8 740B         821           JZ      GVL1
 0DFA              822   
 0DFA              823   ; ONLY RAISE ALARM FOR MISSING
 0DFA              824   ; IDENTIFIERS ON CODE 2 TO ALLOW
 0DFA              825   ; CODE 1 TO COLLECT THEM AT A
 0DFA              826   ; LEISURELY PACE
 0DFA 84067028     827           TEST    AL,[FUNC]
 0DFE 74BB         828           JZ      GVC
 0E00              829   
 0E00              830   ; SYMBOL NOT FOUND ERROR
 0E00 B004         831           MOV     AL,4
 0E02 E948FF       832           JMP     FAIL
 0E05              833   
 0E05              834   ; A FORWARD SYMBOL REFERENCE
 0E05              835   ; MUST RESOLVE TO A 16 BIT VALUE
 0E05              836   ; BUT THE SIZE OF A BACKWARD
 0E05              837   ; REFERENCE CAN BE 8 BITS AND
 0E05              838   ; DETECTED 8-BIT BACKWARD
 0E05              839   ; REFERENCES ARE THEREFORE
 0E05              840   ; MARKED WITH BIT 1 ON THE
 0E05              841   ; TERMINATOR CHARACTER WHICH
 0E05              842   ; CODE 2 WILL LOOK FOR;
 0E05              843   ; CONSEQUENTLY, IT MAY NOT BE
 0E05              844   ; SET DURING A CODE 2 SEQUENCE
 0E05 84F6         845   GVL1:   TEST    DH,DH
 0E07 750C         846           JNZ     GVL3
 0E09 84067028     847           TEST    AL,[FUNC]
 0E0D 7502         848           JNZ     GVL2
 0E0F 0821         849           OR      [BX+DI],AH
 0E11 8421         850   GVL2:   TEST    [BX+DI],AH
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 52

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0E13 7503         851           JNZ     GVV
 0E15 80C902       852   GVL3:   OR      CL,2
 0E18              853   
 0E18              854   ; SET IDENTIFIER FLAG
 0E18 80C940       855   GVV:    OR      CL,40H
 0E1B 84C9         856           TEST    CL,CL
 0E1D 7905         857           JNS     GVNS
 0E1F 80F180       858           XOR     CL,80H
 0E22              859   
 0E22              860   ; IF MINUS FLAG IS SET, NEGATE
 0E22              861   ; ACQUIRED VALUE
 0E22 F7DA         862           NEG     DX
 0E24              863   
 0E24              864   ; CHECK FLAGS FOR ACTIVE SIZE
 0E24              865   ; OVERRIDES
 0E24 F6C110       866   GVNS:   TEST    CL,10H
 0E27 7518         867           JNZ     GVWO
 0E29 F6C108       868           TEST    CL,8
 0E2C 7507         869           JNZ     GVHB
 0E2E F6C104       870           TEST    CL,4
 0E31 7509         871           JNZ     GVLB
 0E33 EB0C         872           JMP     SHORT GVWO
 0E35 F6C104       873   GVHB:   TEST    CL,4
 0E38 7507         874           JNZ     GVWO
 0E3A 86F2         875           XCHG    DL,DH
 0E3C 30F6         876   GVLB:   XOR     DH,DH
 0E3E 80E1FC       877           AND     CL,0FCH
 0E41 89D0         878   GVWO:   MOV     AX,DX
 0E43 F8           879           CLC
 0E44 C3           880           RET
 0E45              881   
 0E45              882   ; --------------------------------
 0E45              883   ; CHECK VALUE FOR SYMBOL AND
 0E45              884   ; WRITE SYMBOL IF DETECTED
 0E45 F606702803   885   WSYMA:  TEST    BYTE [FUNC],3
 0E4A 7433         886           JZ      WSYMA4
 0E4C 56           887           PUSH    SI
 0E4D 30ED         888           XOR     CH,CH
 0E4F BE702B       889           MOV     SI,SYMBS
 0E52 E83EFD       890           CALL    SDEF
 0E55 7417         891           JZ      WSYMA1
 0E57              892   
 0E57              893   ; TRY SYMBOL-1
 0E57 40           894           INC     AX
 0E58 B52D         895           MOV     CH,2DH
 0E5A BE702B       896           MOV     SI,SYMBS
 0E5D E833FD       897           CALL    SDEF
 0E60 740C         898           JZ      WSYMA1
 0E62              899   
 0E62              900   ; TRY SYMBOL+1
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 53

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0E62 48           901           DEC     AX
 0E63 48           902           DEC     AX
 0E64 B52B         903           MOV     CH,2BH
 0E66 BE702B       904           MOV     SI,SYMBS
 0E69 E827FD       905           CALL    SDEF
 0E6C 750F         906           JNZ     WSYMA3
 0E6E E81000       907   WSYMA1: CALL    WRM
 0E71              908   
 0E71              909   ; IF THERE'S A SIGN CHARACTER
 0E71              910   ; IN X, WRITE SIGN AND 1
 0E71 84ED         911           TEST    CH,CH
 0E73 7405         912           JZ      WSYMA2
 0E75 B431         913           MOV     AH,31H
 0E77 88E8         914           MOV     AL,CH
 0E79 AB           915           STOSW
 0E7A 5E           916   WSYMA2: POP     SI
 0E7B F8           917           CLC
 0E7C C3           918           RET
 0E7D              919   
 0E7D              920   ; RESTORE ORIGINAL VALUE
 0E7D 40           921   WSYMA3: INC     AX
 0E7E 5E           922           POP     SI
 0E7F F9           923   WSYMA4: STC
 0E80 C3           924           RET
 0E81              925   
 0E81              926   ; --------------------------------
 0E81              927   ; WRITE SI TO DI
 0E81 FC           928   WRM:    CLD
 0E82 AC           929           LODSB
 0E83 AA           930           STOSB
 0E84 3C20         931           CMP     AL,20H
 0E86 73F9         932           JNB     WRM
 0E88 4F           933           DEC     DI
 0E89 C3           934           RET
 0E8A              935   
 0E8A              936   ; --------------------------------
 0E8A              937   ; DFS DIRECTIVE
 0E8A E8D7FE       938   SETDFS: CALL    RE
 0E8D 01067A28     939           ADD     [USIZE],AX
 0E91              940   
 0E91              941   ; --------------------------------
 0E91              942   ; STORE DATA AREA ADDRESS
 0E91 56           943   STDAT:  PUSH    SI
 0E92 F606702802   944           TEST    BYTE [FUNC],2
 0E97 7436         945           JZ      STDAT4
 0E99 BE722A       946           MOV     SI,MAPBUF+2
 0E9C 8B0E702A     947           MOV     CX,[MAPBUF]
 0EA0 E31E         948           JCXZ    STDAT3
 0EA2 8B167628     949   STDAT1: MOV     DX,[PC]
 0EA6              950   
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 54

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0EA6              951   ; CHECK IF PC WITHIN RECORD BOUNDS
 0EA6 3B14         952           CMP     DX,[SI]
 0EA8 7211         953           JB      STDAT2
 0EAA 395402       954           CMP     [SI+2],DX
 0EAD 720C         955           JB      STDAT2
 0EAF              956   
 0EAF              957   ; CHECK IF DATA AREA FITS
 0EAF              958   ; ENTIRELY
 0EAF 01C2         959           ADD     DX,AX
 0EB1 3B5402       960           CMP     DX,[SI+2]
 0EB4 7619         961           JBE     STDAT4
 0EB6              962   
 0EB6              963   ; EXTEND RECORD LENGTH AND QUIT
 0EB6 895402       964           MOV     [SI+2],DX
 0EB9 EB14         965           JMP     SHORT STDAT4
 0EBB              966   
 0EBB              967   ; SKIP TO NEXT RECORD
 0EBB 83C604       968   STDAT2: ADD     SI,4
 0EBE E2E2         969           LOOP    STDAT1
 0EC0              970   
 0EC0              971   ; STORE NEW RECORD
 0EC0 8B167628     972   STDAT3: MOV     DX,[PC]
 0EC4 8914         973           MOV     [SI],DX
 0EC6 01C2         974           ADD     DX,AX
 0EC8 895402       975           MOV     [SI+2],DX
 0ECB FF06702A     976           INC     WORD [MAPBUF]
 0ECF 5E           977   STDAT4: POP     SI
 0ED0              978   
 0ED0              979   ; ADVANCE PC
 0ED0 01067628     980           ADD     [PC],AX
 0ED4 F8           981           CLC
 0ED5 C3           982           RET
 0ED6              983   
 0ED6              984   ; --------------------------------
 0ED6              985   ; SCAN FOR DATA AREA ADDRESS
 0ED6 56           986   LDDAT:  PUSH    SI
 0ED7 F606702802   987           TEST    BYTE [FUNC],2
 0EDC 7420         988           JZ      LDDAT3
 0EDE BE722A       989           MOV     SI,MAPBUF+2
 0EE1 8B0E702A     990           MOV     CX,[MAPBUF]
 0EE5 E317         991           JCXZ    LDDAT3
 0EE7 A17628       992   LDDAT1: MOV     AX,[PC]
 0EEA              993   
 0EEA              994   ; CHECK IF PC WITHIN RECORD BOUNDS
 0EEA 3B04         995           CMP     AX,[SI]
 0EEC 720B         996           JB      LDDAT2
 0EEE 8B4402       997           MOV     AX,[SI+2]
 0EF1 2B067628     998           SUB     AX,[PC]
 0EF5 7202         999           JC      LDDAT2
 0EF7 5E           1000          POP     SI
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                 55

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0EF8 C3           1001          RET
 0EF9              1002  
 0EF9              1003  ; SKIP TO NEXT RECORD
 0EF9 83C604       1004  LDDAT2: ADD     SI,4
 0EFC E2E9         1005          LOOP    LDDAT1
 0EFE 5E           1006  LDDAT3: POP     SI
 0EFF F9           1007          STC
 0F00 C3           1008          RET
R-ASSEMBLER VERSION 1.05C    RA.ASM                      56

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0F01              1686          INCLUDE 8086.ASM
R-ASSEMBLER VERSION 1.05C    8086.ASM                    57

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0F01              1     ; --------------------------------
 0F01              2     ; 8086-SPECIFIC LINE ASSEMBLER
 0F01 31C0         3     ASMCMD: XOR     AX,AX
 0F03 BF8028       4             MOV     DI,WADJ
 0F06 B90800       5             MOV     CX,8
 0F09 FC           6             CLD
 0F0A F3AB         7             REP STOSW
 0F0C              8     
 0F0C              9     ; FIRST CHECK FOR MNEMONIC
 0F0C BF1C1C       10            MOV     DI,MNMTBL
 0F0F 80368A2820   11            XOR     BYTE [FLAGS],20H
 0F14 E849FC       12            CALL    SL
 0F17 BF4C19       13            MOV     DI,IHDL
 0F1A 7410         14            JZ      ASMCM1
 0F1C              15    
 0F1C              16    ; THEN CHECK FOR DIRECTIVE
 0F1C BF121F       17            MOV     DI,DIRTBL
 0F1F 80368A2820   18            XOR     BYTE [FLAGS],20H
 0F24 E839FC       19            CALL    SL
 0F27 BF6C19       20            MOV     DI,AHDL
 0F2A 7537         21            JNZ     ASMCM6
 0F2C              22    
 0F2C              23    ; CALL THE REQUISITE HANDLER
 0F2C 86068428     24    ASMCM1: XCHG    AL,[OPCODE]
 0F30 86E0         25            XCHG    AL,AH
 0F32 D1E0         26            SHL     AX,1
 0F34 01C7         27            ADD     DI,AX
 0F36 FF15         28            CALL    [DI]
 0F38              29    
 0F38              30    ; WRITE OUTPUT ACCORDING TO
 0F38              31    ; COMPONENT FLAGS
 0F38 30D2         32    ASMCM2: XOR     DL,DL
 0F3A 86168A28     33            XCHG    DL,[FLAGS]
 0F3E BF7023       34            MOV     DI,BINBUF
 0F41 033E7428     35            ADD     DI,[BINLEN]
 0F45 56           36            PUSH    SI
 0F46 57           37            PUSH    DI
 0F47 BE8228       38            MOV     SI,PREFIX
 0F4A FC           39            CLD
 0F4B              40    
 0F4B              41    ; SHIFT FLAG BITS ONE BY ONE
 0F4B              42    ; INTO CARRY FLAG
 0F4B AC           43    ASMCM3: LODSB
 0F4C D0E2         44            SHL     DL,1
 0F4E 7301         45            JNC     ASMCM4
 0F50 AA           46            STOSB
 0F51 75F8         47    ASMCM4: JNZ     ASMCM3
 0F53 59           48            POP     CX
 0F54 5E           49            POP     SI
 0F55 87F9         50            XCHG    CX,DI
R-ASSEMBLER VERSION 1.05C    8086.ASM                    58

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0F57 29F9         51            SUB     CX,DI
 0F59 010E7428     52            ADD     [BINLEN],CX
 0F5D 010E7628     53            ADD     [PC],CX
 0F61              54    
 0F61              55    ; SET ZERO FLAG TO SIGNAL
 0F61              56    ; SUCCESSFUL ASSEMBLY
 0F61 38C0         57    ASMCM5: CMP     AL,AL
 0F63 C3           58    ASMCM6: RET
 0F64              59    
 0F64              60    ; --------------------------------
 0F64              61    ; SCAN AND FLAG RESERVED WORD
 0F64 83FB02       62    SW:     CMP     BX,2
 0F67 721F         63            JB      SW3
 0F69              64    
 0F69              65    ; DON'T BOTHER SCANNING IF IT
 0F69              66    ; IS A NUMERIC
 0F69 3C30         67            CMP     AL,30H
 0F6B 7204         68            JB      SW1
 0F6D 3C3A         69            CMP     AL,3AH
 0F6F 7217         70            JB      SW3
 0F71              71    
 0F71              72    ; EVERY ONE OF THESE REGISTERS
 0F71              73    ; IS NEEDED FOR LATER PROCESSING
 0F71              74    ; AND SL DESTROYS THEM ALL
 0F71 51           75    SW1:    PUSH    CX
 0F72 52           76            PUSH    DX
 0F73 53           77            PUSH    BX
 0F74 56           78            PUSH    SI
 0F75 BF121F       79            MOV     DI,DIRTBL
 0F78 E8E5FB       80            CALL    SL
 0F7B              81    
 0F7B              82    ; WE REALLY ONLY NEED THE ZERO
 0F7B              83    ; FLAG FROM THIS OPERATION
 0F7B 5E           84            POP     SI
 0F7C 5B           85            POP     BX
 0F7D 5A           86            POP     DX
 0F7E 59           87            POP     CX
 0F7F 7505         88            JNZ     SW2
 0F81              89    
 0F81              90    ; SET FLAG IF VALID USABLE
 0F81              91    ; KEYWORD
 0F81 80FC05       92            CMP     AH,5
 0F84 7402         93            JE      SW3
 0F86 8A04         94    SW2:    MOV     AL,[SI]
 0F88 C3           95    SW3:    RET
 0F89              96    
 0F89              97    ; --------------------------------
 0F89              98    ; READ NUMERIC CONSTANT
 0F89 50           99    RNC:    PUSH    AX
 0F8A 51           100           PUSH    CX
R-ASSEMBLER VERSION 1.05C    8086.ASM                    59

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0F8B 56           101           PUSH    SI
 0F8C              102   
 0F8C              103   ; DEFAULT TO DECIMAL
 0F8C B105         104           MOV     CL,5
 0F8E 3C30         105           CMP     AL,30H
 0F90 7222         106           JB      RNC1
 0F92 3C3A         107           CMP     AL,3AH
 0F94 731E         108           JNB     RNC1
 0F96              109   
 0F96              110   ; SAVE END OF CONSTANT
 0F96              111   ; FOR LATER
 0F96 8D38         112           LEA     DI,[BX+SI]
 0F98 4B           113           DEC     BX
 0F99              114   
 0F99              115   ; GET FINAL CHARACTER TO
 0F99              116   ; CHECK FOR SIGIL
 0F99 8A00         117           MOV     AL,[BX+SI]
 0F9B 3C42         118           CMP     AL,42H
 0F9D 741A         119           JE      RNC2
 0F9F 3C48         120           CMP     AL,48H
 0FA1 7419         121           JE      RNC16
 0FA3 3C4F         122           CMP     AL,4FH
 0FA5 7414         123           JE      RNC8
 0FA7 3C51         124           CMP     AL,51H
 0FA9 7410         125           JE      RNC8
 0FAB 43           126           INC     BX
 0FAC              127   
 0FAC              128   ; NUMERIC DIGIT MEANS DECIMAL
 0FAC 3C30         129           CMP     AL,30H
 0FAE 7204         130           JB      RNC1
 0FB0 3C3A         131           CMP     AL,3AH
 0FB2 7209         132           JB      RNC10
 0FB4              133   
 0FB4              134   ; RESTORE OLD LOCATION
 0FB4 5E           135   RNC1:   POP     SI
 0FB5 59           136           POP     CX
 0FB6 58           137           POP     AX
 0FB7 F9           138           STC
 0FB8 C3           139           RET
 0FB9              140   
 0FB9              141   ; ROTATION COUNT SLIDE
 0FB9 49           142   RNC2:   DEC     CX
 0FBA 49           143   RNC4:   DEC     CX
 0FBB 49           144   RNC8:   DEC     CX
 0FBC 49           145   RNC16:  DEC     CX
 0FBD E838FC       146   RNC10:  CALL    RN
 0FC0 75F2         147           JNZ     RNC1
 0FC2 5E           148           POP     SI
 0FC3              149   
 0FC3              150   ; SKIP PAST CONSTANT
R-ASSEMBLER VERSION 1.05C    8086.ASM                    60

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0FC3 89FE         151           MOV     SI,DI
 0FC5 59           152           POP     CX
 0FC6 58           153           POP     AX
 0FC7 F8           154           CLC
 0FC8 C3           155           RET
 0FC9              156   
 0FC9              157   ; --------------------------------
 0FC9              158   ; SCAN FOR LOW/HIGH BYTE OVERRIDE
 0FC9 E898FF       159   RNM:    CALL    SW
 0FCC 7522         160           JNZ     RNM2
 0FCE 01DE         161           ADD     SI,BX
 0FD0              162   
 0FD0              163   ; PREPARE FOR OPERAND FLAG
 0FD0 B410         164           MOV     AH,10H
 0FD2 3C11         165           CMP     AL,11H
 0FD4 7411         166           JZ      RNM1
 0FD6 B408         167           MOV     AH,8
 0FD8 3C12         168           CMP     AL,12H
 0FDA 740B         169           JZ      RNM1
 0FDC B404         170           MOV     AH,4
 0FDE 3C13         171           CMP     AL,13H
 0FE0 7405         172           JZ      RNM1
 0FE2              173   
 0FE2              174   ; FALL-THROUGH KEYWORD ABUSE
 0FE2              175   ; ERROR DOUBLES AS DIRECTIVE
 0FE2              176   ; HANDLER
 0FE2 B00C         177   D5:     MOV     AL,0CH
 0FE4 E966FD       178           JMP     FAIL
 0FE7              179   
 0FE7              180   ; SHIFT BIT INTO POSITION AND
 0FE7              181   ; SET OPERAND FLAG
 0FE7 08E1         182   RNM1:   OR      CL,AH
 0FE9 E80FFB       183           CALL    CC
 0FEC 7403         184           JZ      RNMER8
 0FEE 38C0         185           CMP     AL,AL
 0FF0 C3           186   RNM2:   RET
 0FF1              187   
 0FF1              188   ; MISSING OPERAND ERROR
 0FF1 B008         189   RNMER8: MOV     AL,8
 0FF3 E957FD       190           JMP     FAIL
 0FF6              191   
 0FF6              192   ; --------------------------------
 0FF6              193   ; SCAN FOR OPERAND SIZE OVERRIDE
 0FF6 E802FB       194   BORW:   CALL    CC
 0FF9 74F6         195           JZ      RNMER8
 0FFB E866FF       196           CALL    SW
 0FFE 7529         197           JNZ     BORW2
 1000 3C10         198           CMP     AL,10H
 1002 7462         199           JE      RA1
 1004 7323         200           JNB     BORW2
R-ASSEMBLER VERSION 1.05C    8086.ASM                    61

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1006 01DE         201           ADD     SI,BX
 1008 BF8028       202           MOV     DI,WADJ
 100B              203   
 100B              204   ; SHIFT TO DISTANCE BYTE IF
 100B              205   ; DISTANCE OVERRIDE
 100B 3C08         206           CMP     AL,8
 100D 7201         207           JC      BORW1
 100F 47           208           INC     DI
 1010 8605         209   BORW1:  XCHG    AL,[DI]
 1012 84C0         210           TEST    AL,AL
 1014 7550         211           JNZ     RA1
 1016 E8E2FA       212           CALL    CC
 1019 740E         213           JZ      BORW2
 101B E846FF       214           CALL    SW
 101E 7509         215           JNZ     BORW2
 1020 3C10         216           CMP     AL,10H
 1022 7542         217           JNZ     RA1
 1024              218   
 1024              219   ; SKIP AND SCAN
 1024 01DE         220           ADD     SI,BX
 1026 E8D2FA       221           CALL    CC
 1029 C3           222   BORW2:  RET
 102A              223   
 102A              224   ; --------------------------------
 102A              225   ; READ ARGUMENTS
 102A 31D2         226   RA:     XOR     DX,DX
 102C 31C9         227           XOR     CX,CX
 102E              228   
 102E              229   ; RESET SIZE
 102E 89168028     230           MOV     [WADJ],DX
 1032 E8C1FF       231   RAS:    CALL    BORW
 1035 742C         232           JZ      RAIX
 1037              233   
 1037              234   ; BRACKET?  MEMORY?
 1037 3C5B         235           CMP     AL,5BH
 1039 7450         236           JZ      RAM
 103B              237   
 103B              238   ; REGISTER?
 103B E87A01       239           CALL    SCREG
 103E 742B         240           JZ      RAR
 1040              241   
 1040              242   ; NOPE, IDENTIFIER OR CONSTANT
 1040 E821FD       243   RAL:    CALL    RE
 1043 BA0403       244           MOV     DX,304H
 1046 86CE         245           XCHG    DH,CL
 1048 20CE         246           AND     DH,CL
 104A 750A         247           JNZ     RAIW
 104C 84E4         248           TEST    AH,AH
 104E 7405         249           JZ      RAIB
 1050              250   
R-ASSEMBLER VERSION 1.05C    8086.ASM                    62

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1050              251   ; IF UPPER BYTE IS NONZERO,
 1050              252   ; SEE IF IT STILL FITS IN A
 1050              253   ; BYTE SIGNED
 1050 E802FB       254           CALL    AA
 1053 7501         255           JNZ     RAIW
 1055 49           256   RAIB:   DEC     CX
 1056 A08028       257   RAIW:   MOV     AL,[WADJ]
 1059 84C0         258           TEST    AL,AL
 105B 7406         259           JZ      RAIX
 105D B102         260           MOV     CL,2
 105F 48           261           DEC     AX
 1060 7401         262           JZ      RAIX
 1062 41           263           INC     CX
 1063 E9C600       264   RAIX:   JMP     WARG
 1066 B001         265   RA1:    MOV     AL,1
 1068 E9E2FC       266           JMP     FAIL
 106B              267   
 106B              268   ; FIRST CHECK IF SEGMENT PREFIX
 106B E81C01       269   RAR:    CALL    GSPR
 106E 73C2         270           JNC     RAS
 1070 88C6         271           MOV     DH,AL
 1072              272   
 1072              273   ; CHECK FOR SEGMENT REGISTER
 1072              274   ; AND SAVE FLAGS FOR LATER
 1072 3C10         275           CMP     AL,10H
 1074 9F           276           LAHF
 1075              277   
 1075              278   ; SET SIZE BY REGISTER NUMBER;
 1075              279   ; THIS USES THE CARRY FLAG TO
 1075              280   ; AVOID JUMPS
 1075 3C08         281           CMP     AL,8
 1077 18C0         282           SBB     AL,AL
 1079 0402         283           ADD     AL,2
 107B A28028       284           MOV     [WADJ],AL
 107E              285   
 107E              286   ; NOW ACT ON SEGMENT REGISTER
 107E 9E           287           SAHF
 107F 18C0         288           SBB     AL,AL
 1081 0402         289           ADD     AL,2
 1083              290   
 1083              291   ; SAVE REGISTER NUMBER AND SIZE
 1083 80E607       292           AND     DH,7
 1086 88C2         293           MOV     DL,AL
 1088 E9A100       294           JMP     WARG
 108B              295   
 108B              296   ; HANDLE MEMORY REFERENCE
 108B 46           297   RAM:    INC     SI
 108C              298   
 108C              299   ; CHECK FOR SIZE OVERRIDE AGAIN
 108C E867FF       300           CALL    BORW
R-ASSEMBLER VERSION 1.05C    8086.ASM                    63

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 108F 31D2         301           XOR     DX,DX
 1091 30C9         302           XOR     CL,CL
 1093              303   
 1093              304   ; SIMPLE EXPRESSION EVALUATOR
 1093 E865FA       305   RAD:    CALL    CC
 1096 745E         306           JZ      RA8
 1098 3C5D         307           CMP     AL,5DH
 109A 745F         308           JZ      RADX
 109C 3C2B         309           CMP     AL,2BH
 109E 7419         310           JZ      RADP
 10A0 3C2D         311           CMP     AL,2DH
 10A2 7412         312           JZ      RADM
 10A4              313   
 10A4              314   ; IF NOT PLUS, MINUS, OR
 10A4              315   ; BRACKET, IT'S AN OPERAND
 10A4 E81101       316           CALL    SCREG
 10A7 7416         317           JZ      RADR
 10A9 52           318           PUSH    DX
 10AA E8E8FC       319           CALL    GV
 10AD 5A           320           POP     DX
 10AE 72B6         321           JC      RA1
 10B0 01068628     322           ADD     [DISP],AX
 10B4 EBDD         323           JMP     SHORT RAD
 10B6              324   
 10B6              325   ; SET OPERATOR FLAG
 10B6 80F180       326   RADM:   XOR     CL,80H
 10B9 80E1BF       327   RADP:   AND     CL,0BFH
 10BC 46           328           INC     SI
 10BD EBD4         329           JMP     SHORT RAD
 10BF              330   
 10BF              331   ; PREPARE REGISTER FLAGS
 10BF              332   ; BY ROTATING A BIT INTO
 10BF              333   ; POSITION AND PUTTING INTO
 10BF              334   ; OPERAND FLAGS, THEN TO BE
 10BF              335   ; USED IN THE BITMASK TO
 10BF              336   ; CHECK FOR DUPLICATES. SINCE
 10BF              337   ; THERE ARE ONLY FOUR VALID
 10BF              338   ; REGISTERS, THERE ARE ONLY
 10BF              339   ; FOUR BITS, SO A 16-BYTE
 10BF              340   ; LOOKUP TABLE ALONG WITH THE
 10BF              341   ; BIT MASK CAN BE USED TO
 10BF              342   ; TEST FOR ILLEGAL COMBINATIONS
 10BF B201         343   RADR:   MOV     DL,1
 10C1 3C0B         344           CMP     AL,11
 10C3 7421         345           JZ      BXD
 10C5 3C0D         346           CMP     AL,13
 10C7 741B         347           JZ      BPD
 10C9 3C0E         348           CMP     AL,14
 10CB 7413         349           JZ      SID
 10CD 3C0F         350           CMP     AL,15
R-ASSEMBLER VERSION 1.05C    8086.ASM                    64

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 10CF 7411         351           JZ      DID
 10D1 E8B600       352           CALL    GSPR
 10D4 73BD         353           JNC     RAD
 10D6              354   
 10D6              355   ; IF THE REGISTER IS NEITHER A
 10D6              356   ; VALID INDEX OR SEGMENT,
 10D6              357   ; RAISE INVALID REGISTER ERROR
 10D6 B00D         358   RA0D:   MOV     AL,0DH
 10D8 E972FC       359           JMP     FAIL
 10DB              360   
 10DB              361   ; INVALID ADDRESSING ERROR
 10DB B002         362   RA2:    MOV     AL,2
 10DD E96DFC       363           JMP     FAIL
 10E0              364   
 10E0              365   ; BITMASK ROTATION SLIDE
 10E0 D0E2         366   SID:    SHL     DL,1
 10E2 D0E2         367   DID:    SHL     DL,1
 10E4 D0E2         368   BPD:    SHL     DL,1
 10E6              369   
 10E6              370   ; REGISTER USED?
 10E6 84D6         371   BXD:    TEST    DH,DL
 10E8 75F1         372           JNZ     RA2
 10EA F6C180       373           TEST    CL,80H
 10ED 75EC         374           JNZ     RA2
 10EF 08D6         375           OR      DH,DL
 10F1 80C940       376           OR      CL,40H
 10F4 EB9D         377           JMP     SHORT RAD
 10F6 B008         378   RA8:    MOV     AL,8
 10F8 E952FC       379           JMP     FAIL
 10FB              380   
 10FB              381   ; IS OPERAND THERE?  NO
 10FB              382   ; DANGLING OPERATORS?
 10FB F6C140       383   RADX:   TEST    CL,40H
 10FE 74F6         384           JZ      RA8
 1100 46           385           INC     SI
 1101              386   
 1101              387   ; CHECK FOR VALID REGISTER
 1101              388   ; COMBINATION
 1101 88F0         389           MOV     AL,DH
 1103 BBE41B       390           MOV     BX,RM
 1106 D7           391           XLATB
 1107 3CFF         392           CMP     AL,0FFH
 1109 74CB         393           JZ      RA0D
 110B              394   
 110B              395   ; ISOLATE IDENTIFIER FLAG
 110B B203         396           MOV     DL,3
 110D 88C6         397           MOV     DH,AL
 110F              398   
 110F              399   ; NO REGISTERS USED?
 110F 3C0E         400           CMP     AL,0EH
R-ASSEMBLER VERSION 1.05C    8086.ASM                    65

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1111 7417         401           JZ      RADW
 1113              402   
 1113              403   ; NAMED ADDRESS IS RESOLVED
 1113              404   ; AS WORD-SIZED
 1113 20D1         405           AND     CL,DL
 1115 7513         406           JNZ     RADW
 1117              407   
 1117              408   ; NUMERIC VALUE IS EVALUATED
 1117              409   ; FOR SIZE
 1117 A18628       410           MOV     AX,[DISP]
 111A 85C0         411           TEST    AX,AX
 111C 7505         412           JNZ     RADB
 111E 80FE06       413           CMP     DH,6
 1121 7509         414           JNZ     WARG
 1123 B108         415   RADB:   MOV     CL,8
 1125 E82DFA       416           CALL    AA
 1128 7402         417           JZ      WARG
 112A B10C         418   RADW:   MOV     CL,0CH
 112C              419   
 112C              420   ; SET ARGUMENT TYPE
 112C 080E8A28     421   WARG:   OR      [FLAGS],CL
 1130 A18028       422           MOV     AX,[WADJ]
 1133 B104         423           MOV     CL,4
 1135              424   
 1135              425   ; IF ONE OPERAND PRESENT,
 1135              426   ; ROTATE IT INTO POSITION
 1135 F6068C280F   427           TEST    BYTE [ARGS],0FH
 113A 7404         428           JZ      NARGS
 113C D3C0         429           ROL     AX,CL
 113E D3C2         430           ROL     DX,CL
 1140 09068E28     431   NARGS:  OR      [SIZES],AX
 1144 09168C28     432           OR      [ARGS],DX
 1148 E8B0F9       433           CALL    CC
 114B 7508         434           JNZ     COMMA
 114D A18C28       435           MOV     AX,[ARGS]
 1150 8A2E8E28     436           MOV     CH,[SIZES]
 1154 C3           437           RET
 1155              438   
 1155              439   ; CHECK FOR COMMA BETWEEN
 1155              440   ; OPERANDS
 1155 46           441   COMMA:  INC     SI
 1156 3C3A         442           CMP     AL,3AH
 1158 740C         443           JZ      COL
 115A 3C2C         444           CMP     AL,2CH
 115C 7527         445           JNZ     GSPR1
 115E E89AF9       446           CALL    CC
 1161 7493         447           JZ      RA8
 1163 E9C4FE       448           JMP     RA
 1166              449   
 1166              450   ; COLON AS OPERAND IS A SPECIAL
R-ASSEMBLER VERSION 1.05C    8086.ASM                    66

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1166              451   ; CASE TO DENOTE SEGMENT:OFFSET
 1166              452   ; ADDRESSING
 1166 A08C28       453   COL:    MOV     AL,[ARGS]
 1169 3C04         454           CMP     AL,4
 116B 7518         455           JNZ     GSPR1
 116D A18828       456           MOV     AX,[IMM]
 1170 87068628     457           XCHG    AX,[DISP]
 1174 A38828       458           MOV     [IMM],AX
 1177 E8EAFB       459           CALL    RE
 117A BA0403       460           MOV     DX,304H
 117D 20CE         461           AND     DH,CL
 117F B10F         462           MOV     CL,0FH
 1181 EBA9         463           JMP     SHORT WARG
 1183 F9           464   GSPR0:  STC
 1184 C3           465           RET
 1185 B001         466   GSPR1:  MOV     AL,1
 1187 E9C3FB       467           JMP     FAIL
 118A              468   
 118A              469   ; --------------------------------
 118A              470   ; SCAN AND VERIFY SEGMENT PREFIX
 118A 3C10         471   GSPR:   CMP     AL,10H
 118C 72F5         472           JC      GSPR0
 118E 86E0         473           XCHG    AL,AH
 1190 E868F9       474           CALL    CC
 1193 86E0         475           XCHG    AL,AH
 1195 74EC         476           JZ      GSPR0
 1197              477   
 1197              478   ; A COLON IS REQUIRED FOR A
 1197              479   ; SEGMENT PREFIX
 1197 80FC3A       480           CMP     AH,3AH
 119A 75E7         481           JNZ     GSPR0
 119C 2403         482           AND     AL,3
 119E D0E0         483           SHL     AL,1
 11A0 D0E0         484           SHL     AL,1
 11A2 D0E0         485           SHL     AL,1
 11A4 0C26         486           OR      AL,26H
 11A6 46           487   GSPR2:  INC     SI
 11A7 A28328       488           MOV     [SEGPRE],AL
 11AA A08A28       489           MOV     AL,[FLAGS]
 11AD A840         490           TEST    AL,40H
 11AF 75D4         491           JNZ     GSPR1
 11B1 0C40         492           OR      AL,40H
 11B3 A28A28       493           MOV     [FLAGS],AL
 11B6 F8           494           CLC
 11B7 C3           495           RET
 11B8              496   
 11B8              497   ; --------------------------------
 11B8              498   ; SCAN REGISTER AND RETURN
 11B8              499   ; REGISTER INDEX
 11B8 51           500   SCREG:  PUSH    CX
R-ASSEMBLER VERSION 1.05C    8086.ASM                    67

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 11B9 83FB02       501           CMP     BX,2
 11BC 7515         502           JNZ     SCREG0
 11BE 8B04         503           MOV     AX,[SI]
 11C0 BFF41B       504           MOV     DI,REGS
 11C3 B91400       505           MOV     CX,14H
 11C6 FC           506           CLD
 11C7 F2AF         507           REPNE SCASW
 11C9 7508         508           JNZ     SCREG0
 11CB 01DE         509           ADD     SI,BX
 11CD B013         510           MOV     AL,13H
 11CF 28C8         511           SUB     AL,CL
 11D1 31DB         512           XOR     BX,BX
 11D3 59           513   SCREG0: POP     CX
 11D4 C3           514           RET
 11D5              515   
 11D5              516   ; --------------------------------
 11D5              517   ; ADJUST AND CHECK OPERAND
 11D5              518   ; SIZE CORRESPONDENCE
 11D5 50           519   WA:     PUSH    AX
 11D6 51           520           PUSH    CX
 11D7              521   
 11D7              522   ; SPLIT ARGUMENT SIZE NYBBLES
 11D7              523   ; INTO BYTES
 11D7 24F0         524           AND     AL,0F0H
 11D9 88EC         525           MOV     AH,CH
 11DB 86E8         526           XCHG    AL,CH
 11DD D2EC         527           SHR     AH,CL
 11DF              528   
 11DF              529   ; MASK OUT ARGUMENTS
 11DF 250F0F       530           AND     AX,0F0FH
 11E2 7422         531           JZ      WAZ
 11E4 84C0         532           TEST    AL,AL
 11E6 7417         533           JZ      WALZ
 11E8 84E4         534           TEST    AH,AH
 11EA 7415         535           JZ      WAHZ
 11EC 38E0         536           CMP     AL,AH
 11EE 7411         537           JZ      WAHZ
 11F0 80FD40       538           CMP     CH,40H
 11F3 740C         539           JZ      WAHZ
 11F5              540   
 11F5              541   ; OPERAND SIZE MISMATCH ERROR
 11F5 B006         542   WA6:    MOV     AL,6
 11F7 E953FB       543           JMP     FAIL
 11FA              544   
 11FA              545   ; INVALID OPERAND ERROR
 11FA 30C0         546   WA0:    XOR     AL,AL
 11FC E94EFB       547           JMP     FAIL
 11FF              548   
 11FF              549   ; ONLY ONE OPERAND IS EXPLICIT
 11FF 88E0         550   WALZ:   MOV     AL,AH
R-ASSEMBLER VERSION 1.05C    8086.ASM                    68

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1201 3C03         551   WAHZ:   CMP     AL,3
 1203 73F5         552           JNC     WA0
 1205 48           553           DEC     AX
 1206              554   
 1206              555   ; EQUAL OR NO EXPLICIT KNOWN
 1206              556   ; OPERAND SIZE
 1206 A28028       557   WAZ:    MOV     [WADJ],AL
 1209 F6068A2802   558           TEST    BYTE [FLAGS],2
 120E 740E         559           JZ      WAE
 1210 84C0         560           TEST    AL,AL
 1212 740D         561           JZ      WAB
 1214 80FC01       562           CMP     AH,1
 1217 7408         563           JZ      WAB
 1219 800E8A2801   564           OR      BYTE [FLAGS],1
 121E 59           565   WAE:    POP     CX
 121F 58           566           POP     AX
 1220 C3           567           RET
 1221              568   
 1221              569   ; FITS IN A BYTE?
 1221 80268A28FE   570   WAB:    AND     BYTE [FLAGS],0FEH
 1226 F606702801   571           TEST    BYTE [FUNC],1
 122B 75F1         572           JNZ     WAE
 122D A18828       573           MOV     AX,[IMM]
 1230 84E4         574           TEST    AH,AH
 1232 74EA         575           JZ      WAE
 1234 E81EF9       576           CALL    AA
 1237 74E5         577           JZ      WAE
 1239              578   
 1239              579   ; CONSTANT TOO LARGE ERROR
 1239 B007         580   WA7:    MOV     AL,7
 123B E90FFB       581           JMP     FAIL
 123E              582   
 123E              583   ; --------------------------------
 123E              584   ; GENERATE VALID MODIFIER BYTE
 123E              585   ; BASED ON ENCODED OPERANDS
 123E 800E8A2810   586   MMODRM: OR      BYTE [FLAGS],10H
 1243 A18C28       587           MOV     AX,[ARGS]
 1246 B104         588           MOV     CL,4
 1248 3C11         589           CMP     AL,11H
 124A 745C         590           JZ      MREGR
 124C 3C12         591           CMP     AL,12H
 124E 7456         592           JZ      MREGL
 1250 3C13         593           CMP     AL,13H
 1252 742E         594           JZ      MMEMR
 1254 3C21         595           CMP     AL,21H
 1256 7450         596           JZ      MREGR
 1258 3C23         597           CMP     AL,23H
 125A 7426         598           JZ      MMEMR
 125C 3C31         599           CMP     AL,31H
 125E 7420         600           JZ      MMEML
R-ASSEMBLER VERSION 1.05C    8086.ASM                    69

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1260 3C32         601           CMP     AL,32H
 1262 741C         602           JZ      MMEML
 1264              603   
 1264              604   ; ONLY ONE OPERAND?
 1264 250F0F       605           AND     AX,0F0FH
 1267 3C01         606           CMP     AL,1
 1269 743D         607           JZ      MREGR
 126B 3C03         608           CMP     AL,3
 126D 7413         609           JZ      MMEMR
 126F A18C28       610           MOV     AX,[ARGS]
 1272 D3C8         611           ROR     AX,CL
 1274 250F0F       612           AND     AX,0F0FH
 1277 3C01         613           CMP     AL,1
 1279 742D         614           JZ      MREGR
 127B 3C03         615           CMP     AL,3
 127D 7403         616           JZ      MMEMR
 127F C3           617           RET
 1280              618   
 1280              619   ; R/M DESTINATION:
 1280              620   ; TO BE ROTATED INTO POSITION
 1280 D2CC         621   MMEML:  ROR     AH,CL
 1282 88E0         622   MMEMR:  MOV     AL,AH
 1284 50           623           PUSH    AX
 1285 250770       624           AND     AX,7007H
 1288 D0CC         625           ROR     AH,1
 128A 08E0         626           OR      AL,AH
 128C 08068528     627           OR      [MODRM],AL
 1290 58           628           POP     AX
 1291 2408         629           AND     AL,8
 1293 7522         630           JNZ     MM0
 1295              631   
 1295              632   ; SET MODIFIER BITS ACCORDING
 1295              633   ; TO DISPLACEMENT
 1295 A08A28       634           MOV     AL,[FLAGS]
 1298 240C         635           AND     AL,0CH
 129A 741B         636           JZ      MM0
 129C B440         637           MOV     AH,40H
 129E 2404         638           AND     AL,4
 12A0 7411         639           JZ      MM8
 12A2 D0E4         640           SHL     AH,1
 12A4 EB0D         641           JMP     SHORT MM8
 12A6              642   
 12A6              643   ; SEGMENT REGISTER DESTINATION
 12A6              644   ; ALSO TO BE ROTATED
 12A6 D2CC         645   MREGL:  ROR     AH,CL
 12A8 88E0         646   MREGR:  MOV     AL,AH
 12AA D0CC         647           ROR     AH,1
 12AC 250738       648           AND     AX,3807H
 12AF              649   
 12AF              650   ; SET REGISTER MODIFIER
R-ASSEMBLER VERSION 1.05C    8086.ASM                    70

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 12AF 0CC0         651           OR      AL,0C0H
 12B1 08C4         652           OR      AH,AL
 12B3 08268528     653   MM8:    OR      [MODRM],AH
 12B7 C3           654   MM0:    RET
 12B8              655   
 12B8              656   ; --------------------------------
 12B8              657   ; SHIFT AND ROTATE HANDLER
 12B8 E86FFD       658   G2:     CALL    RA
 12BB              659   
 12BB              660   ; REMEMBER DETECTED ARGUMENTS
 12BB 50           661           PUSH    AX
 12BC              662   
 12BC              663   ; NEGLECT THEM FOR PURPOSES OF
 12BC              664   ; GENERATING A MODIFIER
 12BC 250F0F       665           AND     AX,0F0FH
 12BF A38C28       666           MOV     [ARGS],AX
 12C2              667   
 12C2              668   ; MODIFIER EXTENSION IS IN TABLE
 12C2 B0D0         669           MOV     AL,0D0H
 12C4 86068428     670           XCHG    AL,[OPCODE]
 12C8 A28528       671           MOV     [MODRM],AL
 12CB              672   
 12CB              673   ; GET OPERATION SIZE
 12CB 88E8         674           MOV     AL,CH
 12CD 240F         675           AND     AL,0FH
 12CF 7407         676           JZ      G2B
 12D1 48           677           DEC     AX
 12D2 7404         678           JZ      G2B
 12D4 08068428     679           OR      [OPCODE],AL
 12D8              680   
 12D8              681   ; HANDLE DETECTED OPERANDS
 12D8 58           682   G2B:    POP     AX
 12D9              683   
 12D9              684   ; ALLOW NON-CANON SINGLE
 12D9              685   ; OPERAND FORM
 12D9 25F0F0       686           AND     AX,0F0F0H
 12DC 741B         687           JZ      G2N
 12DE              688   
 12DE              689   ; OTHERWISE SECOND OPERAND MUST
 12DE              690   ; BE EITHER CL OR 1
 12DE 3D1010       691           CMP     AX,1010H
 12E1 7411         692           JZ      G2CL
 12E3 3C40         693           CMP     AL,40H
 12E5 7508         694           JNZ     G2F
 12E7 A18828       695           MOV     AX,[IMM]
 12EA 3D0100       696           CMP     AX,1
 12ED 740A         697           JZ      G2N
 12EF              698   
 12EF              699   ; SYNTAX ERROR
 12EF B001         700   G2F:    MOV     AL,1
R-ASSEMBLER VERSION 1.05C    8086.ASM                    71

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 12F1 E959FA       701           JMP     FAIL
 12F4 800E842802   702   G2CL:   OR      BYTE [OPCODE],2
 12F9 80268A28FC   703   G2N:    AND     BYTE [FLAGS],0FCH
 12FE E93DFF       704           JMP     MMODRM
 1301              705   
 1301              706   ; --------------------------------
 1301              707   ; ARITHMETIC/LOGIC HANDLER
 1301 E826FD       708   G1:     CALL    RA
 1304 E8CEFE       709           CALL    WA
 1307 B504         710           MOV     CH,4
 1309 80E40F       711           AND     AH,0FH
 130C 3D4100       712           CMP     AX,41H
 130F 7448         713           JZ      G1AI
 1311 3C11         714           CMP     AL,11H
 1313 743A         715           JZ      G1MR
 1315 3C13         716           CMP     AL,13H
 1317 7436         717           JZ      G1MR
 1319 3C31         718           CMP     AL,31H
 131B 742D         719           JZ      G1RM
 131D 3C41         720           CMP     AL,41H
 131F 7404         721           JZ      G1MI
 1321 3C43         722           CMP     AL,43H
 1323 753E         723           JNZ     ERR0
 1325              724   
 1325              725   ; 80-83 GROUP
 1325 B080         726   G1MI:   MOV     AL,80H
 1327 86068428     727           XCHG    AL,[OPCODE]
 132B 08068528     728           OR      [MODRM],AL
 132F              729   
 132F              730   ; IF IMMEDIATE FITS IN ONE BYTE
 132F              731   ; USE SPECIAL 82 OPCODES
 132F A18828       732           MOV     AX,[IMM]
 1332 E820F8       733           CALL    AA
 1335 7518         734           JNZ     G1MR
 1337 A08E28       735           MOV     AL,[SIZES]
 133A 3C22         736           CMP     AL,22H
 133C 7411         737           JZ      G1MR
 133E 80268A28FE   738           AND     BYTE [FLAGS],0FEH
 1343 F6068028FF   739           TEST    BYTE [WADJ],0FFH
 1348 7405         740           JZ      G1MR
 134A 800E842802   741   G1RM:   OR      BYTE [OPCODE],2
 134F A08028       742   G1MR:   MOV     AL,[WADJ]
 1352 08068428     743           OR      [OPCODE],AL
 1356 E9E5FE       744           JMP     MMODRM
 1359 A08028       745   G1AI:   MOV     AL,[WADJ]
 135C 08E8         746           OR      AL,CH
 135E 08068428     747           OR      [OPCODE],AL
 1362 C3           748           RET
 1363 B000         749   ERR0:   MOV     AL,0
 1365 E9E5F9       750           JMP     FAIL
R-ASSEMBLER VERSION 1.05C    8086.ASM                    72

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1368              751   
 1368              752   ; --------------------------------
 1368              753   ; ADVANCED ARITHMETIC/LOGIC
 1368              754   ; TEST / MUL / DIV / NEG / NOT
 1368 E8BFFC       755   G3:     CALL    RA
 136B E867FE       756           CALL    WA
 136E B5A8         757           MOV     CH,0A8H
 1370 80E40F       758           AND     AH,0FH
 1373 3D4100       759           CMP     AX,41H
 1376 74E1         760           JZ      G1AI
 1378 B5F6         761           MOV     CH,0F6H
 137A 3C01         762           CMP     AL,1
 137C 741A         763           JZ      G3R
 137E 3C03         764           CMP     AL,3
 1380 7416         765           JZ      G3R
 1382 3C41         766           CMP     AL,41H
 1384 7412         767           JZ      G3R
 1386 3C43         768           CMP     AL,43H
 1388 740E         769           JZ      G3R
 138A B584         770           MOV     CH,84H
 138C 3C11         771           CMP     AL,11H
 138E 7408         772           JZ      G3R
 1390 3C13         773           CMP     AL,13H
 1392 7404         774           JZ      G3R
 1394 3C31         775           CMP     AL,31H
 1396 75CB         776           JNZ     ERR0
 1398 A08028       777   G3R:    MOV     AL,[WADJ]
 139B 08E8         778           OR      AL,CH
 139D 86068428     779           XCHG    AL,[OPCODE]
 13A1 08068528     780           OR      [MODRM],AL
 13A5 E996FE       781           JMP     MMODRM
 13A8              782   
 13A8              783   ; --------------------------------
 13A8              784   ; SINGLE OPERAND [GENERALLY]
 13A8              785   ; ONE-BYTE INSTRUCTIONS
 13A8 E87FFC       786   G4:     CALL    RA
 13AB E827FE       787           CALL    WA
 13AE 3C02         788           CMP     AL,2
 13B0 7438         789           JZ      G4S
 13B2 3C03         790           CMP     AL,3
 13B4 7416         791           JZ      G4M
 13B6 3C01         792           CMP     AL,1
 13B8 75A9         793           JNZ     ERR0
 13BA 80FD02       794           CMP     CH,2
 13BD 720D         795           JC      G4M
 13BF A08428       796           MOV     AL,[OPCODE]
 13C2 2418         797           AND     AL,18H
 13C4 0C40         798           OR      AL,40H
 13C6 08E0         799           OR      AL,AH
 13C8 A28428       800           MOV     [OPCODE],AL
R-ASSEMBLER VERSION 1.05C    8086.ASM                    73

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 13CB C3           801           RET
 13CC              802   
 13CC              803   ; R/M OPERANDS USE MULTI-BYTE
 13CC              804   ; EXTENSION OPCODES; POP IS A
 13CC              805   ; SPECIAL CASE SCENARIO
 13CC A08428       806   G4M:    MOV     AL,[OPCODE]
 13CF 3C38         807           CMP     AL,38H
 13D1 B88F00       808           MOV     AX,8FH
 13D4 740E         809           JZ      G4P
 13D6 A08028       810           MOV     AL,[WADJ]
 13D9 84ED         811           TEST    CH,CH
 13DB 7501         812           JNZ     G4W
 13DD 40           813           INC     AX
 13DE              814   
 13DE              815   ; EVERYTHING ELSE GOES TO FE/FF
 13DE 0CFE         816   G4W:    OR      AL,0FEH
 13E0 8A268428     817           MOV     AH,[OPCODE]
 13E4 A38428       818   G4P:    MOV     [OPCODE],AX
 13E7 E954FE       819           JMP     MMODRM
 13EA              820   
 13EA              821   ; ROTATE BY 3, AS CX IS
 13EA              822   ; ALREADY 4
 13EA 49           823   G4S:    DEC     CX
 13EB D2E4         824           SHL     AH,CL
 13ED A08428       825           MOV     AL,[OPCODE]
 13F0              826   
 13F0              827   ; SEG PSEUDOINSTRUCTION IS A
 13F0              828   ; SPECIAL CASE
 13F0 3C26         829           CMP     AL,26H
 13F2 7404         830           JZ      G4PSR
 13F4 D2E8         831           SHR     AL,CL
 13F6 2401         832           AND     AL,1
 13F8 08E0         833   G4PSR:  OR      AL,AH
 13FA 0C06         834           OR      AL,6
 13FC A28428       835           MOV     [OPCODE],AL
 13FF C3           836           RET
 1400              837   
 1400              838   ; --------------------------------
 1400              839   ; NEAR AND FAR JUMPS AND CALLS
 1400 E827FC       840   G6:     CALL    RA
 1403              841   
 1403              842   ; INDIRECT VIA REGISTER
 1403 3C01         843           CMP     AL,1
 1405 740C         844           JZ      G6R
 1407              845   
 1407              846   ; DIRECT LABEL/CONSTANT
 1407 3C04         847           CMP     AL,4
 1409 743B         848           JZ      G6I
 140B              849   
 140B              850   ; EXPLICITLY SPECIFIED
R-ASSEMBLER VERSION 1.05C    8086.ASM                    74

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 140B              851   ; SEGMENT:OFFSET ADDRESSING
 140B 3C44         852           CMP     AL,44H
 140D 744A         853           JZ      G6IF
 140F              854   
 140F              855   ; INDIRECT VIA MEMORY
 140F 3C03         856           CMP     AL,3
 1411 756E         857           JNZ     G6F0
 1413 A08F28       858   G6R:    MOV     AL,[SIZES+1]
 1416 3C08         859           CMP     AL,8
 1418 7467         860           JZ      G6F0
 141A 3C09         861           CMP     AL,9
 141C 7417         862           JZ      G6RN
 141E 3C0A         863           CMP     AL,0AH
 1420 740E         864           JZ      G6RF
 1422              865   
 1422              866   ; IF NO DISTANCE OVERRIDE IS
 1422              867   ; SPECIFIED, CHECK FOR SIZE
 1422              868   ; OVERRIDES
 1422 88E8         869           MOV     AL,CH
 1424 3C00         870           CMP     AL,0
 1426 740D         871           JZ      G6RN
 1428 3C02         872           CMP     AL,2
 142A 7409         873           JZ      G6RN
 142C 3C03         874           CMP     AL,3
 142E 7551         875           JNZ     G6F0
 1430              876   
 1430              877   ; AT LEAST SOME ENCODING IS
 1430              878   ; SUFFICIENTLY REGULAR
 1430 800E852808   879   G6RF:   OR      BYTE [MODRM],8
 1435 B1FF         880   G6RN:   MOV     CL,0FFH
 1437 860E8428     881           XCHG    CL,[OPCODE]
 143B B010         882           MOV     AL,10H
 143D D2E0         883           SHL     AL,CL
 143F 08068528     884           OR      [MODRM],AL
 1443 E9F8FD       885           JMP     MMODRM
 1446              886   
 1446              887   ; FAR AND SHORT JUMPS NEED
 1446              888   ; EXPLICIT OVERRIDES SINCE NEAR
 1446              889   ; JUMP IS THE DEFAULT
 1446 A08F28       890   G6I:    MOV     AL,[SIZES+1]
 1449 3C00         891           CMP     AL,0
 144B 7439         892           JZ      G6IN
 144D 3C08         893           CMP     AL,8
 144F 7426         894           JZ      G6IS
 1451 3C09         895           CMP     AL,9
 1453 7431         896           JZ      G6IN
 1455 3C0A         897           CMP     AL,0AH
 1457 7528         898           JNZ     G6F0
 1459              899   
 1459              900   ; EXPLICIT SEGMENT:OFFSET FORM
R-ASSEMBLER VERSION 1.05C    8086.ASM                    75

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1459              901   ; NEEDS NO OVERRIDES
 1459 A18828       902   G6IF:   MOV     AX,[IMM]
 145C 87068628     903           XCHG    AX,[DISP]
 1460 A38828       904           MOV     [IMM],AX
 1463 800E8A280F   905           OR      BYTE [FLAGS],0FH
 1468 B8EA9A       906           MOV     AX,9AEAH
 146B 86268428     907           XCHG    AH,[OPCODE]
 146F 84E4         908           TEST    AH,AH
 1471 7403         909           JZ      G5X
 1473 A28428       910           MOV     [OPCODE],AL
 1476 C3           911   G5X:    RET
 1477              912   
 1477              913   ; JMP SHORT OVERLAPS WITH OTHER
 1477              914   ; SHORT JUMPS
 1477 B0EB         915   G6IS:   MOV     AL,0EBH
 1479 86068428     916           XCHG    AL,[OPCODE]
 147D 84C0         917           TEST    AL,AL
 147F 7520         918           JNZ     G5S
 1481 B000         919   G6F0:   MOV     AL,0
 1483 E9C7F8       920           JMP     FAIL
 1486              921   
 1486              922   ; REGULAR NEAR JUMP AS WE KNOW
 1486 A18828       923   G6IN:   MOV     AX,[IMM]
 1489 2B067628     924           SUB     AX,[PC]
 148D 2D0300       925           SUB     AX,3
 1490 A38828       926           MOV     [IMM],AX
 1493 800E8A2803   927           OR      BYTE [FLAGS],3
 1498 800E8428E8   928           OR      BYTE [OPCODE],0E8H
 149D C3           929           RET
 149E              930   
 149E              931   ; --------------------------------
 149E              932   ; SHORT, TYPICALLY CONDITIONAL
 149E              933   ; BRANCHES
 149E E889FB       934   G5:     CALL    RA
 14A1              935   
 14A1              936   ; ONLY ONE TRAILING BYTE
 14A1 80268A28FE   937   G5S:    AND     BYTE [FLAGS],0FEH
 14A6              938   
 14A6              939   ; CONVERT ABSOLUTE ADDRESS TO
 14A6              940   ; RELATIVE VALUE
 14A6 A18828       941           MOV     AX,[IMM]
 14A9 2B067628     942           SUB     AX,[PC]
 14AD 2D0200       943           SUB     AX,2
 14B0 A38828       944           MOV     [IMM],AX
 14B3              945   
 14B3              946   ; NEGLECT TO CHECK JUMP LENGTH
 14B3              947   ; UNTIL EVALUATION
 14B3 F606702802   948           TEST    BYTE [FUNC],2
 14B8 74BC         949           JZ      G5X
 14BA E898F6       950           CALL    AA
R-ASSEMBLER VERSION 1.05C    8086.ASM                    76

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 14BD 74B7         951           JZ      G5X
 14BF              952   
 14BF              953   ; JUMP OUT OF RANGE ERROR
 14BF B005         954           MOV     AL,5
 14C1 E989F8       955           JMP     FAIL
 14C4              956   
 14C4              957   ; --------------------------------
 14C4              958   ; LDS / LEA / LES DESERVE THEIR
 14C4              959   ; OWN LITTLE CATEGORY SO WE
 14C4              960   ; NEEDN'T DEAL WITH MORE KLUDGES
 14C4 E863FB       961   G8:     CALL    RA
 14C7 3C31         962           CMP     AL,31H
 14C9 75B6         963           JNZ     G6F0
 14CB E970FD       964           JMP     MMODRM
 14CE              965   
 14CE              966   ; --------------------------------
 14CE              967   ; MOV HANDLER
 14CE E859FB       968   G9:     CALL    RA
 14D1 E801FD       969           CALL    WA
 14D4 30ED         970           XOR     CH,CH
 14D6              971   
 14D6              972   ; THESE ARE BASICALLY LDA/STA
 14D6 3D31E0       973           CMP     AX,0E031H
 14D9 7437         974           JZ      G9A
 14DB 3D130E       975           CMP     AX,0E13H
 14DE 7430         976           JZ      G9A2
 14E0 3C11         977           CMP     AL,11H
 14E2 7458         978           JZ      G9MR
 14E4 3C13         979           CMP     AL,13H
 14E6 7454         980           JZ      G9MR
 14E8 3C21         981           CMP     AL,21H
 14EA 7444         982           JZ      G9SR
 14EC 3C23         983           CMP     AL,23H
 14EE 7440         984           JZ      G9SR
 14F0 3C43         985           CMP     AL,43H
 14F2 7443         986           JZ      G9MI
 14F4              987   
 14F4              988   ; DIRECTION CHANGE
 14F4 B502         989           MOV     CH,2
 14F6 3C12         990           CMP     AL,12H
 14F8 7436         991           JZ      G9SR
 14FA 3C31         992           CMP     AL,31H
 14FC 743E         993           JZ      G9MR
 14FE 3C32         994           CMP     AL,32H
 1500 742E         995           JZ      G9SR
 1502              996   
 1502              997   ; SINGLE BYTE MOVES
 1502 B5B0         998           MOV     CH,0B0H
 1504 3C41         999           CMP     AL,41H
 1506 7569         1000          JNZ     G9F0
R-ASSEMBLER VERSION 1.05C    8086.ASM                    77

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1508 A08028       1001          MOV     AL,[WADJ]
 150B 49           1002          DEC     CX
 150C D2E0         1003          SHL     AL,CL
 150E EB18         1004          JMP     SHORT G9S
 1510 B502         1005  G9A2:   MOV     CH,2
 1512 A18628       1006  G9A:    MOV     AX,[DISP]
 1515 A38828       1007          MOV     [IMM],AX
 1518 A08A28       1008          MOV     AL,[FLAGS]
 151B 25E300       1009          AND     AX,0E3H
 151E 0C03         1010          OR      AL,3
 1520 A28A28       1011          MOV     [FLAGS],AL
 1523 A08028       1012          MOV     AL,[WADJ]
 1526 0CA0         1013          OR      AL,0A0H
 1528 08E0         1014  G9S:    OR      AL,AH
 152A 08E8         1015          OR      AL,CH
 152C A28428       1016          MOV     [OPCODE],AL
 152F C3           1017          RET
 1530 B08C         1018  G9SR:   MOV     AL,8CH
 1532 A28428       1019          MOV     [OPCODE],AL
 1535 EB08         1020          JMP     SHORT G9M
 1537 B0C6         1021  G9MI:   MOV     AL,0C6H
 1539 A28428       1022          MOV     [OPCODE],AL
 153C A08028       1023  G9MR:   MOV     AL,[WADJ]
 153F 08E8         1024  G9M:    OR      AL,CH
 1541 08068428     1025          OR      [OPCODE],AL
 1545 E9F6FC       1026          JMP     MMODRM
 1548              1027  
 1548              1028  ; --------------------------------
 1548              1029  ; ESC IS A MESSY AND WEIRD
 1548              1030  ; INSTRUCTION
 1548 E8DFFA       1031  G0EH:   CALL    RA
 154B 3C14         1032          CMP     AL,14H
 154D 7404         1033          JZ      G0EHRM
 154F 3C34         1034          CMP     AL,34H
 1551 751E         1035          JNZ     G9F0
 1553 A18828       1036  G0EHRM: MOV     AX,[IMM]
 1556 3D3F00       1037          CMP     AX,3FH
 1559 7733         1038          JA      G0CHF
 155B 88C4         1039          MOV     AH,AL
 155D 49           1040          DEC     CX
 155E D2C8         1041          ROR     AL,CL
 1560 250707       1042          AND     AX,707H
 1563 D2C4         1043          ROL     AH,CL
 1565 09068428     1044          OR      [OPCODE],AX
 1569 80268A28FC   1045          AND     BYTE [FLAGS],0FCH
 156E E9CDFC       1046          JMP     MMODRM
 1571 B000         1047  G9F0:   MOV     AL,0
 1573 E9D7F7       1048          JMP     FAIL
 1576              1049  
 1576              1050  ; --------------------------------
R-ASSEMBLER VERSION 1.05C    8086.ASM                    78

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1576              1051  ; AAM AND AAD
 1576 E882F5       1052  G7:     CALL    CC
 1579 750C         1053          JNZ     G7A
 157B              1054  
 157B              1055  ; NO OPERAND MEANS IMPLICIT 10
 157B B80A00       1056          MOV     AX,0AH
 157E A38828       1057          MOV     [IMM],AX
 1581 800E8A2802   1058  G7B:    OR      BYTE [FLAGS],2
 1586 C3           1059          RET
 1587              1060  
 1587              1061  ; OTHERWISE PROCESS OPERAND
 1587 E8DAF7       1062  G7A:    CALL    RE
 158A 84E4         1063          TEST    AH,AH
 158C 74F3         1064          JZ      G7B
 158E B007         1065  G0CHF:  MOV     AL,7
 1590 E9BAF7       1066          JMP     FAIL
 1593              1067  
 1593              1068  ; --------------------------------
 1593              1069  ; INTERRUPT CALL
 1593 E8CEF7       1070  G0CH:   CALL    RE
 1596              1071  
 1596              1072  ; INT 3 IS ITS OWN OPCODE
 1596 3D0300       1073          CMP     AX,3
 1599 740A         1074          JZ      G0CH3
 159B 84E4         1075          TEST    AH,AH
 159D 75EF         1076          JNZ     G0CHF
 159F 800E8A2802   1077          OR      BYTE [FLAGS],2
 15A4 C3           1078          RET
 15A5 FE0E8428     1079  G0CH3:  DEC     BYTE [OPCODE]
 15A9 C3           1080          RET
 15AA              1081  
 15AA              1082  ; --------------------------------
 15AA              1083  ; IN / OUT
 15AA E87DFA       1084  G0DH:   CALL    RA
 15AD 80268A28FE   1085          AND     BYTE [FLAGS],0FEH
 15B2              1086  
 15B2              1087  ; EXPLICIT PORT FORM
 15B2 3C41         1088          CMP     AL,41H
 15B4 7415         1089          JZ      G0DHI
 15B6 3C14         1090          CMP     AL,14H
 15B8 740F         1091          JZ      G0DHO
 15BA 800E842808   1092          OR      BYTE [OPCODE],8
 15BF              1093  
 15BF              1094  ; INDIRECT VIA DX
 15BF 3D1120       1095          CMP     AX,2011H
 15C2 7407         1096          JZ      G0DHI
 15C4 3D1102       1097          CMP     AX,211H
 15C7 75A8         1098          JNZ     G9F0
 15C9 D2ED         1099  G0DHO:  SHR     CH,CL
 15CB 88E8         1100  G0DHI:  MOV     AL,CH
R-ASSEMBLER VERSION 1.05C    8086.ASM                    79

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 15CD 240F         1101          AND     AL,0FH
 15CF 3C02         1102          CMP     AL,2
 15D1 7204         1103          JC      G0DH0
 15D3 FE068428     1104          INC     BYTE [OPCODE]
 15D7 C3           1105  G0DH0:  RET
 15D8              1106  
 15D8              1107  ; --------------------------------
 15D8              1108  ; XCHG
 15D8 E84FFA       1109  G0FH:   CALL    RA
 15DB E8F7FB       1110          CALL    WA
 15DE 3C13         1111          CMP     AL,13H
 15E0 7419         1112          JZ      G0FHM
 15E2 3C31         1113          CMP     AL,31H
 15E4 7415         1114          JZ      G0FHM
 15E6 3C11         1115          CMP     AL,11H
 15E8 7587         1116          JNZ     G9F0
 15EA A08028       1117          MOV     AL,[WADJ]
 15ED A8FF         1118          TEST    AL,0FFH
 15EF 740A         1119          JZ      G0FHM
 15F1 88E0         1120          MOV     AL,AH
 15F3 A80F         1121          TEST    AL,0FH
 15F5 740F         1122          JZ      G0FHAR
 15F7 A8F0         1123          TEST    AL,0F0H
 15F9 740D         1124          JZ      G0FHRA
 15FB A08028       1125  G0FHM:  MOV     AL,[WADJ]
 15FE 0C86         1126          OR      AL,86H
 1600 A28428       1127          MOV     [OPCODE],AL
 1603 E938FC       1128          JMP     MMODRM
 1606 D2E8         1129  G0FHAR: SHR     AL,CL
 1608 0C90         1130  G0FHRA: OR      AL,90H
 160A A28428       1131          MOV     [OPCODE],AL
 160D C3           1132          RET
 160E              1133  
 160E              1134  ; --------------------------------
 160E              1135  ; RET
 160E E8EAF4       1136  G0BH:   CALL    CC
 1611 7420         1137          JZ      G0
 1613 E814FA       1138          CALL    RA
 1616              1139  
 1616              1140  ; IF IMMEDIATE VALUE SPECIFIED,
 1616              1141  ; ADJUST OPCODE ACCORDINGLY
 1616 3C04         1142          CMP     AL,4
 1618 7509         1143          JNZ     G0BH1
 161A 800E8A2803   1144          OR      BYTE [FLAGS],3
 161F FE0E8428     1145          DEC     BYTE [OPCODE]
 1623 A08F28       1146  G0BH1:  MOV     AL,[ARGS+3]
 1626 3C09         1147          CMP     AL,9
 1628 7409         1148          JZ      G0
 162A 3C0A         1149          CMP     AL,10
 162C 7505         1150          JNZ     G0
R-ASSEMBLER VERSION 1.05C    8086.ASM                    80

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 162E 800E842808   1151  G0BH2:  OR      BYTE [OPCODE],8
 1633              1152  
 1633              1153  ; --------------------------------
 1633              1154  ; INSTRUCTIONS WITHOUT OPERANDS
 1633              1155  ; JUST GET A TRAILING RET
 1633 C3           1156  G0:     RET
 1634              1157  
 1634              1158  ; --------------------------------
 1634              1159  ; PREFIX INSTRUCTIONS JUST GET
 1634              1160  ; WRITTEN RIGHT AWAY AND LINE
 1634              1161  ; ASSEMBLY CONTINUES
 1634 E801F9       1162  G0AH:   CALL    ASMCM2
 1637 E95EF4       1163          JMP     ASMLIN
 163A              1164  
 163A              1165  ; --------------------------------
 163A              1166  ; EVEN DIRECTIVE
 163A A17628       1167  D0:     MOV     AX,[PC]
 163D D0E8         1168          SHR     AL,1
 163F 18C0         1169          SBB     AL,AL
 1641 2420         1170          AND     AL,20H
 1643 A28A28       1171          MOV     [FLAGS],AL
 1646 31C9         1172          XOR     CX,CX
 1648 C3           1173          RET
 1649              1174  
 1649              1175  ; --------------------------------
 1649              1176  ; PAGE DIRECTIVE
 1649 31D2         1177  D8:     XOR     DX,DX
 164B E8ADF4       1178          CALL    CC
 164E 7405         1179          JZ      D8X
 1650 E811F7       1180          CALL    RE
 1653 89C2         1181          MOV     DX,AX
 1655 E9F2F6       1182  D8X:    JMP     SETEND
 1658              1183  
 1658              1184  ; --------------------------------
 1658              1185  ; WRITE ELEMENT FROM TABLE
 1658              1186  ; AT SI
 1658 FC           1187  WMN:    CLD
 1659 30ED         1188          XOR     CH,CH
 165B 7405         1189          JZ      WMN2
 165D AC           1190  WMN1:   LODSB
 165E 3C20         1191          CMP     AL,20H
 1660 73FB         1192          JNB     WMN1
 1662 AD           1193  WMN2:   LODSW
 1663 49           1194          DEC     CX
 1664 79F7         1195          JNS     WMN1
 1666 E918F8       1196          JMP     WRM
 1669              1197  
 1669              1198  ; --------------------------------
 1669              1199  ; WRAPPER FOR WRITING
 1669              1200  ; DIRECTIVES
R-ASSEMBLER VERSION 1.05C    8086.ASM                    81

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1669 56           1201  WDIR:   PUSH    SI
 166A BE121F       1202          MOV     SI,DIRTBL
 166D E8E8FF       1203          CALL    WMN     
 1670 5E           1204          POP     SI
 1671 B020         1205          MOV     AL,20H
 1673 AA           1206          STOSB
 1674 C3           1207          RET
 1675              1208  
 1675              1209  ; --------------------------------
 1675              1210  ; DISASSEMBLE ONE INSTRUCTION
 1675 BB0E00       1211  DISASM: MOV     BX,14
 1678              1212  
 1678              1213  ; WRITE DATA BYTE AS DB
 1678 E85BF8       1214          CALL    LDDAT
 167B 732D         1215          JNC     DISAS2
 167D              1216  
 167D              1217  ; IF NOT DATA, DISASSEMBLE
 167D 30E4         1218          XOR     AH,AH
 167F A08428       1219          MOV     AL,[OPCODE]
 1682 89C3         1220          MOV     BX,AX
 1684              1221  
 1684              1222  ; PREPARE SIZE ADJUSTMENT FOR
 1684              1223  ; REGISTER OPERAND BASED ON
 1684              1224  ; WORD BIT
 1684 2401         1225          AND     AL,1
 1686 D0E0         1226          SHL     AL,1
 1688 D0E0         1227          SHL     AL,1
 168A D0E0         1228          SHL     AL,1
 168C D0E0         1229          SHL     AL,1
 168E A38028       1230          MOV     [WADJ],AX
 1691              1231  
 1691              1232  ; GET MNEMONIC FOR OPCODE
 1691 8A8FBC1A     1233          MOV     CL,[BINTBL+BX]
 1695 84C9         1234          TEST    CL,CL
 1697 780B         1235          JS      DISAS1
 1699              1236  
 1699              1237  ; SIGNED INDEX MEANS DO NOT
 1699              1238  ; WRITE MNEMONIC QUITE YET
 1699 56           1239          PUSH    SI
 169A BE1C1C       1240          MOV     SI,MNMTBL
 169D E8B8FF       1241          CALL    WMN
 16A0 5E           1242          POP     SI
 16A1 B009         1243          MOV     AL,9
 16A3 AA           1244          STOSB
 16A4              1245  
 16A4              1246  ; INVOKE HANDLER TO DECODE
 16A4              1247  ; OPERANDS
 16A4 8A9FBC19     1248  DISAS1: MOV     BL,[BX+HDLTBL]
 16A8 D1E3         1249          SHL     BX,1
 16AA A08428       1250  DISAS2: MOV     AL,[OPCODE]
R-ASSEMBLER VERSION 1.05C    8086.ASM                    82

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 16AD FF977E19     1251          CALL    [BX+DHDL]
 16B1 89F0         1252          MOV     AX,SI
 16B3 2D7023       1253          SUB     AX,BINBUF
 16B6 A37428       1254          MOV     [BINLEN],AX
 16B9 C3           1255          RET
 16BA              1256  
 16BA              1257  ; --------------------------------
 16BA              1258  ; ACCUMULATOR AND IMMEDIATE
 16BA 30C0         1259  ACCID:  XOR     AL,AL
 16BC E8BE00       1260          CALL    WREG
 16BF F6068028FF   1261          TEST    BYTE [WADJ],0FFH
 16C4 EB18         1262          JMP     SHORT RIMMDW
 16C6              1263  
 16C6              1264  ; --------------------------------
 16C6              1265  ; IF 10 IS ENCODED, IT CAN BE
 16C6              1266  ; CONSIDERED IMPLICIT
 16C6 AC           1267  AAMD:   LODSB
 16C7 3C0A         1268          CMP     AL,0AH
 16C9 7542         1269          JNZ     WHAL
 16CB              1270  
 16CB              1271  ; --------------------------------
 16CB              1272  ; REMOVE TRAILING TAB SINCE
 16CB              1273  ; THERE IS NO OPERAND
 16CB 4F           1274  SINGD:  DEC     DI
 16CC C3           1275          RET
 16CD              1276  
 16CD              1277  ; --------------------------------
 16CD              1278  ; IMMEDIATE INTO REGISTER
 16CD 56           1279  RIMMD:  PUSH    SI
 16CE              1280  
 16CE              1281  ; THE REGISTER IS DIRECTLY
 16CE              1282  ; ENCODED INTO OPCODE SERIES B*
 16CE 250F00       1283          AND     AX,0FH
 16D1 D0E0         1284          SHL     AL,1
 16D3 50           1285          PUSH    AX
 16D4 05F41B       1286          ADD     AX,REGS
 16D7 89C6         1287          MOV     SI,AX
 16D9 A5           1288          MOVSW
 16DA 58           1289          POP     AX
 16DB A810         1290          TEST    AL,10H
 16DD 5E           1291          POP     SI
 16DE B02C         1292  RIMMDW: MOV     AL,2CH
 16E0 AA           1293          STOSB
 16E1 AD           1294          LODSW
 16E2 756E         1295          JNZ     WHAX
 16E4              1296  
 16E4              1297  ; WHOLE WORD LOADED BY DEFAULT
 16E4              1298  ; SO RECEDE INPUT BUFFER IF ONLY
 16E4              1299  ; A BYTE IS RELEVANT
 16E4 4E           1300  RIMMDB: DEC     SI
R-ASSEMBLER VERSION 1.05C    8086.ASM                    83

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 16E5 EB26         1301          JMP     SHORT WHAL
 16E7              1302  
 16E7              1303  ; --------------------------------
 16E7              1304  ; GROUP 1 INSTRUCTIONS
 16E7              1305  ; OPCODES 80-83
 16E7 B9BC1B       1306  G01D:   MOV     CX,_G01D
 16EA E8DE01       1307          CALL    GRPD
 16ED              1308  
 16ED              1309  ; --------------------------------
 16ED              1310  ; IMMEDIATE INTO R/M
 16ED E89A00       1311  RMID:   CALL    WPTR
 16F0              1312  
 16F0              1313  ; WRITE COMMA AND VALUE
 16F0 B02C         1314  G03DT:  MOV     AL,2CH
 16F2 AA           1315          STOSB
 16F3 AD           1316          LODSW
 16F4 F6068028FF   1317          TEST    BYTE [WADJ],0FFH
 16F9 74E9         1318          JZ      RIMMDB
 16FB 803E842883   1319          CMP     BYTE [OPCODE],83H
 1700 7550         1320          JNZ     WHAX
 1702 4E           1321          DEC     SI
 1703              1322  
 1703              1323  ; --------------------------------
 1703              1324  ; WRITE SYMBOL OR SIGNED BYTE
 1703 84C0         1325  WHALS:  TEST    AL,AL
 1705 7906         1326          JNS     WHAL
 1707 C6052D       1327          MOV     BYTE [DI],2DH
 170A 47           1328          INC     DI
 170B F6D8         1329          NEG     AL
 170D              1330  
 170D              1331  ; --------------------------------
 170D              1332  ; WRITE SYMBOL OR UNSIGNED BYTE
 170D 30C9         1333  WHAL:   XOR     CL,CL
 170F E833F7       1334          CALL    WSYMA
 1712 730E         1335          JNC     WHAL2
 1714 3CA0         1336  WHAL0:  CMP     AL,0A0H
 1716 7204         1337          JB      WHAL1
 1718 C60530       1338          MOV     BYTE [DI],30H
 171B 47           1339          INC     DI
 171C E8C0F4       1340  WHAL1:  CALL    HALX
 171F B048         1341          MOV     AL,48H
 1721 AA           1342          STOSB
 1722 C3           1343  WHAL2:  RET
 1723              1344  
 1723              1345  ; --------------------------------
 1723              1346  ; SHORT BRANCHES, WITH SPECIAL
 1723              1347  ; EXCEPTION GRANTED TO JMP SHORT
 1723              1348  ; WHICH NEEDS AN ADDITIONAL
 1723              1349  ; SHORT DIRECTIVE
 1723 3CEB         1350  RELBD:  CMP     AL,0EBH
R-ASSEMBLER VERSION 1.05C    8086.ASM                    84

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1725 7505         1351          JNE     NOTJMP
 1727 B113         1352          MOV     CL,19
 1729 E83DFF       1353          CALL    WDIR
 172C AC           1354  NOTJMP: LODSB
 172D 98           1355          CBW
 172E 050200       1356          ADD     AX,2
 1731 03067628     1357          ADD     AX,[PC]
 1735 EB1B         1358          JMP     SHORT WHAX
 1737              1359  
 1737              1360  ; --------------------------------
 1737              1361  ; GROUP 3 INSTRUCTIONS
 1737 B9CC1B       1362  G03D:   MOV     CX,_G03D
 173A E88E01       1363          CALL    GRPD
 173D FF34         1364          PUSH    WORD [SI]
 173F E84800       1365          CALL    WPTR
 1742 58           1366          POP     AX
 1743 A830         1367          TEST    AL,30H
 1745 74A9         1368          JZ      G03DT
 1747 C3           1369          RET
 1748              1370  
 1748              1371  ; --------------------------------
 1748              1372  ; WRITE SIGNED WORD VALUE
 1748 85C0         1373  WHAXS:  TEST    AX,AX
 174A 7906         1374          JNS     WHAX
 174C C6052D       1375          MOV     BYTE [DI],2DH
 174F 47           1376          INC     DI
 1750 F7D8         1377          NEG     AX
 1752              1378  
 1752              1379  ; --------------------------------
 1752              1380  ; WRITE UNSIGNED WORD VALUE
 1752 B10C         1381  WHAX:   MOV     CL,0CH
 1754 E8EEF6       1382          CALL    WSYMA
 1757 7316         1383          JNC     WHAX2
 1759 80FCA0       1384  WHAX0:  CMP     AH,0A0H
 175C 7204         1385          JB      WHAX1
 175E C60530       1386          MOV     BYTE [DI],30H
 1761 47           1387          INC     DI
 1762 50           1388  WHAX1:  PUSH    AX
 1763 86E0         1389          XCHG    AL,AH
 1765 E877F4       1390          CALL    HALX
 1768 58           1391          POP     AX
 1769 E873F4       1392          CALL    HALX
 176C B048         1393          MOV     AL,48H
 176E AA           1394          STOSB
 176F C3           1395  WHAX2:  RET
 1770              1396  
 1770              1397  ; --------------------------------
 1770              1398  ; LDA HANDLER
 1770 B006         1399  MACCD:  MOV     AL,6
 1772 EB01         1400          JMP     SHORT MRD1
R-ASSEMBLER VERSION 1.05C    8086.ASM                    85

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1774              1401  
 1774              1402  ; --------------------------------
 1774              1403  ; REGISTER INTO R/M
 1774 AC           1404  MRD:    LODSB
 1775 50           1405  MRD1:   PUSH    AX
 1776 E82B00       1406          CALL    WDISP
 1779 B02C         1407          MOV     AL,2CH
 177B AA           1408          STOSB
 177C 58           1409          POP     AX
 177D              1410  
 177D              1411  ; --------------------------------
 177D              1412  ; WRITE REGISTER FIELD
 177D FC           1413  WREG:   CLD
 177E 56           1414          PUSH    SI
 177F 89C6         1415          MOV     SI,AX
 1781 D1EE         1416          SHR     SI,1
 1783 D1EE         1417          SHR     SI,1
 1785 83E60E       1418          AND     SI,0EH
 1788 EB26         1419          JMP     SHORT WDISP1
 178A              1420  
 178A              1421  ; --------------------------------
 178A              1422  ; WRITE R/M SIZE OVERRIDE
 178A AC           1423  WPTR:   LODSB
 178B 3CC0         1424          CMP     AL,0C0H
 178D 7315         1425          JNC     WDISP
 178F 50           1426          PUSH    AX
 1790 B115         1427          MOV     CL,21
 1792 F6068028FF   1428          TEST    BYTE [WADJ],0FFH
 1797 7502         1429          JNZ     WSELF
 1799 30C9         1430          XOR     CL,CL
 179B E8CBFE       1431  WSELF:  CALL    WDIR
 179E B112         1432          MOV     CL,18
 17A0 E8C6FE       1433          CALL    WDIR
 17A3 58           1434          POP     AX
 17A4              1435  
 17A4              1436  ; --------------------------------
 17A4              1437  ; WRITE R/M FIELD
 17A4 56           1438  WDISP:  PUSH    SI
 17A5 89C6         1439          MOV     SI,AX
 17A7 83E607       1440          AND     SI,7
 17AA              1441  
 17AA              1442  ; EVERYTHING BELOW 11XXXXXX IS
 17AA              1443  ; R/M DISPLACEMENTS
 17AA 3CC0         1444          CMP     AL,0C0H
 17AC 720D         1445          JC      WDD
 17AE D1E6         1446          SHL     SI,1
 17B0              1447  
 17B0              1448  ; 11XXXXXX AND UP IS REGISTERS
 17B0 81C6F41B     1449  WDISP1: ADD     SI,REGS
 17B4 03368028     1450          ADD     SI,[WADJ]
R-ASSEMBLER VERSION 1.05C    8086.ASM                    86

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 17B8 A5           1451          MOVSW
 17B9 5E           1452          POP     SI
 17BA C3           1453          RET
 17BB              1454  
 17BB              1455  ; START WRITING BRACKETED
 17BB              1456  ; IDEAL MODE DISPLACEMENT
 17BB 50           1457  WDD:    PUSH    AX
 17BC B05B         1458          MOV     AL,5BH
 17BE AA           1459          STOSB
 17BF 58           1460          POP     AX
 17C0              1461  
 17C0              1462  ; ISOLATE DISPLACEMENT SIZE
 17C0              1463  ; AND TYPE
 17C0 24C7         1464          AND     AL,0C7H
 17C2 3C06         1465          CMP     AL,6
 17C4 7509         1466          JNZ     WDC
 17C6              1467  
 17C6              1468  ; BP ALONE IS NOT A THING;
 17C6              1469  ; WRITE IMMEDIATE DISPLACEMENT
 17C6              1470  ; ONLY
 17C6 5E           1471          POP     SI
 17C7 AD           1472          LODSW
 17C8 E887FF       1473          CALL    WHAX
 17CB B05D         1474          MOV     AL,5DH
 17CD AA           1475          STOSB
 17CE C3           1476          RET
 17CF              1477  
 17CF              1478  ; WRITE DISPLACEMENT REGISTER
 17CF              1479  ; AND DISPLACEMENT
 17CF 50           1480  WDC:    PUSH    AX
 17D0 81C6DC1B     1481          ADD     SI,_DISP
 17D4 8A14         1482          MOV     DL,[SI]
 17D6 B02B         1483          MOV     AL,2BH
 17D8 B104         1484          MOV     CL,4
 17DA 89D6         1485  WDL:    MOV     SI,DX
 17DC 83E60F       1486          AND     SI,0FH
 17DF 81C6041C     1487          ADD     SI,REGS+16
 17E3 A5           1488          MOVSW
 17E4 AA           1489          STOSB
 17E5 D2EA         1490          SHR     DL,CL
 17E7 75F1         1491          JNZ     WDL
 17E9 58           1492          POP     AX
 17EA 5E           1493          POP     SI
 17EB D0E0         1494          SHL     AL,1
 17ED 7209         1495          JC      WDW
 17EF D0E0         1496          SHL     AL,1
 17F1 7214         1497          JC      WDB
 17F3 4F           1498  WDX:    DEC     DI
 17F4 B05D         1499          MOV     AL,5DH
 17F6 AA           1500          STOSB
R-ASSEMBLER VERSION 1.05C    8086.ASM                    87

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 17F7 C3           1501          RET
 17F8              1502  
 17F8              1503  ; 16-BIT SIGNED DISPLACEMENT
 17F8 AD           1504  WDW:    LODSW
 17F9 85C0         1505          TEST    AX,AX
 17FB 74F6         1506          JZ      WDX
 17FD 7901         1507          JNS     WDAX
 17FF 4F           1508          DEC     DI
 1800 E845FF       1509  WDAX:   CALL    WHAXS
 1803 B05D         1510          MOV     AL,5DH
 1805 AA           1511          STOSB
 1806 C3           1512          RET
 1807              1513  
 1807              1514  ; 8-BIT SIGNED DISPLACEMENT
 1807 AC           1515  WDB:    LODSB
 1808 84C0         1516          TEST    AL,AL
 180A 74E7         1517          JZ      WDX
 180C 7901         1518          JNS     WDAL
 180E 4F           1519          DEC     DI
 180F E8F1FE       1520  WDAL:   CALL    WHALS
 1812 B05D         1521          MOV     AL,5DH
 1814 AA           1522          STOSB
 1815 C3           1523          RET
 1816              1524  
 1816              1525  ; --------------------------------
 1816              1526  ; MOVE INTO SEGMENT REGISTER
 1816 C606802810   1527  MSD:    MOV     BYTE [WADJ],10H
 181B AC           1528          LODSB
 181C 50           1529          PUSH    AX
 181D E884FF       1530          CALL    WDISP
 1820 B02C         1531          MOV     AL,2CH
 1822 AA           1532          STOSB
 1823 58           1533          POP     AX
 1824              1534  
 1824              1535  ; --------------------------------
 1824              1536  ; WRITE SEGMENT REGISTER OPERAND
 1824 D0E8         1537  PSRD:   SHR     AL,1
 1826 D0E8         1538          SHR     AL,1
 1828 250600       1539          AND     AX,6
 182B 0C20         1540          OR      AL,20H
 182D 05F41B       1541          ADD     AX,REGS
 1830 96           1542          XCHG    AX,SI
 1831 FC           1543          CLD
 1832 A5           1544          MOVSW
 1833 96           1545          XCHG    AX,SI
 1834 C3           1546          RET
 1835              1547  
 1835              1548  ; --------------------------------
 1835              1549  ; MOVE FROM SEGMENT REGISTER
 1835 C606802810   1550  SMD:    MOV     BYTE [WADJ],10H
R-ASSEMBLER VERSION 1.05C    8086.ASM                    88

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 183A AC           1551          LODSB
 183B 50           1552          PUSH    AX
 183C E8E5FF       1553          CALL    PSRD
 183F B02C         1554          MOV     AL,2CH
 1841 AA           1555          STOSB
 1842 58           1556          POP     AX
 1843 E95EFF       1557          JMP     WDISP
 1846              1558  
 1846              1559  ; --------------------------------
 1846              1560  ; EXCHANGE ACCUMULATOR AND
 1846              1561  ; 16-BIT REGISTER
 1846 50           1562  ACCRD:  PUSH    AX
 1847 B84158       1563          MOV     AX,5841H
 184A AB           1564          STOSW
 184B B02C         1565          MOV     AL,2CH
 184D AA           1566          STOSB
 184E 58           1567          POP     AX
 184F              1568  
 184F              1569  ; --------------------------------
 184F              1570  ; WRITE 16-BIT REGISTER OPERAND
 184F C606802810   1571  REGWD:  MOV     BYTE [WADJ],10H
 1854 0CC0         1572          OR      AL,0C0H
 1856 E94BFF       1573          JMP     WDISP
 1859              1574  
 1859              1575  ; --------------------------------
 1859              1576  ; DECODE AND WRITE 16-BIT
 1859              1577  ; RELATIVE OFFSET, CALL/JMP
 1859 AD           1578  RELWD:  LODSW
 185A 050300       1579          ADD     AX,3
 185D 03067628     1580          ADD     AX,[PC]
 1861 E9EEFE       1581          JMP     WHAX
 1864              1582  
 1864              1583  ; --------------------------------
 1864              1584  ; DECODE HORRIBLE ESC INSTRUCTION
 1864 8A24         1585  ESCD:   MOV     AH,[SI]
 1866 B103         1586          MOV     CL,3
 1868 D2CC         1587          ROR     AH,CL
 186A 250707       1588          AND     AX,707H
 186D D2C0         1589          ROL     AL,CL
 186F 08E0         1590          OR      AL,AH
 1871 E899FE       1591          CALL    WHAL
 1874 B02C         1592          MOV     AL,2CH
 1876 AA           1593          STOSB
 1877 AC           1594          LODSB
 1878 E929FF       1595          JMP     WDISP
 187B              1596  
 187B              1597  ; --------------------------------
 187B              1598  ; SIMPLE INT+VALUE
 187B AC           1599  INTD:   LODSB
 187C E98EFE       1600          JMP     WHAL
R-ASSEMBLER VERSION 1.05C    8086.ASM                    89

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 187F              1601  
 187F              1602  ; --------------------------------
 187F              1603  ; INT 3 IS ITS OWN THING, SO
 187F              1604  ; JUST WRITE OUT THE DIGIT 3
 187F B033         1605  INT3D:  MOV     AL,33H
 1881 AA           1606          STOSB
 1882 C3           1607          RET
 1883              1608  
 1883              1609  ; --------------------------------
 1883              1610  ; RETURN FAR IS RET+FAR OVERRIDE
 1883 B109         1611  RETFD:  MOV     CL,9
 1885 E8E1FD       1612          CALL    WDIR
 1888 F606842801   1613          TEST    BYTE [OPCODE],1
 188D 7402         1614          JZ      RETD
 188F 4F           1615          DEC     DI
 1890 C3           1616          RET
 1891              1617  
 1891              1618  ; --------------------------------
 1891              1619  ; DECODE RET WITH ARGUMENT
 1891              1620  ; REGULAR RETS JUST FALL INTO
 1891              1621  ; GROUP WITHOUT OPERANDS
 1891 AD           1622  RETD:   LODSW
 1892 E9BDFE       1623          JMP     WHAX
 1895              1624  
 1895              1625  ; --------------------------------
 1895              1626  ; IN/OUT INSTRUCTIONS WITH DX
 1895              1627  ; AND ACCUMULATOR
 1895 A18028       1628  ADIOD:  MOV     AX,[WADJ]
 1898              1629  
 1898              1630  ; USE THE WORD ADJUST TO GET
 1898              1631  ; CORRECT ACCUMULATOR SIZE
 1898 05F41B       1632          ADD     AX,REGS
 189B 56           1633          PUSH    SI
 189C 89C6         1634          MOV     SI,AX
 189E AD           1635          LODSW
 189F 5E           1636          POP     SI
 18A0 BA4458       1637          MOV     DX,5844H
 18A3              1638  
 18A3              1639  ; THE DIRECTION BIT IS THE DEAD
 18A3              1640  ; GIVEAWAY OF THE INSTRUCTION
 18A3 F606842802   1641          TEST    BYTE [OPCODE],2
 18A8 7401         1642          JZ      ADIOD0
 18AA              1643  
 18AA              1644  ; WRITE THE REGISTERS
 18AA 92           1645          XCHG    AX,DX
 18AB AB           1646  ADIOD0: STOSW
 18AC B02C         1647          MOV     AL,2CH
 18AE AA           1648          STOSB
 18AF 92           1649          XCHG    AX,DX
 18B0 AB           1650          STOSW
R-ASSEMBLER VERSION 1.05C    8086.ASM                    90

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 18B1 C3           1651          RET
 18B2              1652  
 18B2              1653  ; --------------------------------
 18B2              1654  ; IN INSTRUCTION
 18B2 AC           1655  IBAPD:  LODSB
 18B3 E857FE       1656          CALL    WHAL
 18B6 B02C         1657          MOV     AL,2CH
 18B8 AA           1658          STOSB
 18B9 B0C0         1659          MOV     AL,0C0H
 18BB E9E6FE       1660          JMP     WDISP
 18BE              1661  
 18BE              1662  ; --------------------------------
 18BE              1663  ; 32-BIT INDIRECT CALL OR JUMP
 18BE AD           1664  SEGOFD: LODSW
 18BF 50           1665          PUSH    AX
 18C0 AD           1666          LODSW
 18C1 E88EFE       1667          CALL    WHAX
 18C4 B03A         1668          MOV     AL,3AH
 18C6 AA           1669          STOSB
 18C7 58           1670          POP     AX
 18C8 E987FE       1671          JMP     WHAX
 18CB              1672  
 18CB              1673  ; --------------------------------
 18CB              1674  ; WRITE OUT GROUP INSTRUCTIONS:
 18CB              1675  ; THE FOUR GROUP HANDLERS HAVE
 18CB              1676  ; THEIR OWN INSTRUCTION TABLES
 18CB              1677  ; SINCE SEVERAL INSTRUCTIONS WILL
 18CB              1678  ; SHARE THE SAME OPCODE, AND
 18CB              1679  ; THE MNEMONIC CANNOT BE WRITTEN
 18CB              1680  ; UNTIL MODIFIER BYTE IS PROCESSED
 18CB 56           1681  GRPD:   PUSH    SI
 18CC AC           1682          LODSB
 18CD              1683  
 18CD              1684  ; GET OPCODE EXTENSION
 18CD D0E8         1685          SHR     AL,1
 18CF D0E8         1686          SHR     AL,1
 18D1 D0E8         1687          SHR     AL,1
 18D3 250700       1688          AND     AX,7
 18D6 50           1689          PUSH    AX
 18D7              1690  
 18D7              1691  ; CX POINTS TO GROUP-SPECIFIC
 18D7              1692  ; INSTRUCTION TABLE
 18D7 89C6         1693          MOV     SI,AX
 18D9 01CE         1694          ADD     SI,CX
 18DB 8A0C         1695          MOV     CL,[SI]
 18DD BE1C1C       1696          MOV     SI,MNMTBL
 18E0              1697  
 18E0              1698  ; WRITE MNEMONIC AND TAB,
 18E0              1699  ; AS YOU DO
 18E0 E875FD       1700          CALL    WMN
R-ASSEMBLER VERSION 1.05C    8086.ASM                    91

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 18E3 B009         1701          MOV     AL,9
 18E5 AA           1702          STOSB
 18E6 58           1703          POP     AX
 18E7 5E           1704          POP     SI
 18E8 C3           1705          RET
 18E9              1706  
 18E9              1707  ; --------------------------------
 18E9              1708  ; STA HANDLER
 18E9 B006         1709  ACCMD:  MOV     AL,6
 18EB EB06         1710          JMP     SHORT RMD1
 18ED              1711  
 18ED              1712  ; --------------------------------
 18ED              1713  ; LDS/LES/LEA GROUP
 18ED C606802810   1714  RWMD:   MOV     BYTE [WADJ],10H
 18F2              1715  
 18F2              1716  ; --------------------------------
 18F2              1717  ; REGISTER TO R/M
 18F2 AC           1718  RMD:    LODSB
 18F3 50           1719  RMD1:   PUSH    AX
 18F4 E886FE       1720          CALL    WREG
 18F7 B02C         1721          MOV     AL,2CH
 18F9 AA           1722          STOSB
 18FA 58           1723          POP     AX
 18FB E9A6FE       1724          JMP     WDISP
 18FE              1725  
 18FE              1726  ; --------------------------------
 18FE              1727  ; GROUP 2: SHIFTS AND ROTATES
 18FE B9C41B       1728  G02D:   MOV     CX,_G02D
 1901 E8C7FF       1729          CALL    GRPD
 1904 E883FE       1730          CALL    WPTR
 1907 B02C         1731          MOV     AL,2CH
 1909 AA           1732          STOSB
 190A              1733  
 190A              1734  ; ONLY CL OR 1 ARE VALID
 190A F606842802   1735          TEST    BYTE [OPCODE],2
 190F 7405         1736          JZ      G02D1
 1911 B8434C       1737          MOV     AX,4C43H
 1914 AB           1738          STOSW
 1915 C3           1739          RET
 1916 B031         1740  G02D1:  MOV     AL,31H
 1918 AA           1741          STOSB
 1919 C3           1742          RET
 191A              1743  
 191A              1744  ; --------------------------------
 191A              1745  ; GROUP 4
 191A B9D41B       1746  G04D:   MOV     CX,_G04D
 191D E8ABFF       1747          CALL    GRPD
 1920              1748  
 1920              1749  ; SOME OF THEM NEED SIZE OR
 1920              1750  ; DISTANCE OVERRIDES FOR
R-ASSEMBLER VERSION 1.05C    8086.ASM                    92

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1920              1751  ; DISAMBIGUATION
 1920 3C07         1752          CMP     AL,7
 1922 741C         1753          JZ      INVD
 1924 3C05         1754          CMP     AL,5
 1926 740F         1755          JZ      G04DF
 1928 3C04         1756          CMP     AL,4
 192A 7410         1757          JZ      DISPD
 192C 3C03         1758          CMP     AL,3
 192E 7407         1759          JZ      G04DF
 1930 3C02         1760          CMP     AL,2
 1932 7408         1761          JZ      DISPD
 1934 E953FE       1762          JMP     WPTR
 1937 B109         1763  G04DF:  MOV     CL,9
 1939 E82DFD       1764          CALL    WDIR
 193C              1765  
 193C              1766  ; --------------------------------
 193C              1767  ; WRITE R/M FIELD AS OPERAND
 193C AC           1768  DISPD:  LODSB
 193D E964FE       1769          JMP     WDISP
 1940              1770  
 1940              1771  ; --------------------------------
 1940              1772  ; INVALID INSTRUCTIONS ARE
 1940              1773  ; WRITTEN AS DATA DEFINITIONS
 1940 50           1774  INVD:   PUSH    AX
 1941 B84442       1775          MOV     AX,4244H
 1944 AB           1776          STOSW
 1945 B009         1777          MOV     AL,9
 1947 AA           1778          STOSB
 1948 58           1779          POP     AX
 1949 E9C1FD       1780          JMP     WHAL
 194C              1781          EVEN
 194C              1782  
 194C              1783  ; --------------------------------
 194C              1784  ; INSTRUCTION ASSEMBLY HANDLERS
 194C 33160113B812 1785  IHDL:   DW      G0,G1,G2,G3
 1952 6813
 1954 A8139E140014 1786          DW      G4,G5,G6,G7
 195A 7615
 195C C414CE143416 1787          DW      G8,G9,G0AH,G0BH
 1962 0E16
 1964 9315AA154815 1788          DW      G0CH,G0DH,G0EH,G0FH
 196A D815
 196C              1789  
 196C              1790  ; --------------------------------
 196C              1791  ; DIRECTIVE HANDLERS
 196C 3A16B90A4A0D 1792  AHDL:   DW      D0,SETEQU,SETEND
 1972 D70AA70CE20F 1793          DW      SETORG,SETDFB,D5
 1978 8A0E280D4916 1794          DW      SETDFS,SETINC,D8
 197E              1795  
 197E              1796  ; --------------------------------
R-ASSEMBLER VERSION 1.05C    8086.ASM                    93

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 197E              1797  ; OPERAND DISASSEMBLY HANDLERS
 197E 7417F218BA16 1798  DHDL:   DW      MRD,RMD,ACCID
 1984 24189518CB16 1799          DW      PSRD,ADIOD,SINGD
 198A 4F1840192317 1800          DW      REGWD,INVD,RELBD
 1990 E71637171A19 1801          DW      G01D,G03D,G04D
 1996 161835183C19 1802          DW      MSD,SMD,DISPD
 199C 4618BE18E918 1803          DW      ACCRD,SEGOFD,ACCMD
 19A2 7017CD169118 1804          DW      MACCD,RIMMD,RETD
 19A8 ED18ED168318 1805          DW      RWMD,RMID,RETFD
 19AE 7F187B18FE18 1806          DW      INT3D,INTD,G02D
 19B4 C6166418B218 1807          DW      AAMD,ESCD,IBAPD
 19BA 5918         1808          DW      RELWD
 19BC              1809  
 19BC              1810  ; --------------------------------
 19BC              1811  ; OPERAND DECODER PER INSTRUCTION
 19BC 000001010202 1812  HDLTBL: DB      0,0,1,1,2,2,3,3
 19C2 0303
 19C4 000001010202 1813          DB      0,0,1,1,2,2,3,3
 19CA 0303
 19CC 000001010202 1814          DB      0,0,1,1,2,2,3,3
 19D2 0303
 19D4 000001010202 1815          DB      0,0,1,1,2,2,3,3
 19DA 0303
 19DC 000001010202 1816          DB      0,0,1,1,2,2,3,5
 19E2 0305
 19E4 000001010202 1817          DB      0,0,1,1,2,2,3,5
 19EA 0305
 19EC 000001010202 1818          DB      0,0,1,1,2,2,3,5
 19F2 0305
 19F4 000001010202 1819          DB      0,0,1,1,2,2,3,5
 19FA 0305
 19FC 060606060606 1820          DB      6,6,6,6,6,6,6,6
 1A02 0606
 1A04 060606060606 1821          DB      6,6,6,6,6,6,6,6
 1A0A 0606
 1A0C 060606060606 1822          DB      6,6,6,6,6,6,6,6
 1A12 0606
 1A14 060606060606 1823          DB      6,6,6,6,6,6,6,6
 1A1A 0606
 1A1C 070707070707 1824          DB      7,7,7,7,7,7,7,7
 1A22 0707
 1A24 070707070707 1825          DB      7,7,7,7,7,7,7,7
 1A2A 0707
 1A2C 080808080808 1826          DB      8,8,8,8,8,8,8,8
 1A32 0808
 1A34 080808080808 1827          DB      8,8,8,8,8,8,8,8
 1A3A 0808
 1A3C 090909090101 1828          DB      9,9,9,9,1,1,1,1
 1A42 0101
 1A44 00000101     1829          DB      0,0,1,1
R-ASSEMBLER VERSION 1.05C    8086.ASM                    94

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1A48 0C010D0E     1830          DB      0CH,01H,0DH,0EH
 1A4C 050F0F0F     1831          DB      05H,0FH,0FH,0FH
 1A50 0F0F0F0F     1832          DB      0FH,0FH,0FH,0FH
 1A54 05051005     1833          DB      05H,05H,10H,05H
 1A58 05050505     1834          DB      05H,05H,05H,05H
 1A5C 11111212     1835          DB      11H,11H,12H,12H
 1A60 05050505     1836          DB      05H,05H,05H,05H
 1A64 02020505     1837          DB      02H,02H,05H,05H
 1A68 05050505     1838          DB      05H,05H,05H,05H
 1A6C 13131313     1839          DB      13H,13H,13H,13H
 1A70 13131313     1840          DB      13H,13H,13H,13H
 1A74 13131313     1841          DB      13H,13H,13H,13H
 1A78 13131313     1842          DB      13H,13H,13H,13H
 1A7C 07071405     1843          DB      07H,07H,14H,05H
 1A80 15011616     1844          DB      15H,01H,16H,16H
 1A84 07071717     1845          DB      07H,07H,17H,17H
 1A88 18190505     1846          DB      18H,19H,05H,05H
 1A8C 1A1A1A1A     1847          DB      1AH,1AH,1AH,1AH
 1A90 1B1B0505     1848          DB      1BH,1BH,05H,05H
 1A94 1C1C1C1C     1849          DB      1CH,1CH,1CH,1CH
 1A98 1C1C1C1C     1850          DB      1CH,1CH,1CH,1CH
 1A9C 08080808     1851          DB      08H,08H,08H,08H
 1AA0 02021D1D     1852          DB      02H,02H,1DH,1DH
 1AA4 1E1E1008     1853          DB      1EH,1EH,10H,08H
 1AA8 04040404     1854          DB      04H,04H,04H,04H
 1AAC 05070505     1855          DB      05H,07H,05H,05H
 1AB0 05050A0A     1856          DB      05H,05H,0AH,0AH
 1AB4 05050505     1857          DB      05H,05H,05H,05H
 1AB8 05050B0B     1858          DB      05H,05H,0BH,0BH
 1ABC              1859  
 1ABC              1860  ; --------------------------------
 1ABC              1861  ; MNEMONIC PER INSTRUCTION
 1ABC 05050505     1862  BINTBL: DB      05H,05H,05H,05H
 1AC0 05055553     1863          DB      05H,05H,55H,53H
 1AC4 51515151     1864          DB      51H,51H,51H,51H
 1AC8 51515553     1865          DB      51H,51H,55H,53H
 1ACC 04040404     1866          DB      04H,04H,04H,04H
 1AD0 04045553     1867          DB      04H,04H,55H,53H
 1AD4 65656565     1868          DB      65H,65H,65H,65H
 1AD8 65655553     1869          DB      65H,65H,55H,53H
 1ADC 06060606     1870          DB      06H,06H,06H,06H
 1AE0 06066811     1871          DB      06H,06H,68H,11H
 1AE4 70707070     1872          DB      70H,70H,70H,70H
 1AE8 70706812     1873          DB      70H,70H,68H,12H
 1AEC 75757575     1874          DB      75H,75H,75H,75H
 1AF0 75756800     1875          DB      75H,75H,68H,00H
 1AF4 0D0D0D0D     1876          DB      0DH,0DH,0DH,0DH
 1AF8 0D0D6803     1877          DB      0DH,0DH,68H,03H
 1AFC 1A1A1A1A     1878          DB      1AH,1AH,1AH,1AH
 1B00 1A1A1A1A     1879          DB      1AH,1AH,1AH,1AH
R-ASSEMBLER VERSION 1.05C    8086.ASM                    95

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1B04 13131313     1880          DB      13H,13H,13H,13H
 1B08 13131313     1881          DB      13H,13H,13H,13H
 1B0C 55555555     1882          DB      55H,55H,55H,55H
 1B10 55555555     1883          DB      55H,55H,55H,55H
 1B14 53535353     1884          DB      53H,53H,53H,53H
 1B18 53535353     1885          DB      53H,53H,53H,53H
 1B1C 80808080     1886          DB      80H,80H,80H,80H
 1B20 80808080     1887          DB      80H,80H,80H,80H
 1B24 80808080     1888          DB      80H,80H,80H,80H
 1B28 80808080     1889          DB      80H,80H,80H,80H
 1B2C 3834222E     1890          DB      38H,34H,22H,2EH
 1B30 3D372C1E     1891          DB      3DH,37H,2CH,1EH
 1B34 3C363935     1892          DB      3CH,36H,39H,35H
 1B38 27323025     1893          DB      27H,32H,30H,25H
 1B3C 80808080     1894          DB      80H,80H,80H,80H
 1B40 71717373     1895          DB      71H,71H,73H,73H
 1B44 4A4A4A4A     1896          DB      4AH,4AH,4AH,4AH
 1B48 4A404A53     1897          DB      4AH,40H,4AH,53H
 1B4C 4F737373     1898          DB      4FH,73H,73H,73H
 1B50 73737373     1899          DB      73H,73H,73H,73H
 1B54 08100772     1900          DB      08H,10H,07H,72H
 1B58 5654613E     1901          DB      56H,54H,61H,3EH
 1B5C 4A4A4A4A     1902          DB      4AH,4AH,4AH,4AH
 1B60 4B4C0E0F     1903          DB      4BH,4CH,0EH,0FH
 1B64 71716E6F     1904          DB      71H,71H,6EH,6FH
 1B68 43446667     1905          DB      43H,44H,66H,67H
 1B6C 4A4A4A4A     1906          DB      4AH,4AH,4AH,4AH
 1B70 4A4A4A4A     1907          DB      4AH,4AH,4AH,4AH
 1B74 4A4A4A4A     1908          DB      4AH,4AH,4AH,4AH
 1B78 4A4A4A4A     1909          DB      4AH,4AH,4AH,4AH
 1B7C 80805E5E     1910          DB      80H,80H,5EH,5EH
 1B80 413F4A4A     1911          DB      41H,3FH,4AH,4AH
 1B84 80805E5E     1912          DB      80H,80H,5EH,5EH
 1B88 1B1B1C1D     1913          DB      1BH,1BH,1CH,1DH
 1B8C 80808080     1914          DB      80H,80H,80H,80H
 1B90 02016374     1915          DB      02H,01H,63H,74H
 1B94 15151515     1916          DB      15H,15H,15H,15H
 1B98 15151515     1917          DB      15H,15H,15H,15H
 1B9C 48494523     1918          DB      48H,49H,45H,23H
 1BA0 19195252     1919          DB      19H,19H,52H,52H
 1BA4 07292929     1920          DB      07H,29H,29H,29H
 1BA8 19195252     1921          DB      19H,19H,52H,52H
 1BAC 42805C5D     1922          DB      42H,80H,5CH,5DH
 1BB0 160C8080     1923          DB      16H,0CH,80H,80H
 1BB4 096B0B6C     1924          DB      09H,6BH,0BH,6CH
 1BB8 0A6D8080     1925          DB      0AH,6DH,80H,80H
 1BBC              1926  
 1BBC              1927  ; --------------------------------
 1BBC              1928  ; GROUP MNEMONIC TABLES
 1BBC 05510465     1929  _G01D:  DB      05H,51H,04H,65H
R-ASSEMBLER VERSION 1.05C    8086.ASM                    96

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1BC0 0670750D     1930          DB      06H,70H,75H,0DH
 1BC4 5F605758     1931  _G02D:  DB      5FH,60H,57H,58H
 1BC8 696A6264     1932          DB      69H,6AH,62H,64H
 1BCC 7171504E     1933  _G03D:  DB      71H,71H,50H,4EH
 1BD0 4D181417     1934          DB      4DH,18H,14H,17H
 1BD4 1A130707     1935  _G04D:  DB      1AH,13H,07H,07H
 1BD8 29295580     1936          DB      29H,29H,55H,80H
 1BDC              1937  
 1BDC              1938  ; --------------------------------
 1BDC              1939  ; DISPLACEMENT REGISTER INDICES
 1BDC C6E6CAEA     1940  _DISP:  DB      0C6H,0E6H,0CAH,0EAH
 1BE0 0C0E0A06     1941          DB      0CH,0EH,0AH,6
 1BE4              1942  
 1BE4              1943  ; --------------------------------
 1BE4              1944  ; DISPLACEMENT TYPE TABLE
 1BE4 0E0706FF     1945  RM:     DB      0EH,7,6,0FFH
 1BE8 050103FF     1946          DB      5,1,3,0FFH
 1BEC 040002FF     1947          DB      4,0,2,0FFH
 1BF0 FFFFFFFF     1948          DB      0FFH,0FFH,0FFH,0FFH
 1BF4              1949  
 1BF4              1950  ; --------------------------------
 1BF4              1951  ; THREE GUESSES WHAT THIS IS
 1BF4 414C434C444C 1952  REGS:   DB      "ALCLDLBLAHCHDHBH"
 1BFA 424C41484348
 1C00 44484248
 1C04 415843584458 1953          DB      "AXCXDXBXSPBPSIDI"
 1C0A 425853504250
 1C10 53494449
 1C14 455343535353 1954          DB      "ESCSSSDS"
 1C1A 4453
 1C1C              1955  
 1C1C              1956  ; --------------------------------
 1C1C              1957  ; EVERY MNEMONIC ENTRY IS LISTED
 1C1C              1958  ; WITH ITS MOST LIKELY EXPECTED
 1C1C              1959  ; OPCODE EXCEPT GROUP INSTRUCTIONS
 1C1C              1960  ; WHICH HAVE THEIR OPCODE
 1C1C              1961  ; EXTENSION INSTEAD
 1C1C 7600         1962  MNMTBL: DW      118
 1C1E 414141003700 1963          DB      "AAA",0,37H,0
 1C24 41414400D507 1964          DB      "AAD",0,0D5H,7
 1C2A 41414D00D407 1965          DB      "AAM",0,0D4H,7
 1C30 414153003F00 1966          DB      "AAS",0,3FH,0
 1C36 414443001001 1967          DB      "ADC",0,10H,1
 1C3C 414444000001 1968          DB      "ADD",0,0,1
 1C42 414E44002001 1969          DB      "AND",0,20H,1
 1C48 43414C4C0000 1970          DB      "CALL",0,0,6
 1C4E 06
 1C4F 434257009800 1971          DB      "CBW",0,98H,0
 1C55 434C4300F800 1972          DB      "CLC",0,0F8H,0
 1C5B 434C4400FC00 1973          DB      "CLD",0,0FCH,0
R-ASSEMBLER VERSION 1.05C    8086.ASM                    97

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1C61 434C4900FA00 1974          DB      "CLI",0,0FAH,0
 1C67 434D4300F500 1975          DB      "CMC",0,0F5H,0
 1C6D 434D50003801 1976          DB      "CMP",0,38H,1
 1C73 434D50534200 1977          DB      "CMPSB",0,0A6H,0
 1C79 A600
 1C7B 434D50535700 1978          DB      "CMPSW",0,0A7H,0
 1C81 A700
 1C83 435744009900 1979          DB      "CWD",0,99H,0
 1C89 444141002700 1980          DB      "DAA",0,27H,0
 1C8F 444153002F00 1981          DB      "DAS",0,2FH,0
 1C95 444543000804 1982          DB      "DEC",0,8,4
 1C9B 444956003003 1983          DB      "DIV",0,30H,3
 1CA1 45534300D80E 1984          DB      "ESC",0,0D8H,0EH
 1CA7 484C5400F400 1985          DB      "HLT",0,0F4H,0
 1CAD 494449560038 1986          DB      "IDIV",0,38H,3
 1CB3 03
 1CB4 494D554C0028 1987          DB      "IMUL",0,28H,3
 1CBA 03
 1CBB 494E00E40D   1988          DB      "IN",0,0E4H,0DH
 1CC0 494E43000004 1989          DB      "INC",0,0,4
 1CC6 494E5400CD0C 1990          DB      "INT",0,0CDH,0CH
 1CCC 494E544F00CE 1991          DB      "INTO",0,0CEH,0
 1CD2 00
 1CD3 4952455400CF 1992          DB      "IRET",0,0CFH,0
 1CD9 00
 1CDA 4A41007705   1993          DB      "JA",0,77H,5
 1CDF 4A4145007305 1994          DB      "JAE",0,73H,5
 1CE5 4A42007205   1995          DB      "JB",0,72H,5
 1CEA 4A4245007605 1996          DB      "JBE",0,76H,5
 1CF0 4A43007205   1997          DB      "JC",0,72H,5
 1CF5 4A43585A00E3 1998          DB      "JCXZ",0,0E3H,5
 1CFB 05
 1CFC 4A45007405   1999          DB      "JE",0,74H,5
 1D01 4A47007F05   2000          DB      "JG",0,7FH,5
 1D06 4A4745007D05 2001          DB      "JGE",0,7DH,5
 1D0C 4A4C007C05   2002          DB      "JL",0,7CH,5
 1D11 4A4C45007E05 2003          DB      "JLE",0,7EH,5
 1D17 4A4D50000106 2004          DB      "JMP",0,1,6
 1D1D 4A4E41007605 2005          DB      "JNA",0,76H,5
 1D23 4A4E41450072 2006          DB      "JNAE",0,72H,5
 1D29 05
 1D2A 4A4E42007305 2007          DB      "JNB",0,73H,5
 1D30 4A4E42450077 2008          DB      "JNBE",0,77H,5
 1D36 05
 1D37 4A4E43007305 2009          DB      "JNC",0,73H,5
 1D3D 4A4E45007505 2010          DB      "JNE",0,75H,5
 1D43 4A4E47007E05 2011          DB      "JNG",0,7EH,5
 1D49 4A4E4745007C 2012          DB      "JNGE",0,7CH,5
 1D4F 05
 1D50 4A4E4C007D05 2013          DB      "JNL",0,7DH,5
R-ASSEMBLER VERSION 1.05C    8086.ASM                    98

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1D56 4A4E4C45007F 2014          DB      "JNLE",0,7FH,5
 1D5C 05
 1D5D 4A4E4F007105 2015          DB      "JNO",0,71H,5
 1D63 4A4E50007B05 2016          DB      "JNP",0,7BH,5
 1D69 4A4E53007905 2017          DB      "JNS",0,79H,5
 1D6F 4A4E5A007505 2018          DB      "JNZ",0,75H,5
 1D75 4A4F007005   2019          DB      "JO",0,70H,5
 1D7A 4A50007A05   2020          DB      "JP",0,7AH,5
 1D7F 4A5045007A05 2021          DB      "JPE",0,7AH,5
 1D85 4A504F007B05 2022          DB      "JPO",0,7BH,5
 1D8B 4A53007805   2023          DB      "JS",0,78H,5
 1D90 4A5A007405   2024          DB      "JZ",0,74H,5
 1D95 4C414846009F 2025          DB      "LAHF",0,9FH,0
 1D9B 00
 1D9C 4C445300C508 2026          DB      "LDS",0,0C5H,8
 1DA2 4C4541008D08 2027          DB      "LEA",0,8DH,8
 1DA8 4C455300C408 2028          DB      "LES",0,0C4H,8
 1DAE 4C4F434B00F0 2029          DB      "LOCK",0,0F0H,0AH
 1DB4 0A
 1DB5 4C4F44534200 2030          DB      "LODSB",0,0ACH,0
 1DBB AC00
 1DBD 4C4F44535700 2031          DB      "LODSW",0,0ADH,0
 1DC3 AD00
 1DC5 4C4F4F5000E2 2032          DB      "LOOP",0,0E2H,5
 1DCB 05
 1DCC 4C4F4F504500 2033          DB      "LOOPE",0,0E1H,5
 1DD2 E105
 1DD4 4C4F4F504E45 2034          DB      "LOOPNE",0,0E0H,5
 1DDA 00E005
 1DDD 4C4F4F504E5A 2035          DB      "LOOPNZ",0,0E0H,5
 1DE3 00E005
 1DE6 4C4F4F505A00 2036          DB      "LOOPZ",0,0E1H,5
 1DEC E105
 1DEE 4D4F56008809 2037          DB      "MOV",0,88H,9
 1DF4 4D4F56534200 2038          DB      "MOVSB",0,0A4H,0
 1DFA A400
 1DFC 4D4F56535700 2039          DB      "MOVSW",0,0A5H,0
 1E02 A500
 1E04 4D554C002003 2040          DB      "MUL",0,20H,3
 1E0A 4E4547001803 2041          DB      "NEG",0,18H,3
 1E10 4E4F50009000 2042          DB      "NOP",0,90H,0
 1E16 4E4F54001003 2043          DB      "NOT",0,10H,3
 1E1C 4F52000801   2044          DB      "OR",0,8,1
 1E21 4F555400E60D 2045          DB      "OUT",0,0E6H,0DH
 1E27 504F50003804 2046          DB      "POP",0,38H,4
 1E2D 504F5046009D 2047          DB      "POPF",0,9DH,0
 1E33 00
 1E34 505553480030 2048          DB      "PUSH",0,30H,4
 1E3A 04
 1E3B 505553484600 2049          DB      "PUSHF",0,9CH,0
R-ASSEMBLER VERSION 1.05C    8086.ASM                    99

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1E41 9C00
 1E43 52434C001002 2050          DB      "RCL",0,10H,2
 1E49 524352001802 2051          DB      "RCR",0,18H,2
 1E4F 52455000F30A 2052          DB      "REP",0,0F3H,0AH
 1E55 5245504500F3 2053          DB      "REPE",0,0F3H,0AH
 1E5B 0A
 1E5C 5245504E4500 2054          DB      "REPNE",0,0F2H,0AH
 1E62 F20A
 1E64 5245504E5A00 2055          DB      "REPNZ",0,0F2H,0AH
 1E6A F20A
 1E6C 5245505A00F3 2056          DB      "REPZ",0,0F3H,0AH
 1E72 0A
 1E73 52455400C30B 2057          DB      "RET",0,0C3H,0BH
 1E79 524F4C000002 2058          DB      "ROL",0,0,2
 1E7F 524F52000802 2059          DB      "ROR",0,8,2
 1E85 53414846009E 2060          DB      "SAHF",0,9EH,0
 1E8B 00
 1E8C 53414C003002 2061          DB      "SAL",0,30H,2
 1E92 53414C4300D6 2062          DB      "SALC",0,0D6H,0
 1E98 00
 1E99 534152003802 2063          DB      "SAR",0,38H,2
 1E9F 534242001801 2064          DB      "SBB",0,18H,1
 1EA5 534341534200 2065          DB      "SCASB",0,0AEH,0
 1EAB AE00
 1EAD 534341535700 2066          DB      "SCASW",0,0AFH,0
 1EB3 AF00
 1EB5 534547002604 2067          DB      "SEG",0,26H,4
 1EBB 53484C002002 2068          DB      "SHL",0,20H,2
 1EC1 534852002802 2069          DB      "SHR",0,28H,2
 1EC7 53544300F900 2070          DB      "STC",0,0F9H,0
 1ECD 53544400FD00 2071          DB      "STD",0,0FDH,0
 1ED3 53544900FB00 2072          DB      "STI",0,0FBH,0
 1ED9 53544F534200 2073          DB      "STOSB",0,0AAH,0
 1EDF AA00
 1EE1 53544F535700 2074          DB      "STOSW",0,0ABH,0
 1EE7 AB00
 1EE9 535542002801 2075          DB      "SUB",0,28H,1
 1EEF 544553540000 2076          DB      "TEST",0,0,3
 1EF5 03
 1EF6 57414954009B 2077          DB      "WAIT",0,9BH,0
 1EFC 00
 1EFD 584348470086 2078          DB      "XCHG",0,86H,0FH
 1F03 0F
 1F04 584C41544200 2079          DB      "XLATB",0,0D7H,0
 1F0A D700
 1F0C 584F52003001 2080          DB      "XOR",0,30H,1
 1F12              2081  
 1F12              2082  ; --------------------------------
 1F12              2083  ; ASSEMBLER DIRECTIVES
 1F12 1600         2084  DIRTBL: DW      22
R-ASSEMBLER VERSION 1.05C    8086.ASM                    100

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1F14 425954450001 2085          DB      "BYTE",0,1,5
 1F1A 05
 1F1B 4442000104   2086          DB      "DB",0,1,4
 1F20 4444000404   2087          DB      "DD",0,4,4
 1F25 4453000006   2088          DB      "DS",0,0,6
 1F2A 4457000204   2089          DB      "DW",0,2,4
 1F2F 44574F524400 2090          DB      "DWORD",0,3,5
 1F35 0305
 1F37 454E4400FF02 2091          DB      "END",0,0FFH,2
 1F3D 455155000001 2092          DB      "EQU",0,0,1
 1F43 4556454E0090 2093          DB      "EVEN",0,90H,0
 1F49 00
 1F4A 464152000A05 2094          DB      "FAR",0,0AH,5
 1F50 494E4342494E 2095          DB      "INCBIN",0,0FDH,7
 1F56 00FD07
 1F59 494E434C5544 2096          DB      "INCLUDE",0,0FEH,7
 1F5F 4500FE07
 1F63 484947480013 2097          DB      "HIGH",0,13H,5
 1F69 05
 1F6A 4C4F57001205 2098          DB      "LOW",0,12H,5
 1F70 4E4541520009 2099          DB      "NEAR",0,9,5
 1F76 05
 1F77 4F4646534554 2100          DB      "OFFSET",0,11H,5
 1F7D 001105
 1F80 4F5247000003 2101          DB      "ORG",0,0,3
 1F86 5041474500FC 2102          DB      "PAGE",0,0FCH,8
 1F8C 08
 1F8D 505452001005 2103          DB      "PTR",0,10H,5
 1F93 53484F525400 2104          DB      "SHORT",0,8,5
 1F99 0805
 1F9B 5449544C4500 2105          DB      "TITLE",0,0FBH,7
 1FA1 FB07
 1FA3 574F52440002 2106          DB      "WORD",0,2,5
 1FA9 05
R-ASSEMBLER VERSION 1.05C    RA.ASM                      101

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1FAA              1687  
 1FAA              1688  ; --------------------------------
 1FAA              1689  ; MAIN PROGRAM DATA AND TABLES
 1FAA 3200         1690  PAGLEN: DW      DEFPAG
 1FAC D309DD092D0A 1691  ADIR:   DW      P2,P3,P4,P5
 1FB2 200A
 1FB4 494E56414C49 1692  ERRMES: DB      "INVALID OPERAND",0
 1FBA 44204F504552
 1FC0 414E4400
 1FC4 53594E544158 1693          DB      "SYNTAX ERROR",0
 1FCA 204552524F52
 1FD0 00
 1FD1 494E56414C49 1694          DB      "INVALID ADDRESSING",0
 1FD7 442041444452
 1FDD 455353494E47
 1FE3 00
 1FE4 494E56414C49 1695          DB      "INVALID INSTRUCTION",0
 1FEA 4420494E5354
 1FF0 52554354494F
 1FF6 4E00
 1FF8 554E44454649 1696          DB      "UNDEFINED SYMBOL",0
 1FFE 4E4544205359
 2004 4D424F4C00
 2009 204259544528 1697          DB      " BYTE(S) OUT OF RANGE",0
 200F 5329204F5554
 2015 204F46205241
 201B 4E474500
 201F 4F504552414E 1698          DB      "OPERAND SIZE MISMATCH",0
 2025 442053495A45
 202B 204D49534D41
 2031 54434800
 2035 434F4E535441 1699          DB      "CONSTANT TOO LARGE",0
 203B 4E5420544F4F
 2041 204C41524745
 2047 00
 2048 4D495353494E 1700          DB      "MISSING OPERAND",0
 204E 47204F504552
 2054 414E4400
 2058 474152424147 1701          DB      "GARBAGE PAST END",0
 205E 452050415354
 2064 20454E4400
 2069 4455504C4943 1702          DB      "DUPLICATE SYMBOL",0
 206F 415445205359
 2075 4D424F4C00
 207A 204E4F542041 1703          DB      " NOT ACCESSIBLE",0
 2080 434345535349
 2086 424C4500
 208A 524553455256 1704          DB      "RESERVED WORD MISUSE",0
 2090 454420574F52
 2096 44204D495355
R-ASSEMBLER VERSION 1.05C    RA.ASM                      102

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 209C 534500
 209F 494E56414C49 1705          DB      "INVALID REGISTER",0
 20A5 442052454749
 20AB 5354455200
 20B0 4C494E452054 1706          DB      "LINE TOO LONG",0
 20B6 4F4F204C4F4E
 20BC 4700
 20BE 2046494C4520 1707          DB      " FILE I/O ERROR",0
 20C4 492F4F204552
 20CA 524F5200
 20CE 434F4D505245 1708          DB      "COMPREHENSION FAILED",0
 20D4 48454E53494F
 20DA 4E204641494C
 20E0 454400
 20E3 41534D00     1709  DOTASM: DB      "ASM",0
 20E7 434F4D00     1710  DOTCOM: DB      "COM",0
 20EB 4C535400     1711  DOTLST: DB      "LST",0
 20EF 53594D00     1712  DOTSYM: DB      "SYM",0
 20F3 504153532000 1713  PASSM:  DB      "PASS ",0
 20F9 494E3A2000   1714  INM:    DB      "IN: ",0
 20FE 4F55543A2000 1715  OUTM:   DB      "OUT: ",0
 2104 204144445220 1716  BINLIN: DB      " ADDR BINARY",0
 210A 42494E415259
 2110 00
 2111 4C494E452020 1717  SRCLIN: DB      "LINE  SOURCE",0
 2117 534F55524345
 211D 00
 211E 2053594D424F 1718  SYMLIN: DB      " SYMBOL TABLE",0
 2124 4C205441424C
 212A 4500
 212C 522D41535345 1719  AMSG:   DB      "R-ASSEMBLER"
 2132 4D424C4552
 2137 205645525349 1720          DB      " VERSION 1.05C"
 213D 4F4E20312E30
 2143 3543
 2145 0D0A24       1721          DB      13,10,36
 2148 42414420444F 1722  DOSERR: DB      "BAD DOS VERSION"
 214E 532056455253
 2154 494F4E
 2157 0D0A24       1723          DB      13,10,36
 215A 4D495353494E 1724  NOPAR:  DB      "MISSING PARAMETER"
 2160 472050415241
 2166 4D45544552
 216B 0D0A24       1725          DB      13,10,36
 216E 524120494E20 1726  USAGE:  DB      "RA IN [/SWITCH [OUT]"
 2174 5B2F53574954
 217A 4348205B4F55
 2180 545D
 2182 205B2F535749 1727          DB      " [/SWITCH [OUT]] ...]"
 2188 544348205B4F
R-ASSEMBLER VERSION 1.05C    RA.ASM                      103

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 218E 55545D5D202E
 2194 2E2E5D
 2197 0D0A         1728          DB      13,10
 2199 2F41205B4F55 1729          DB      "/A [OUT[.COM]]",9
 219F 545B2E434F4D
 21A5 5D5D09
 21A8 415353454D42 1730          DB      "ASSEMBLE"
 21AE 4C45
 21B0 0D0A         1731          DB      13,10
 21B2 2F44205B4F55 1732          DB      "/D [OUT[.ASM]]",9
 21B8 545B2E41534D
 21BE 5D5D09
 21C1 444953415353 1733          DB      "DISASSEMBLE"
 21C7 454D424C45
 21CC 0D0A         1734          DB      13,10
 21CE 2F4C205B4F55 1735          DB      "/L [OUT[.LST]]",9
 21D4 545B2E4C5354
 21DA 5D5D09
 21DD 415353454D42 1736          DB      "ASSEMBLE TO LISTING"
 21E3 4C4520544F20
 21E9 4C495354494E
 21EF 47
 21F0 0D0A         1737          DB      13,10
 21F2 2F4F20313030 1738          DB      "/O 100H",9,9
 21F8 480909
 21FB 534554204F52 1739          DB      "SET ORIGIN"
 2201 4947494E
 2205 0D0A         1740          DB      13,10
 2207 2F53205B4F55 1741          DB      "/S [OUT[.SYM]]",9
 220D 545B2E53594D
 2213 5D5D09
 2216 53544F524520 1742          DB      "STORE OR USE SYMBOLS"
 221C 4F5220555345
 2222 2053594D424F
 2228 4C53
 222A 0D0A         1743          DB      13,10
 222C 2F55205B4F55 1744          DB      "/U [OUT[.LST]]",9
 2232 545B2E4C5354
 2238 5D5D09
 223B 444953415353 1745          DB      "DISASSEMBLE TO LISTING"
 2241 454D424C4520
 2247 544F204C4953
 224D 54494E47
 2251 0D0A         1746          DB      13,10
 2253 2F5720574944 1747          DB      "/W WIDTH",9
 2259 544809
 225C 534554204C49 1748          DB      "SET LISTING WIDTH"
 2262 5354494E4720
 2268 5749445448
 226D 0D0A24       1749          DB      13,10,36
R-ASSEMBLER VERSION 1.05C    RA.ASM                      104

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 2270              1750  
 2270              1751  ; --------------------------------
 2270              1752  ; HIDDEN BUFFERS
 2270              1753  TXTBUF: DS      100H
 2370              1754  BINBUF: DS      100H
 2470              1755  LSTBUF: DS      100H
 2570              1756  TEMP:   DS      100H
 2670              1757  TEMP2:  DS      100H
 2770              1758  TTLBUF: DS      100H
 2870              1759  VARS:   DS      100H
 2970              1760  INCBUF: DS      100H
 2A70              1761  MAPBUF: DS      100H
 2B70              1762  SYMBS:
R-ASSEMBLER VERSION 1.05C    RA.ASM                      105

 SYMBOL TABLE
----------------------------------------------------------------
       0100  AA     0B55  AA1    0B5C  AAMD   16C6  ACCID  16BA
ACCMD  18E9  ACCRD  1846  ADDEX  03AA  ADDEX0 03D0  ADDEX1 03BC
ADDEX2 03C4  ADDEX3 03CC  ADIOD  1895  ADIOD0 18AB  ADIR   1FAC
AHDL   196C  AMSG   212C  ARGS   288C  ASM    0A3F  ASMCM1 0F2C
ASMCM2 0F38  ASMCM3 0F4B  ASMCM4 0F51  ASMCM5 0F61  ASMCM6 0F63
ASMCMD 0F01  ASMEQU 0AB8  ASMLBL 0A95  ASMLIN 0A98  ASMOER 0AF6
ASMORG 0ACC  BAH    018E  BINBUF 2370  BINLEN 2874  BINLIN 2104
BINTBL 1ABC  BORW   0FF6  BORW1  1010  BORW2  1029  BPD    10E4
BXD    10E6  CALF   03D6  CALF0  041A  CC     0AFB  CCE    0B53
CCK    0B3A  CCL    0B37  CCM    0AFD  CCQ    0B4A  CCS    0B41
CCT    0B45  CCW    0B4E  CLOSE  0194  CLOSE1 01DA  CLOSF  01DD
CLOSF1 01ED  COL    1166  COMMA  1155  D0     163A  D5     0FE2
D8     1649  D8X    1655  DECF   041C  DEFFN  2930  DEFORG 0100
DEFPAG 0032  DHDL   197E  DID    10E2  DIRTBL 1F12  DISAS1 16A4
DISAS2 16AA  DISASM 1675  DISP   2886  DISPD  193C  DOSERR 2148
DOTASM 20E3  DOTCOM 20E7  DOTLST 20EB  DOTSYM 20EF  EQDUM0 088C
EQDUM1 088F  EQDUM2 08B4  EQDUM3 08BB  EQDUMP 0878  ERR0   1363
ERR1   0D24  ERR3   0CA2  ERR8   0D20  ERRMES 1FB4  ERROR  0118
ERRORS 289C  ESCD   1864  FAIL   0D4D  FAIL1  0D5F  FAIL2  0D62
FLAGS  288A  FUNC   2870  G0     1633  G01D   16E7  G02D   18FE
G02D1  1916  G03D   1737  G03DT  16F0  G04D   191A  G04DF  1937
G0AH   1634  G0BH   160E  G0BH1  1623  G0BH2  162E  G0CH   1593
G0CH3  15A5  G0CHF  158E  G0DH   15AA  G0DH0  15D7  G0DHI  15CB
G0DHO  15C9  G0EH   1548  G0EHRM 1553  G0FH   15D8  G0FHAR 1606
G0FHM  15FB  G0FHRA 1608  G1     1301  G1AI   1359  G1MI   1325
G1MR   134F  G1RM   134A  G2     12B8  G2B    12D8  G2CL   12F4
G2F    12EF  G2N    12F9  G3     1368  G3R    1398  G4     13A8
G4M    13CC  G4P    13E4  G4PSR  13F8  G4S    13EA  G4W    13DE
G5     149E  G5S    14A1  G5X    1476  G6     1400  G6F0   1481
G6I    1446  G6IF   1459  G6IN   1486  G6IS   1477  G6R    1413
G6RF   1430  G6RN   1435  G7     1576  G7A    1587  G7B    1581
G8     14C4  G9     14CE  G9A    1512  G9A2   1510  G9F0   1571
G9M    153F  G9MI   1537  G9MR   153C  G9S    1528  G9SR   1530
GRPD   18CB  GSPR   118A  GSPR0  1183  GSPR1  1185  GSPR2  11A6
GV     0D95  GV7    0DE0  GV8    0DE5  GVA    0DC6  GVC    0DBB
GVHB   0E35  GVL    0DEA  GVL1   0E05  GVL2   0E11  GVL3   0E15
GVLB   0E3C  GVNS   0E24  GVQ    0DC8  GVV    0E18  GVWO   0E41
HALL   0BEC  HALN   0BF6  HALX   0BDF  HDLTBL 19BC  HUMBUG 0192
IBAPD  18B2  IHDL   194C  IMM    2888  INCBUF 2970  INCF   03EE
INCF0  0416  INCLEV 2896  INFN   28B0  INM    20F9  INT3D  187F
INTD   187B  INVD   1940  LBL    0C64  LBL1   0C85  LBL2   0C91
LBL3   0CA1  LDDAT  0ED6  LDDAT1 0EE7  LDDAT2 0EF9  LDDAT3 0EFE
LINEND 08CB  LSTBUF 2470  LSTFN  28F0  LSTHDL 2892  LSTLIN 28A0
LSTWID 28A2  MACCD  1770  MAIN   0121  MAPBUF 2A70  MM0    12B7
MM8    12B3  MMEML  1280  MMEMR  1282  MMODRM 123E  MNMTBL 1C1C
MODRM  2885  MRD    1774  MRD1   1775  MREGL  12A6  MREGR  12A8
MSD    1816  NARGS  1140  NOPAR  215A  NOSYM  0A73  NOTJMP 172C
OLDPC  289A  OPCODE 2884  OPEN   06B9  OPEN1  0706  OPEN2  070B
OPEN3  0737  OPENF  073D  OPENF1 074E  OPENF2 0750  OUTFN  28D0
OUTHDL 2890  OUTM   20FE  P2     09D3  P2F    09DA  P3     09DD
R-ASSEMBLER VERSION 1.05C    RA.ASM                      106

 SYMBOL TABLE
----------------------------------------------------------------
P3E    0A1B  P3L    09EA  P3S    0A17  P4     0A2D  P4S    0A39
P5     0A20  PAGLEN 1FAA  PAGNUM 289E  PARAEN 0275  PARAFN 026A
PARAG  026E  PARAM  0221  PARANO 0265  PARANS 02A2  PARANX 02D1
PARAO  01EE  PARARG 0260  PARASC 0226  PARAST 0292  PARAWF 01FE
PARAWN 02C5  PASS   2898  PASSM  20F3  PC     2876  PCCHAR 0024
PREFIX 2882  PROCF  02DD  PROCF0 0300  PROCF1 0316  PROCF2 0332
PROCF3 0338  PROCF4 033F  PROCF5 0357  PRUNT  09BB  PSRD   1824
RA     102A  RA0D   10D6  RA1    1066  RA2    10DB  RA8    10F6
RAD    1093  RADB   1123  RADM   10B6  RADP   10B9  RADR   10BF
RADW   112A  RADX   10FB  RAIB   1055  RAIW   1056  RAIX   1063
RAL    1040  RAM    108B  RAR    106B  RAS    1032  RE     0D64
REA    0D6B  READ   05A5  READ1  05D6  READ2  05D9  READ3  05F2
READ4  060C  READ5  0614  READ6  0619  READ7  0620  READ8  0638
REB    0D83  REC    0D86  RED    0D8C  REGS   1BF4  REGWD  184F
RELBD  1723  RELWD  1859  RETD   1891  RETFD  1883  RFN    0381
RFN1   0394  RFN2   0396  RFN3   03A1  RFN4   03A4  RFN5   03A5
RIMMD  16CD  RIMMDB 16E4  RIMMDW 16DE  RM     1BE4  RMD    18F2
RMD1   18F3  RMID   16ED  RN     0BF8  RN0    0C26  RN1    0C02
RN2    0C10  RN3    0C21  RNC    0F89  RNC1   0FB4  RNC10  0FBD
RNC16  0FBC  RNC2   0FB9  RNC4   0FBA  RNC8   0FBB  RNM    0FC9
RNM1   0FE7  RNM2   0FF0  RNMER8 0FF1  RUN    014D  RWMD   18ED
SCRAM  09B4  SCREAM 0965  SCREG  11B8  SCREG0 11D3  SCREM  09AD
SCROME 09A8  SCROOM 098D  SCROYM 099E  SCRUM  0997  SDEF   0B93
SDEF1  0B9D  SDEF2  0BA0  SDEF3  0BBB  SDEF4  0BCC  SDEF5  0BD1
SDEF6  0BD7  SDEF7  0BD9  SEGOFD 18BE  SEGPRE 2883  SETDCM 0D03
SETDEN 0D0F  SETDFB 0CA7  SETDFS 0E8A  SETDMA 0CAC  SETDQU 0CEF
SETDUD 0CE8  SETDVA 0CC3  SETDVW 0CD7  SETEND 0D4A  SETEQ0 0ACA
SETEQU 0AB9  SETIN1 0D35  SETIN2 0D3D  SETIN3 0D3F  SETINC 0D28
SETOR1 0AEF  SETOR2 0AF1  SETORG 0AD7  SID    10E0  SINGD  16CB
SIZES  288E  SL     0B60  SL1    0B64  SL2    0B70  SL3    0B79
SL4    0B84  SL5    0B89  SL6    0B92  SMD    1835  SRCLIN 2111
START  0100  STDAT  0E91  STDAT1 0EA2  STDAT2 0EBB  STDAT3 0EC0
STDAT4 0ECF  STK    287C  SW     0F64  SW1    0F71  SW2    0F86
SW3    0F88  SYMBS  2B70  SYMDM0 0761  SYMDM1 0762  SYMDM2 078C
SYMDMP 0758  SYMFLG 288B  SYMFN  2910  SYMHDL 2894  SYMLIN 211E
SYMLS1 0812  SYMLS2 0814  SYMLS3 0821  SYMLS4 0828  SYMLS5 082C
SYMLS6 0857  SYMLS7 085A  SYMLS8 0877  SYMLST 0808  SYMSR1 07AF
SYMSR2 07B3  SYMSR3 07B5  SYMSR4 07C2  SYMSR5 07D3  SYMSR6 07F7
SYMSRT 07A5  TEMP   2570  TEMP2  2670  TTLBUF 2770  TXTBUF 2270
TXTLEN 2872  UDDUM0 0900  UDDUM1 0903  UDDUM2 0940  UDDUM3 0947
UDDUMP 08E1  USAGE  216E  USIZE  287A  VARS   2870  VORG   2878
WA     11D5  WA0    11FA  WA6    11F5  WA7    1239  WAB    1221
WADJ   2880  WAE    121E  WAHZ   1201  WALZ   11FF  WARG   112C
WAZ    1206  WDAL   180F  WDAX   1800  WDB    1807  WDC    17CF
WDD    17BB  WDIR   1669  WDISP  17A4  WDISP1 17B0  WDL    17DA
WDW    17F8  WDX    17F3  WFN    036B  WFN1   036D  WFN2   0378
WHAL   170D  WHAL0  1714  WHAL1  171C  WHAL2  1722  WHALS  1703
WHAX   1752  WHAX0  1759  WHAX1  1762  WHAX2  176F  WHAXS  1748
WHEX   0948  WLST   0433  WLSTB  048A  WLSTE  04AA  WLSTG  04C9
WLSTI  04D9  WLSTL  0464  WLSTM  0488  WLSTN  0484  WLSTO  0507
R-ASSEMBLER VERSION 1.05C    RA.ASM                      107

 SYMBOL TABLE
----------------------------------------------------------------
WLSTP  04D0  WLSTS  04B0  WLSTT  0457  WLSTX  04D8  WMN    1658
WMN1   165D  WMN2   1662  WN     0C27  WN0    0C63  WN1    0C35
WN2    0C37  WN4    0C5B  WN5    0C4F  WPTR   178A  WREG   177D
WRITE  0642  WRITE1 066A  WRITE2 0674  WRITE3 0688  WRITE4 0699
WRITE5 069E  WRITE6 06A0  WRITE7 06B1  WRM    0E81  WROTE  0952
WROTE1 0960  WSELF  179B  WSYMA  0E45  WSYMA1 0E6E  WSYMA2 0E7A
WSYMA3 0E7D  WSYMA4 0E7F  WTITL1 052F  WTITL2 0542  WTITL3 0563
WTITL4 0588  WTITL5 059F  WTITLE 050B  _DISP  1BDC  _G01D  1BBC
_G02D  1BC4  _G03D  1BCC  _G04D  1BD4

R-ASSEMBLER VERSION 1.05C    RA.ASM                       1

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0100              1     ; --------------------------------
 0100              2     ; R-ASSEMBLER VERSION 1.05C
 0100              3     LSTWID  EQU     6
 0100              4     PCCHAR  EQU     24H
 0100              5     DEFORG  EQU     100H
 0100              6     DEFPAG  EQU     50
 0100              7     INFN    EQU     VARS+40H
 0100              8     OUTFN   EQU     VARS+60H
 0100              9     LSTFN   EQU     VARS+80H
 0100              10    SYMFN   EQU     VARS+0A0H
 0100              11    DEFFN   EQU     VARS+0C0H
 0100              12    
 0100              13    ; ASSEMBLER MODULE VARIABLES
 0100              14    FUNC    EQU     VARS
 0100              15    TXTLEN  EQU     VARS+2
 0100              16    BINLEN  EQU     VARS+4
 0100              17    PC      EQU     VARS+6
 0100              18    VORG    EQU     VARS+8
 0100              19    USIZE   EQU     VARS+0AH
 0100              20    STK     EQU     VARS+0CH
 0100              21    WADJ    EQU     VARS+10H
 0100              22    PREFIX  EQU     VARS+12H
 0100              23    SEGPRE  EQU     VARS+13H
 0100              24    OPCODE  EQU     VARS+14H
 0100              25    MODRM   EQU     VARS+15H
 0100              26    DISP    EQU     VARS+16H
 0100              27    IMM     EQU     VARS+18H
 0100              28    FLAGS   EQU     VARS+1AH
 0100              29    SYMFLG  EQU     VARS+1BH
 0100              30    ARGS    EQU     VARS+1CH
 0100              31    SIZES   EQU     VARS+1EH
 0100              32    
 0100              33    ; SYSTEM INTERFACE VARIABLES
 0100              34    OUTHDL  EQU     VARS+20H
 0100              35    LSTHDL  EQU     VARS+22H
 0100              36    SYMHDL  EQU     VARS+24H
 0100              37    INCLEV  EQU     VARS+26H
 0100              38    PASS    EQU     VARS+28H
 0100              39    OLDPC   EQU     VARS+2AH
 0100              40    ERRORS  EQU     VARS+2CH
 0100              41    PAGNUM  EQU     VARS+2EH
 0100              42    LSTLIN  EQU     VARS+30H
 0100              43            ORG     100H
 0100              44    
 0100              45    ; --------------------------------
 0100              46    ; DISPLAY PROGRAM MESSAGE AND
 0100              47    ; CHECK DOS VERSION
 0100 B409         48    START:  MOV     AH,9
 0102 BA0521       49            MOV     DX,AMSG
 0105 CD21         50            INT     21H
R-ASSEMBLER VERSION 1.05C    RA.ASM                       2

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0107 B430         51            MOV     AH,30H
 0109 CD21         52            INT     21H
 010B 84C0         53            TEST    AL,AL
 010D 7512         54            JNZ     MAIN
 010F              55    
 010F              56    ; 2.0 OR HIGHER REQUIRED FOR
 010F              57    ; FILE HANDLES
 010F B409         58            MOV     AH,9
 0111 BA2121       59            MOV     DX,DOSERR
 0114 CD21         60            INT     21H
 0116 CD20         61            INT     20H
 0118              62    
 0118              63    ; COMMAND LINE PARAMETER ERROR
 0118              64    ; NOT SUPER SERIOUS, SO ERROR
 0118              65    ; CODE 0
 0118 B409         66    ERROR:  MOV     AH,9
 011A CD21         67            INT     21H
 011C B8004C       68            MOV     AX,4C00H
 011F CD21         69            INT     21H
 0121              70    
 0121              71    ; BLANK ALL TEMPORARY VARIABLES
 0121              72    ; AND STORAGE BUFFERS
 0121 31C0         73    MAIN:   XOR     AX,AX
 0123 BF2D22       74            MOV     DI,TXTBUF
 0126 B90309       75            MOV     CX,SYMBS-TXTBUF+3
 0129 FC           76            CLD
 012A F3AA         77            REP STOSB
 012C              78    
 012C              79    ; START LISTING ON PAGE ONE
 012C 40           80            INC     AX
 012D A35B28       81            MOV     [PAGNUM],AX
 0130 A32D2B       82            MOV     [SYMBS],AX
 0133              83    
 0133              84    ; FIRST SYMBOL RESERVED FOR
 0133              85    ; LOAD ADDRESS
 0133 B80001       86            MOV     AX,DEFORG
 0136 A3302B       87            MOV     [SYMBS+3],AX
 0139 A33528       88            MOV     [VORG],AX
 013C              89    
 013C              90    ; START READING COMMAND LINE
 013C BE8100       91            MOV     SI,81H
 013F E89300       92            CALL    PARAM
 0142 72D4         93            JC      ERROR
 0144 E8FC04       94            CALL    OPEN
 0147 7249         95            JC      BAH
 0149 FF362D28     96            PUSH    WORD [FUNC]
 014D              97    
 014D              98    ; SIMPLE TWO-PASS STRUCTURE
 014D BF2D25       99    RUN:    MOV     DI,TEMP
 0150 BECC20       100           MOV     SI,PASSM
R-ASSEMBLER VERSION 1.05C    RA.ASM                       3

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0153 E8100D       101           CALL    WRM
 0156 A15528       102           MOV     AX,[PASS]
 0159 40           103           INC     AX
 015A A35528       104           MOV     [PASS],AX
 015D B90A00       105           MOV     CX,10
 0160 E8A90A       106           CALL    WN
 0163 E83A08       107           CALL    PRUNT
 0166 E81E01       108           CALL    PROCF
 0169 7227         109           JC      BAH
 016B              110   
 016B              111   ; IF ERRORS WERE ENCOUNTERED,
 016B              112   ; ABORT FURTHER ASSEMBLY UNTIL
 016B              113   ; CORRECTED
 016B A15928       114           MOV     AX,[ERRORS]
 016E 85C0         115           TEST    AX,AX
 0170 7528         116           JNZ     HUMBUG
 0172              117   
 0172              118   ; FUNC GETS PROGRESSIVELY BLANKED
 0172              119   ; BUT SINCE THERE'S ONLY TWO
 0172              120   ; BYTES, ONLY TWO PASSES WILL
 0172              121   ; BE EXECUTED.  MODIFYING THIS
 0172              122   ; FOR A MULTI-PASS STRUCTURE
 0172              123   ; COULD BE DONE WITH A DEDICATED
 0172              124   ; FUNC BUFFER
 0172 A12D28       125           MOV     AX,[FUNC]
 0175 30C0         126           XOR     AL,AL
 0177 86E0         127           XCHG    AL,AH
 0179 A32D28       128           MOV     [FUNC],AX
 017C 84C0         129           TEST    AL,AL
 017E 75CD         130           JNZ     RUN
 0180 8F062D28     131           POP     WORD [FUNC]
 0184 E85107       132           CALL    UDDUMP
 0187 E8AC05       133           CALL    SYMDMP
 018A E85505       134           CALL    CLOSE
 018D B8004C       135           MOV     AX,4C00H
 0190 CD21         136           INT     21H
 0192              137   
 0192              138   ; ERROR CODE 1 FOR ERRORS WITH
 0192              139   ; FILE I/O
 0192 E84D05       140   BAH:    CALL    CLOSE
 0195 B8014C       141           MOV     AX,4C01H
 0198 CD21         142           INT     21H
 019A              143   
 019A              144   ; ERROR CODE 2 FOR ERRORS IN
 019A              145   ; THE PROGRAM
 019A E84505       146   HUMBUG: CALL    CLOSE
 019D B8024C       147           MOV     AX,4C02H
 01A0 CD21         148           INT     21H
 01A2              149   
 01A2              150   ; THE ENTRY POINT FOR THIS IS A
R-ASSEMBLER VERSION 1.05C    RA.ASM                       4

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 01A2              151   ; FALLTHROUGH FURTHER AHEAD; THIS
 01A2              152   ; PART SPECIFIES THE WRITTEN LOAD
 01A2              153   ; ADDRESS FOR DISASSEMBLY
 01A2 E83B09       154   PARAO:  CALL    CC
 01A5 7468         155           JZ      PARANO
 01A7 E8C40D       156           CALL    RNC
 01AA 7263         157           JC      PARANO
 01AC 89163528     158           MOV     [VORG],DX
 01B0 EB23         159           JMP     SHORT PARAM
 01B2              160   
 01B2              161   ; TEST IF BUFFER HOLDS FILESPEC
 01B2              162   ; WRITE NAME IF NOT; COMPLAIN IF
 01B2              163   ; IT DOES
 01B2 8A05         164   PARAWF: MOV     AL,[DI]
 01B4 84C0         165           TEST    AL,AL
 01B6 7552         166           JNZ     PARARG
 01B8 89F2         167           MOV     DX,SI
 01BA E84001       168           CALL    WFN
 01BD              169   
 01BD              170   ; ALSO SAVE THE FIRST DETECTED
 01BD              171   ; FILESPEC AS DEFAULT FILE NAME
 01BD A0ED28       172           MOV     AL,[DEFFN]
 01C0 84C0         173           TEST    AL,AL
 01C2 7511         174           JNZ     PARAM
 01C4 56           175           PUSH    SI
 01C5 89D6         176           MOV     SI,DX
 01C7 BFED28       177           MOV     DI,DEFFN
 01CA E83001       178           CALL    WFN
 01CD BEED28       179           MOV     SI,DEFFN
 01D0              180   
 01D0              181   ; WITHOUT AN EXTENSION
 01D0 F9           182           STC
 01D1 E86801       183           CALL    ADDEX
 01D4 5E           184           POP     SI
 01D5              185   
 01D5              186   ; --------------------------------
 01D5              187   ; PROCESS COMMAND LINE AND SET
 01D5              188   ; FUNCTION AND FILE FLAGS
 01D5 BF6D28       189   PARAM:  MOV     DI,INFN
 01D8 EB3E         190           JMP     SHORT PARAG
 01DA 3C4F         191   PARASC: CMP     AL,"O"
 01DC 74C4         192           JZ      PARAO
 01DE              193   
 01DE              194   ; SET REQUESTED FUNCTION CODES
 01DE              195   ; AND FILE NAME BUFFER FOR GIVEN
 01DE              196   ; SWITCH AND BRANCH TO CONFIRM
 01DE BA0112       197           MOV     DX,1201H
 01E1 BF8D28       198           MOV     DI,OUTFN
 01E4 3C41         199           CMP     AL,"A"
 01E6 742C         200           JZ      PARAFN
R-ASSEMBLER VERSION 1.05C    RA.ASM                       5

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 01E8 BA9000       201           MOV     DX,90H
 01EB 3C44         202           CMP     AL,"D"
 01ED 7425         203           JZ      PARAFN
 01EF BA0122       204           MOV     DX,2201H
 01F2 BFAD28       205           MOV     DI,LSTFN
 01F5 3C4C         206           CMP     AL,"L"
 01F7 741B         207           JZ      PARAFN
 01F9 BAA000       208           MOV     DX,0A0H
 01FC 3C55         209           CMP     AL,"U"
 01FE 7414         210           JZ      PARAFN
 0200 BA0040       211           MOV     DX,4000H
 0203 BFCD28       212           MOV     DI,SYMFN
 0206 3C53         213           CMP     AL,"S"
 0208 740A         214           JZ      PARAFN
 020A BA4721       215   PARARG: MOV     DX,USAGE
 020D F9           216           STC
 020E C3           217           RET
 020F BA3321       218   PARANO: MOV     DX,NOPAR
 0212 F9           219           STC
 0213 C3           220           RET
 0214 09162D28     221   PARAFN: OR      [FUNC],DX
 0218 E8F800       222   PARAG:  CALL    RFN
 021B 72BD         223           JC      PARASC
 021D 7593         224           JNZ     PARAWF
 021F              225   
 021F              226   ; DONE READING THROUGH PARAMETERS
 021F 800EED2800   227   PARAEN: OR      BYTE [DEFFN],0
 0224 74E9         228           JZ      PARANO
 0226              229   
 0226              230   ; NOW ASSIGN DEFAULT FILE
 0226              231   ; EXTENSIONS TO NAMES WITHOUT
 0226              232   ; SPECIFIED EXTENSIONS
 0226 BDB820       233           MOV     BP,DOTCOM
 0229 BAB420       234           MOV     DX,DOTASM
 022C BF6D28       235           MOV     DI,INFN
 022F A12D28       236           MOV     AX,[FUNC]
 0232 A98030       237           TEST    AX,3080H
 0235 7505         238           JNZ     PARAST
 0237              239   
 0237              240   ; IF NO I/O MODE WAS SPECIFIED,
 0237              241   ; I.E. IF PERHAPS ONLY A FILE
 0237              242   ; NAME WAS GIVEN AS THE SOLE
 0237              243   ; PARAMETER, THE FUNCTION FLAGS
 0237              244   ; ARE NOT SET, SO DEFAULT TO
 0237              245   ; OUTPUTTING A BINARY AND A
 0237              246   ; LISTING AND SET FUNC TO
 0237              247   ; TWO-PASS ASSEMBLY
 0237 0D0132       248           OR      AX,3201H
 023A 7510         249           JNZ     PARANS
 023C A880         250   PARAST: TEST    AL,80H
R-ASSEMBLER VERSION 1.05C    RA.ASM                       6

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 023E 740C         251           JZ      PARANS
 0240              252   
 0240              253   ; DEFAULT INPUT EXTENSION IS ASM
 0240              254   ; AND OUTPUT IS COM, BUT IF
 0240              255   ; DISASSEMBLY IS REQUESTED, SWAP
 0240              256   ; THE EXTENSIONS
 0240 87D5         257           XCHG    BP,DX
 0242              258   
 0242              259   ; SYMBOL FILE REQUESTED WITH
 0242              260   ; DISASSEMBLY WILL HAVE IT BEING
 0242              261   ; READ AND SYMBOL SCANNING FLAG
 0242              262   ; MUST BE SET IN FUNCTION FLAGS
 0242 A90040       263           TEST    AX,4000H
 0245 7405         264           JZ      PARANS
 0247 25FFBF       265           AND     AX,0BFFFH
 024A 0C06         266           OR      AL,6
 024C A32D28       267   PARANS: MOV     [FUNC],AX
 024F BEED28       268           MOV     SI,DEFFN
 0252 E8D100       269           CALL    RFN1
 0255 E81700       270           CALL    PARAWN
 0258 89EA         271           MOV     DX,BP
 025A BF8D28       272           MOV     DI,OUTFN
 025D E80F00       273           CALL    PARAWN
 0260 BAC020       274           MOV     DX,DOTSYM
 0263 BFCD28       275           MOV     DI,SYMFN
 0266 E80600       276           CALL    PARAWN
 0269 BABC20       277           MOV     DX,DOTLST
 026C BFAD28       278           MOV     DI,LSTFN
 026F              279   
 026F              280   ; GENERATE NAMES AND EXTENSIONS
 026F              281   ; THAT WERE NOT SPECIFIED
 026F 53           282   PARAWN: PUSH    BX
 0270 56           283           PUSH    SI
 0271 57           284           PUSH    DI
 0272 8B05         285           MOV     AX,[DI]
 0274 84C0         286           TEST    AL,AL
 0276 7503         287           JNZ     PARANX
 0278 E88200       288           CALL    WFN
 027B 5E           289   PARANX: POP     SI
 027C E8A700       290           CALL    RFN1
 027F F8           291           CLC
 0280 E8B900       292           CALL    ADDEX
 0283 5E           293           POP     SI
 0284 5B           294           POP     BX
 0285 F8           295           CLC
 0286 C3           296           RET
 0287              297   
 0287              298   ; --------------------------------
 0287              299   ; ASSEMBLE OR DISASSEMBLE AN
 0287              300   ; ENTIRE FILE
R-ASSEMBLER VERSION 1.05C    RA.ASM                       7

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0287 A13528       301   PROCF:  MOV     AX,[VORG]
 028A A33328       302           MOV     [PC],AX
 028D              303   
 028D              304   ; RESET ALL PERTINENT COUNTERS
 028D 31C0         305           XOR     AX,AX
 028F A33728       306           MOV     [USIZE],AX
 0292 A35D28       307           MOV     [LSTLIN],AX
 0295              308   
 0295              309   ; ON DISASSEMBLY, IF SYMBOLS ARE
 0295              310   ; USED, FIRST WRITE OUT ALL THAT
 0295              311   ; ARE EQUATES
 0295 E8C505       312           CALL    EQDUMP
 0298              313   
 0298              314   ; GET INPUT FILE PARAMETERS
 0298 E8CD00       315           CALL    CALF
 029B AD           316           LODSW
 029C BB0042       317           MOV     BX,4200H
 029F 93           318           XCHG    AX,BX
 02A0              319   
 02A0              320   ; RESET FILE READ POINTER
 02A0 31C9         321           XOR     CX,CX
 02A2 31D2         322           XOR     DX,DX
 02A4 8914         323           MOV     [SI],DX
 02A6 CD21         324           INT     21H
 02A8 E88402       325   PROCF1: CALL    READ
 02AB              326   
 02AB              327   ; CARRY FLAG SIGNALS READ ERROR,
 02AB              328   ; SO ABORT IMMEDIATELY ON ERROR
 02AB 7217         329           JC      PROCF2
 02AD              330   
 02AD              331   ; ZERO FLAG SIGNALS END OF FILE
 02AD 741B         332           JZ      PROCF3
 02AF              333   
 02AF              334   ; SAVE PROGRAM COUNTER FOR LISTING
 02AF A13328       335           MOV     AX,[PC]
 02B2 A35728       336           MOV     [OLDPC],AX
 02B5 E86C07       337           CALL    ASM
 02B8 7217         338           JC      PROCF4
 02BA E80801       339           CALL    WLST
 02BD 7205         340           JC      PROCF2
 02BF E80A03       341           CALL    WRITE
 02C2 73E4         342           JNC     PROCF1
 02C4              343   
 02C4              344   ; ON ANY FILE ERRORS, CLOSE ALL
 02C4              345   ; OPEN INPUT FILES AND ABORT WITH
 02C4              346   ; CARRY
 02C4 E8E700       347   PROCF2: CALL    DECF
 02C7 73FB         348           JNC     PROCF2
 02C9 C3           349           RET
 02CA              350   
R-ASSEMBLER VERSION 1.05C    RA.ASM                       8

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 02CA              351   ; ON END OF FILE, CLOSE CURRENT
 02CA              352   ; INPUT FILE
 02CA E8E100       353   PROCF3: CALL    DECF
 02CD 73D9         354           JNC     PROCF1
 02CF              355   
 02CF              356   ; DO NOT SIGNAL ERROR, EOF IS
 02CF              357   ; A LEGITIMATE CAUSE OF QUITTING
 02CF F8           358           CLC
 02D0 C3           359           RET
 02D1              360   
 02D1              361   ; SIGNED ERROR CODES ARE DISGUISED
 02D1              362   ; SYSTEM INTERFACE REQUESTS FROM
 02D1              363   ; THE ASSEMBLER, BUT AS THEY WORK
 02D1              364   ; VIA THE ERROR HANDLER INTERFACE
 02D1              365   ; THE LINE HAS TO BE MANUALLY
 02D1              366   ; ECHOED TO LISTING HERE
 02D1 E8F100       367   PROCF4: CALL    WLST
 02D4 84C0         368           TEST    AL,AL
 02D6 7911         369           JNS     PROCF5
 02D8              370   
 02D8              371   ; PROCESS SYSTEM REQUEST;
 02D8              372   ; END DIRECTIVE TRIGGERS ZERO FLAG
 02D8 98           373           CBW
 02D9 F7D0         374           NOT     AX
 02DB 74CB         375           JZ      PROCF1
 02DD              376   
 02DD              377   ; HANDLER TABLE STARTS ON INCLUDE
 02DD              378   ; DIRECTIVE SO MAKE THAT BASELINE
 02DD 48           379           DEC     AX
 02DE BF921F       380           MOV     DI,ADIR
 02E1 D1E0         381           SHL     AX,1
 02E3 01C7         382           ADD     DI,AX
 02E5 FF15         383           CALL    [DI]
 02E7 73BF         384           JNC     PROCF1
 02E9              385   
 02E9              386   ; WRITE ERROR MESSAGE TO CONSOLE
 02E9              387   ; AND LISTING
 02E9 E85E06       388   PROCF5: CALL    SCREAM
 02EC F6062D2820   389           TEST    BYTE [FUNC],20H
 02F1 74B5         390           JZ      PROCF1
 02F3 B440         391           MOV     AH,40H
 02F5 8B1E4F28     392           MOV     BX,[LSTHDL]
 02F9 CD21         393           INT     21H
 02FB EBAB         394           JMP     SHORT PROCF1
 02FD              395   
 02FD              396   ; --------------------------------
 02FD              397   ; WRITE BX-LENGTH STRING FROM SI
 02FD              398   ; TO DI, CONVERTED TO UPPERCASE
 02FD              399   ; AND ZERO-TERMINATED
 02FD FC           400   WFN:    CLD
R-ASSEMBLER VERSION 1.05C    RA.ASM                       9

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 02FE 53           401           PUSH    BX
 02FF AC           402   WFN1:   LODSB
 0300 3C61         403           CMP     AL,61H
 0302 7206         404           JC      WFN2
 0304 3C7B         405           CMP     AL,7BH
 0306 7302         406           JNC     WFN2
 0308 24DF         407           AND     AL,0DFH
 030A AA           408   WFN2:   STOSB
 030B 4B           409           DEC     BX
 030C 75F1         410           JNZ     WFN1
 030E 30C0         411           XOR     AL,AL
 0310 AA           412           STOSB
 0311 5B           413           POP     BX
 0312 C3           414           RET
 0313              415   
 0313              416   ; --------------------------------
 0313              417   ; READ COMMAND LINE ELEMENT,
 0313              418   ; SET CARRY FLAG IF SWITCH
 0313 FC           419   RFN:    CLD
 0314 AC           420           LODSB
 0315 3C00         421           CMP     AL,0
 0317 741D         422           JE      RFN4
 0319 3C0D         423           CMP     AL,0DH
 031B 7419         424           JE      RFN4
 031D 3C21         425           CMP     AL,21H
 031F 72F2         426           JB      RFN
 0321 3C2F         427           CMP     AL,2FH
 0323 7412         428           JE      RFN5
 0325 4E           429           DEC     SI
 0326 31DB         430   RFN1:   XOR     BX,BX
 0328 43           431   RFN2:   INC     BX
 0329 8A00         432           MOV     AL,[BX+SI]
 032B 3C2F         433           CMP     AL,2FH
 032D 7404         434           JE      RFN3
 032F 3C21         435           CMP     AL,21H
 0331 73F5         436           JNB     RFN2
 0333 83FB00       437   RFN3:   CMP     BX,0
 0336 C3           438   RFN4:   RET
 0337 AC           439   RFN5:   LODSB
 0338 24DF         440           AND     AL,0DFH
 033A F9           441           STC
 033B C3           442           RET
 033C              443   
 033C              444   ; --------------------------------
 033C              445   ; ADD OR REMOVE EXTENSION FROM
 033C              446   ; BX-LENGTH FILE NAME AT SI,
 033C              447   ; DEPENDING ON CARRY FLAG BEING
 033C              448   ; RESET OR SET, RESPECTIVELY
 033C 9F           449   ADDEX:  LAHF
 033D 8D38         450           LEA     DI,[BX+SI]
R-ASSEMBLER VERSION 1.05C    RA.ASM                       10

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 033F B02E         451           MOV     AL,2EH
 0341 89D9         452           MOV     CX,BX
 0343              453   
 0343              454   ; FIND FINAL OCCURRENCE OF
 0343              455   ; EXTENSION DOT
 0343 FD           456           STD
 0344 F2AE         457           REPNE SCASB
 0346 7506         458           JNZ     ADDEX1
 0348              459   
 0348              460   ; GET ENTRY STATE OF CARRY FLAG
 0348 9E           461           SAHF
 0349 7317         462           JNC     ADDEX0
 034B              463   
 034B              464   ; GET BACK TO DOT LOCATION AND
 034B              465   ; PREPARE TO CUT OFF
 034B 47           466           INC     DI
 034C EB10         467           JMP     SHORT ADDEX3
 034E 9E           468   ADDEX1: SAHF
 034F 7211         469           JC      ADDEX0
 0351 8D38         470           LEA     DI,[BX+SI]
 0353 87D6         471           XCHG    SI,DX
 0355              472   
 0355              473   ; ADD ZERO TERMINATED FILE
 0355              474   ; EXTENSION
 0355 FC           475           CLD
 0356 AA           476   ADDEX2: STOSB
 0357 AC           477           LODSB
 0358 84C0         478           TEST    AL,AL
 035A 75FA         479           JNZ     ADDEX2
 035C 87D6         480           XCHG    SI,DX
 035E              481   
 035E              482   ; GET NEW LENGTH
 035E 89FB         483   ADDEX3: MOV     BX,DI
 0360 29F3         484           SUB     BX,SI
 0362 8D38         485   ADDEX0: LEA     DI,[BX+SI]
 0364              486   
 0364              487   ; TERMINATE FILESPEC WITH ZERO
 0364 30C0         488           XOR     AL,AL
 0366 AA           489           STOSB
 0367 C3           490           RET
 0368              491   
 0368              492   ; --------------------------------
 0368              493   ; RETRIEVE CURRENT INPUT FILE
 0368              494   ; PARAMETERS
 0368 A15328       495   CALF:   MOV     AX,[INCLEV]
 036B 85C0         496           TEST    AX,AX
 036D 743D         497           JZ      CALF0
 036F FC           498           CLD
 0370 48           499           DEC     AX
 0371              500   
R-ASSEMBLER VERSION 1.05C    RA.ASM                       11

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0371              501   ; ZERO FLAG SET MEANS IT IS THE
 0371              502   ; FIRST OPEN INPUT FILE
 0371 9C           503           PUSHF
 0372 86E0         504           XCHG    AL,AH
 0374 D1E8         505           SHR     AX,1
 0376 D1E8         506           SHR     AX,1
 0378 BE2D29       507           MOV     SI,INCBUF
 037B 01C6         508           ADD     SI,AX
 037D              509   
 037D              510   ; RETRIEVE ZERO FLAG AND CLEAR
 037D              511   ; ERROR FLAG
 037D 9D           512           POPF
 037E F8           513           CLC
 037F C3           514           RET
 0380              515   
 0380              516   ; --------------------------------
 0380              517   ; OPEN NEW INPUT FILE
 0380 FF065328     518   INCF:   INC     WORD [INCLEV]
 0384 89F7         519           MOV     DI,SI
 0386 E8DFFF       520           CALL    CALF
 0389 721D         521           JC      INCF0
 038B 87F7         522           XCHG    DI,SI
 038D 57           523           PUSH    DI
 038E FC           524           CLD
 038F 31C0         525           XOR     AX,AX
 0391              526   
 0391              527   ; CLEAR FILE HANDLE
 0391 AB           528           STOSW
 0392              529   
 0392              530   ; CLEAR CURRENT LINE
 0392 AB           531           STOSW
 0393              532   
 0393              533   ; SAVE FILE NAME IN BUFFER
 0393 89FA         534           MOV     DX,DI
 0395 E865FF       535           CALL    WFN
 0398 B8003D       536           MOV     AX,3D00H
 039B CD21         537           INT     21H
 039D              538   
 039D              539   ; RESTORE HANDLE POSITION
 039D              540   ; IN BUFFER AND STORE HANDLE
 039D 5F           541           POP     DI
 039E 7208         542           JC      INCF0
 03A0 AB           543           STOSW
 03A1              544   
 03A1              545   ; SIGNAL END OF PAGE TO START
 03A1              546   ; ON A NEW PAGE
 03A1 A1901F       547           MOV     AX,[PAGLEN]
 03A4 A35D28       548           MOV     [LSTLIN],AX
 03A7 C3           549           RET
 03A8 FF0E5328     550   INCF0:  DEC     WORD [INCLEV]
R-ASSEMBLER VERSION 1.05C    RA.ASM                       12

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 03AC F9           551   CALF0:  STC
 03AD C3           552           RET
 03AE              553   
 03AE              554   ; --------------------------------
 03AE              555   ; CLOSE CURRENT INPUT FILE
 03AE E8B7FF       556   DECF:   CALL    CALF
 03B1 76F9         557           JBE     CALF0
 03B3 B43E         558           MOV     AH,3EH
 03B5 8B1C         559           MOV     BX,[SI]
 03B7 CD21         560           INT     21H
 03B9 FF0E5328     561           DEC     WORD [INCLEV]
 03BD              562   
 03BD              563   ; END OF PAGE, TURN A NEW LEAF
 03BD A1901F       564           MOV     AX,[PAGLEN]
 03C0 A35D28       565           MOV     [LSTLIN],AX
 03C3 F8           566           CLC
 03C4 C3           567           RET
 03C5              568   
 03C5              569   ; --------------------------------
 03C5              570   ; WRITE LISTING
 03C5 50           571   WLST:   PUSH    AX
 03C6 52           572           PUSH    DX
 03C7 53           573           PUSH    BX
 03C8 56           574           PUSH    SI
 03C9 57           575           PUSH    DI
 03CA              576   
 03CA              577   ; ONLY WRITE LISTING IF REQUESTED
 03CA F6062D2820   578           TEST    BYTE [FUNC],20H
 03CF 746B         579           JZ      WLSTE
 03D1 BE2D23       580           MOV     SI,BINBUF
 03D4 BF2D24       581           MOV     DI,LSTBUF
 03D7 8B1E3128     582           MOV     BX,[BINLEN]
 03DB 8B165728     583           MOV     DX,[OLDPC]
 03DF 89FD         584           MOV     BP,DI
 03E1              585   
 03E1              586   ; PRINT ADDRESS AND FIRST COUPLE
 03E1              587   ; OF BYTES OF DATA
 03E1 E85E00       588           CALL    WLSTS
 03E4              589   
 03E4              590   ; PRINT SPACES AND LINE NUMBER
 03E4 E88700       591           CALL    WLSTI
 03E7              592   
 03E7              593   ; SAVE POSITION FOR TAB TO SPACE
 03E7              594   ; CONVERSION
 03E7 89FD         595           MOV     BP,DI
 03E9 53           596   WLSTT:  PUSH    BX
 03EA 56           597           PUSH    SI
 03EB              598   
 03EB              599   ; WRITE INPUT LINE TO LISTING
 03EB BE2D22       600           MOV     SI,TXTBUF
R-ASSEMBLER VERSION 1.05C    RA.ASM                       13

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 03EE 8B1E2F28     601           MOV     BX,[TXTLEN]
 03F2 85DB         602           TEST    BX,BX
 03F4 7424         603           JZ      WLSTM
 03F6 AC           604   WLSTL:  LODSB
 03F7 84C0         605           TEST    AL,AL
 03F9 741F         606           JZ      WLSTM
 03FB 3C0D         607           CMP     AL,0DH
 03FD 741B         608           JE      WLSTM
 03FF 3C0A         609           CMP     AL,0AH
 0401 7417         610           JE      WLSTM
 0403 3C09         611           CMP     AL,9
 0405 750F         612           JNE     WLSTN
 0407              613   
 0407              614   ; CONVERT TABS TO SPACES FOR
 0407              615   ; JUSTICE AND GLORY AND POTENTIAL
 0407              616   ; FOR MISCONFIGURED TABS
 0407 89F9         617           MOV     CX,DI
 0409 29E9         618           SUB     CX,BP
 040B 83E107       619           AND     CX,7
 040E F7D9         620           NEG     CX
 0410 83C108       621           ADD     CX,8
 0413 B020         622           MOV     AL,20H
 0415 F3           623           REP
 0416              624   
 0416              625   ; ONLY REP IF THERE'S SPACES
 0416              626   ; TO FILL, OTHERWISE JUST SKIP
 0416              627   ; RIGHT TO THE STOSB
 0416 AA           628   WLSTN:  STOSB
 0417 4B           629           DEC     BX
 0418 75DC         630           JNZ     WLSTL
 041A              631   
 041A              632   ; LINE TERMINATED OR EMPTY
 041A 5E           633   WLSTM:  POP     SI
 041B 5B           634           POP     BX
 041C              635   
 041C              636   ; TERMINATE LINE AND WRITE TO
 041C              637   ; LISTING FILE
 041C 52           638   WLSTB:  PUSH    DX
 041D 53           639           PUSH    BX
 041E 56           640           PUSH    SI
 041F 57           641           PUSH    DI
 0420 E87600       642           CALL    WTITLE
 0423 5F           643           POP     DI
 0424 B80D0A       644           MOV     AX,0A0DH
 0427 AB           645           STOSW
 0428 BA2D24       646           MOV     DX,LSTBUF
 042B E80905       647           CALL    WROTE
 042E 5E           648           POP     SI
 042F 5B           649           POP     BX
 0430 5A           650           POP     DX
R-ASSEMBLER VERSION 1.05C    RA.ASM                       14

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0431 7209         651           JC      WLSTE
 0433 BF2D24       652           MOV     DI,LSTBUF
 0436              653   
 0436              654   ; KEEP WRITING LEFTOVER DATA
 0436              655   ; TO LISTING TO STAY WITHIN THE
 0436              656   ; SANCTIONED HEXDUMP WIDTH
 0436 E80900       657           CALL    WLSTS
 0439 75E1         658           JNZ     WLSTB
 043B F8           659           CLC
 043C 5F           660   WLSTE:  POP     DI
 043D 5E           661           POP     SI
 043E 5B           662           POP     BX
 043F 5A           663           POP     DX
 0440 58           664           POP     AX
 0441 C3           665           RET
 0442              666   
 0442              667   ; --------------------------------
 0442              668   ; WRITE ADDRESS AND PARTIAL
 0442              669   ; HEXDUMP
 0442 B020         670   WLSTS:  MOV     AL,20H
 0444 FC           671           CLD
 0445 AA           672           STOSB
 0446 88F0         673           MOV     AL,DH
 0448 E87907       674           CALL    HALX
 044B 88D0         675           MOV     AL,DL
 044D E87407       676           CALL    HALX
 0450 85DB         677           TEST    BX,BX
 0452 7419         678           JZ      WLSTX
 0454 89D9         679           MOV     CX,BX
 0456              680   
 0456              681   ; THE LISTING HEX FIELD IS A
 0456              682   ; SET WIDTH, AND OUTPUT EXCEEDING
 0456              683   ; THE WIDTH HAS TO BE WRITTEN ON
 0456              684   ; SEPARATE LINES
 0456 83F906       685           CMP     CX,LSTWID
 0459 7603         686           JBE     WLSTG
 045B B90600       687           MOV     CX,LSTWID
 045E 29CB         688   WLSTG:  SUB     BX,CX
 0460 01CA         689           ADD     DX,CX
 0462 B020         690           MOV     AL,20H
 0464 AA           691           STOSB
 0465 AC           692   WLSTP:  LODSB
 0466 E85B07       693           CALL    HALX
 0469 E2FA         694           LOOP    WLSTP
 046B 84C0         695           TEST    AL,AL
 046D C3           696   WLSTX:  RET
 046E              697   
 046E              698   ; --------------------------------
 046E              699   ; WRITE PADDING, LINE NUMBER
 046E 52           700   WLSTI:  PUSH    DX
R-ASSEMBLER VERSION 1.05C    RA.ASM                       15

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 046F 53           701           PUSH    BX
 0470 56           702           PUSH    SI
 0471 B94024       703           MOV     CX,LSTBUF+LSTWID+LSTWID+7
 0474 29F9         704           SUB     CX,DI
 0476 B020         705           MOV     AL,20H
 0478 F3AA         706           REP STOSB
 047A E8EBFE       707           CALL    CALF
 047D 7216         708           JC      WLSTO
 047F 89FD         709           MOV     BP,DI
 0481              710   
 0481              711   ; LINE NUMBER IS SECOND PARAMETER
 0481 8B4402       712           MOV     AX,[SI+2]
 0484 B90A00       713           MOV     CX,10
 0487 E88207       714           CALL    WN
 048A              715   
 048A              716   ; PAD TO MAXIMUM DIGIT COUNT
 048A              717   ; PLUS EXTRA SPACE
 048A 89E9         718           MOV     CX,BP
 048C 29F9         719           SUB     CX,DI
 048E 83C106       720           ADD     CX,6
 0491 B020         721           MOV     AL,20H
 0493 F3AA         722           REP STOSB
 0495 5E           723   WLSTO:  POP     SI
 0496 5B           724           POP     BX
 0497 5A           725           POP     DX
 0498 C3           726           RET
 0499              727   
 0499              728   ; --------------------------------
 0499              729   ; WRITE PAGE TITLE AND/OR
 0499              730   ; INCREMENT LINE NUMBER
 0499 FC           731   WTITLE: CLD
 049A BF2D26       732           MOV     DI,TEMP2
 049D A15D28       733           MOV     AX,[LSTLIN]
 04A0              734   
 04A0              735   ; START OF LISTING?  WRITE PAGE
 04A0              736   ; HEADER.  LSTLIN CAN ONLY BE
 04A0              737   ; ZERO HERE WHEN WTITLE HASN'T
 04A0              738   ; BEEN CALLED HITHERTO
 04A0 85C0         739           TEST    AX,AX
 04A2 7413         740           JZ      WTITL1
 04A4              741   
 04A4              742   ; END OF PAGE?  WRITE PAGE FEED
 04A4              743   ; CHARACTER AND THEN PROCEED TO
 04A4              744   ; WRITE PAGE HEADER
 04A4 3B06901F     745           CMP     AX,[PAGLEN]
 04A8 727F         746           JC      WTITL5
 04AA FF065B28     747           INC     WORD [PAGNUM]
 04AE C7065D280000 748           MOV     WORD [LSTLIN],0
 04B4 B00C         749           MOV     AL,0CH
 04B6 AA           750           STOSB
R-ASSEMBLER VERSION 1.05C    RA.ASM                       16

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 04B7              751   
 04B7              752   ; WRITE HEADER WITH FILE NAME
 04B7              753   ; AND PAGE NUMBER
 04B7 8D4D3A       754   WTITL1: LEA     CX,[DI+3AH]
 04BA BE0521       755           MOV     SI,AMSG
 04BD E8A609       756           CALL    WRM
 04C0 E8A5FE       757           CALL    CALF
 04C3 720B         758           JC      WTITL2
 04C5 83C604       759           ADD     SI,4
 04C8 B82020       760           MOV     AX,2020H
 04CB AB           761           STOSW
 04CC AB           762           STOSW
 04CD E89609       763           CALL    WRM
 04D0              764   
 04D0              765   ; RIGHT JUSTIFY PAGE NUMBER
 04D0 29F9         766   WTITL2: SUB     CX,DI
 04D2 B020         767           MOV     AL,20H
 04D4 F3AA         768           REP STOSB
 04D6 A15B28       769           MOV     AX,[PAGNUM]
 04D9 B90A00       770           MOV     CX,10
 04DC E82D07       771           CALL    WN
 04DF B80D0A       772           MOV     AX,0A0DH
 04E2 AB           773           STOSW
 04E3              774   
 04E3              775   ; WRITE USER DEFINED PAGE TITLE
 04E3 BE2D27       776           MOV     SI,TTLBUF
 04E6 800C00       777           OR      BYTE [SI],0
 04E9 7407         778           JZ      WTITL3
 04EB E87809       779           CALL    WRM
 04EE B80D0A       780           MOV     AX,0A0DH
 04F1 AB           781           STOSW
 04F2 AB           782   WTITL3: STOSW
 04F3              783   
 04F3              784   ; WRITE APPROPRIATE LISTING HEADER
 04F3 BEF720       785           MOV     SI,SYMLIN
 04F6 830E552800   786           OR      WORD [PASS],0
 04FB 7414         787           JZ      WTITL4
 04FD B91300       788           MOV     CX,LSTWID+LSTWID+7
 0500 01F9         789           ADD     CX,DI
 0502 BEDD20       790           MOV     SI,BINLIN
 0505 E85E09       791           CALL    WRM
 0508 29F9         792           SUB     CX,DI
 050A B020         793           MOV     AL,20H
 050C F3AA         794           REP STOSB
 050E BEEA20       795           MOV     SI,SRCLIN
 0511 E85209       796   WTITL4: CALL    WRM
 0514 B80D0A       797           MOV     AX,0A0DH
 0517 AB           798           STOSW
 0518              799   
 0518              800   ; AND DASHES
R-ASSEMBLER VERSION 1.05C    RA.ASM                       17

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0518 B94000       801           MOV     CX,40H
 051B B02D         802           MOV     AL,2DH
 051D F3AA         803           REP STOSB
 051F B80D0A       804           MOV     AX,0A0DH
 0522 AB           805           STOSW
 0523 BA2D26       806           MOV     DX,TEMP2
 0526 E80E04       807           CALL    WROTE
 0529 FF065D28     808   WTITL5: INC     WORD [LSTLIN]
 052D F8           809           CLC
 052E C3           810           RET
 052F              811   
 052F              812   ; --------------------------------
 052F              813   ; READ FROM CURRENT INPUT FILE
 052F E836FE       814   READ:   CALL    CALF
 0532 722C         815           JC      READ1
 0534              816   
 0534              817   ; INCREMENT INPUT LINE NUMBER
 0534 FF4402       818           INC     WORD [SI+2]
 0537 8B1C         819           MOV     BX,[SI]
 0539 F6062D2880   820           TEST    BYTE [FUNC],80H
 053E 7423         821           JZ      READ2
 0540              822   
 0540              823   ; IF DISASSEMBLING, FIRST SEEK
 0540              824   ; TO CURRENT PROGRAM COUNTER;
 0540              825   ; TAKE CARE TO SKIP LOAD ADDRESS
 0540 B80042       826           MOV     AX,4200H
 0543 31C9         827           XOR     CX,CX
 0545 8B163328     828           MOV     DX,[PC]
 0549 2B163528     829           SUB     DX,[VORG]
 054D CD21         830           INT     21H
 054F 7271         831           JC      READ8
 0551              832   
 0551              833   ; MAXIMUM 8086 INSTRUCTION LENGTH
 0551              834   ; IS 8 BYTES
 0551 B43F         835           MOV     AH,3FH
 0553 B90800       836           MOV     CX,8
 0556 BA2D23       837           MOV     DX,BINBUF
 0559 CD21         838           INT     21H
 055B 7265         839           JC      READ8
 055D 85C0         840           TEST    AX,AX
 055F C3           841           RET
 0560              842   
 0560              843   ; SET ZERO FLAG
 0560 29C0         844   READ1:  SUB     AX,AX
 0562 C3           845           RET
 0563              846   
 0563              847   ; READ AN INDISCRIMINATE BLOCK
 0563              848   ; OF TEXT
 0563 B43F         849   READ2:  MOV     AH,3FH
 0565 B90001       850           MOV     CX,100H
R-ASSEMBLER VERSION 1.05C    RA.ASM                       18

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0568 BA2D22       851           MOV     DX,TXTBUF
 056B CD21         852           INT     21H
 056D 7253         853           JC      READ8
 056F 85C0         854           TEST    AX,AX
 0571 74ED         855           JZ      READ1
 0573 89C1         856           MOV     CX,AX
 0575 89C2         857           MOV     DX,AX
 0577 31DB         858           XOR     BX,BX
 0579              859   
 0579              860   ; FIND FIRST LINE BREAK
 0579 BF2D22       861           MOV     DI,TXTBUF
 057C 8A01         862   READ3:  MOV     AL,[BX+DI]
 057E 43           863           INC     BX
 057F B40A         864           MOV     AH,0AH
 0581 3C0D         865           CMP     AL,0DH
 0583 741E         866           JZ      READ6
 0585 B40D         867           MOV     AH,0DH
 0587 3C0A         868           CMP     AL,0AH
 0589 7418         869           JZ      READ6
 058B E2EF         870           LOOP    READ3
 058D              871   
 058D              872   ; NO LINE TERMINATOR FOUND
 058D              873   ; IF THE LINE IS BELOW MAXIMUM
 058D              874   ; BUFFER LENGTH, IT MIGHT BE
 058D              875   ; THE FINAL LINE IN THE FILE
 058D 81FB0001     876           CMP     BX,100H
 0591 730B         877           JNC     READ5
 0593 8821         878           MOV     [BX+DI],AH
 0595 43           879           INC     BX
 0596 891E2F28     880   READ4:  MOV     [TXTLEN],BX
 059A 85DB         881           TEST    BX,BX
 059C F8           882           CLC
 059D C3           883           RET
 059E              884   
 059E              885   ; LINE TOO LONG ERROR
 059E B00E         886   READ5:  MOV     AL,0EH
 05A0 E9A703       887           JMP     SCREAM
 05A3              888   
 05A3              889   ; CHECK FOR SECONDARY LINE
 05A3              890   ; TERMINATOR AND SKIP PAST BOTH
 05A3 E305         891   READ6:  JCXZ    READ7
 05A5 3821         892           CMP     [BX+DI],AH
 05A7 7501         893           JNZ     READ7
 05A9 43           894           INC     BX
 05AA              895   
 05AA              896   ; ZERO-TERMINATE LINE FOR
 05AA              897   ; EXTRA SAFETY
 05AA 30C0         898   READ7:  XOR     AL,AL
 05AC 8801         899           MOV     [BX+DI],AL
 05AE 89D8         900           MOV     AX,BX
R-ASSEMBLER VERSION 1.05C    RA.ASM                       19

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 05B0              901   
 05B0              902   ; IF LINE IS THE EXACT REQUESTED
 05B0              903   ; LENGTH, GO AHEAD AND TERMINATE
 05B0 29D0         904           SUB     AX,DX
 05B2 74E2         905           JZ      READ4
 05B4              906   
 05B4              907   ; OTHERWISE, SEEK BACK TO RIGHT
 05B4              908   ; PAST LINE TERMINATORS
 05B4 99           909           CWD
 05B5 53           910           PUSH    BX
 05B6 B90142       911           MOV     CX,4201H
 05B9 92           912           XCHG    AX,DX
 05BA 91           913           XCHG    AX,CX
 05BB 8B1C         914           MOV     BX,[SI]
 05BD CD21         915           INT     21H
 05BF 5B           916           POP     BX
 05C0 73D4         917           JNC     READ4
 05C2              918   
 05C2              919   ; PREPARE INPUT FILE NAME FOR
 05C2              920   ; I/O COMPLAINT
 05C2 BA0400       921   READ8:  MOV     DX,4
 05C5 01F2         922           ADD     DX,SI
 05C7 B00F         923           MOV     AL,0FH
 05C9 E97E03       924           JMP     SCREAM
 05CC              925   
 05CC              926   ; --------------------------------
 05CC              927   ; WRITE TO BINARY OUTPUT
 05CC F6062D2810   928   WRITE:  TEST    BYTE [FUNC],10H
 05D1 7450         929           JZ      WRITE4
 05D3 F6062D2880   930           TEST    BYTE [FUNC],80H
 05D8 7550         931           JNZ     WRITE6
 05DA A13128       932           MOV     AX,[BINLEN]
 05DD 8B163728     933           MOV     DX,[USIZE]
 05E1              934   
 05E1              935   ; IF THERE IS NO BINARY BUFFER
 05E1              936   ; TO WRITE, ABORT
 05E1 85C0         937           TEST    AX,AX
 05E3 7443         938           JZ      WRITE5
 05E5 85D2         939           TEST    DX,DX
 05E7 7429         940           JZ      WRITE3
 05E9              941   
 05E9              942   ; IF THERE IS UNDEFINED DATA
 05E9              943   ; PRESENT, WRITE IT OUT AS ZEROES
 05E9 BF2D25       944           MOV     DI,TEMP
 05EC B90001       945           MOV     CX,100H
 05EF 30C0         946           XOR     AL,AL
 05F1 FC           947           CLD
 05F2 F3AA         948           REP STOSB
 05F4 52           949   WRITE1: PUSH    DX
 05F5 B90001       950           MOV     CX,100H
R-ASSEMBLER VERSION 1.05C    RA.ASM                       20

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 05F8 39D1         951           CMP     CX,DX
 05FA 7202         952           JB      WRITE2
 05FC 89D1         953           MOV     CX,DX
 05FE 51           954   WRITE2: PUSH    CX
 05FF B440         955           MOV     AH,40H
 0601 BA2D25       956           MOV     DX,TEMP
 0604 8B1E4D28     957           MOV     BX,[OUTHDL]
 0608 CD21         958           INT     21H
 060A 722F         959           JC      WRITE7
 060C 59           960           POP     CX
 060D 5A           961           POP     DX
 060E 29CA         962           SUB     DX,CX
 0610 77E2         963           JA      WRITE1
 0612              964   
 0612              965   ; WRITE BINARY BUFFER TO OUTPUT
 0612 B440         966   WRITE3: MOV     AH,40H
 0614 8B0E3128     967           MOV     CX,[BINLEN]
 0618 BA2D23       968           MOV     DX,BINBUF
 061B 8B1E4D28     969           MOV     BX,[OUTHDL]
 061F CD21         970           INT     21H
 0621 7218         971           JC      WRITE7
 0623              972   
 0623              973   ; RESET UNDEFINED DATA COUNTER
 0623 31C0         974   WRITE4: XOR     AX,AX
 0625 A33728       975           MOV     [USIZE],AX
 0628 F8           976   WRITE5: CLC
 0629 C3           977           RET
 062A              978   
 062A              979   ; IF DISASSEMBLER IS INVOKED
 062A              980   ; WRITE GENERATED TEXT BUFFER
 062A              981   ; INSTEAD
 062A B440         982   WRITE6: MOV     AH,40H
 062C 8B0E2F28     983           MOV     CX,[TXTLEN]
 0630 BA2D22       984           MOV     DX,TXTBUF
 0633 8B1E4D28     985           MOV     BX,[OUTHDL]
 0637 CD21         986           INT     21H
 0639 73E8         987           JNC     WRITE4
 063B BA8D28       988   WRITE7: MOV     DX,OUTFN
 063E B00F         989           MOV     AL,0FH
 0640 E90703       990           JMP     SCREAM
 0643              991   
 0643              992   ; --------------------------------
 0643              993   ; OPEN ALL REQUISITE FILES
 0643 BE6D28       994   OPEN:   MOV     SI,INFN
 0646 E8DDFC       995           CALL    RFN1
 0649 E834FD       996           CALL    INCF
 064C 7242         997           JC      OPEN1
 064E BF2D25       998           MOV     DI,TEMP
 0651 BED220       999           MOV     SI,INM
 0654 E80F08       1000          CALL    WRM
R-ASSEMBLER VERSION 1.05C    RA.ASM                       21

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0657 BE6D28       1001          MOV     SI,INFN
 065A E80908       1002          CALL    WRM
 065D 57           1003          PUSH    DI
 065E              1004  
 065E              1005  ; FOR EACH OF THE ADDITIONAL
 065E              1006  ; FILES, TEST FOR THE REQUEST
 065E              1007  ; FLAG AND CONFIRM OR REFUTE IT
 065E              1008  ; (IF THERE IS A FILE ERROR)
 065E              1009  ; SO IT CAN BE USED FOR
 065E              1010  ; PROCESSING AND TO KEEP TALLY
 065E              1011  ; OF WHAT'S OPEN
 065E B91010       1012          MOV     CX,1010H
 0661 BA8D28       1013          MOV     DX,OUTFN
 0664 BF4D28       1014          MOV     DI,OUTHDL
 0667 E85D00       1015          CALL    OPENF
 066A 7224         1016          JC      OPEN1
 066C B92020       1017          MOV     CX,2020H
 066F BAAD28       1018          MOV     DX,LSTFN
 0672 BF4F28       1019          MOV     DI,LSTHDL
 0675 E84F00       1020          CALL    OPENF
 0678 7216         1021          JC      OPEN1
 067A F7062D280404 1022          TEST    WORD [FUNC],404H
 0680 7513         1023          JNZ     OPEN2
 0682 B94040       1024          MOV     CX,4040H
 0685 BACD28       1025          MOV     DX,SYMFN
 0688 BF5128       1026          MOV     DI,SYMHDL
 068B E83900       1027          CALL    OPENF
 068E 7331         1028          JNC     OPEN3
 0690 B00B         1029  OPEN1:  MOV     AL,0BH
 0692 E9B502       1030          JMP     SCREAM
 0695              1031  
 0695              1032  ; IF DISASSEMBLER IS ENGAGED,
 0695              1033  ; READ SYMBOL FILE WHOLESALE INTO
 0695              1034  ; SYMBOL BUFFER
 0695 5F           1035  OPEN2:  POP     DI
 0696              1036  
 0696              1037  ; WRITE SYMBOL FILE NAME OUT
 0696              1038  ; THE BINARY ALONG WITH INPUT
 0696              1039  ; FILE
 0696 B020         1040          MOV     AL,20H  
 0698 AA           1041          STOSB
 0699 BECD28       1042          MOV     SI,SYMFN
 069C E8C707       1043          CALL    WRM
 069F 57           1044          PUSH    DI
 06A0 B8003D       1045          MOV     AX,3D00H
 06A3 BACD28       1046          MOV     DX,SYMFN
 06A6 CD21         1047          INT     21H
 06A8 72E6         1048          JC      OPEN1
 06AA 89C3         1049          MOV     BX,AX
 06AC B43F         1050          MOV     AH,3FH
R-ASSEMBLER VERSION 1.05C    RA.ASM                       22

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 06AE              1051  
 06AE              1052  ; READ EVERYTHING THE SEGMENT
 06AE              1053  ; CAN HOLD
 06AE 89E1         1054          MOV     CX,SP
 06B0 BA2D2A       1055          MOV     DX,MAPBUF
 06B3 29D1         1056          SUB     CX,DX
 06B5 CD21         1057          INT     21H
 06B7 B43E         1058          MOV     AH,3EH
 06B9 CD21         1059          INT     21H
 06BB A1302B       1060          MOV     AX,[SYMBS+3]
 06BE A33528       1061          MOV     [VORG],AX
 06C1 5F           1062  OPEN3:  POP     DI
 06C2 E8DB02       1063          CALL    PRUNT
 06C5              1064  
 06C5              1065  ; TERMINATE WITHOUT ERROR FLAG
 06C5 F8           1066          CLC
 06C6 C3           1067          RET
 06C7              1068  
 06C7              1069  ; --------------------------------
 06C7              1070  ; SAVE A FEW BYTES ON A
 06C7              1071  ; REPETITIVE PROCESS OF TESTING,
 06C7              1072  ; OPENING FILES, AND
 06C7              1073  ; SETTING/RESETTING FLAGS
 06C7 850E2D28     1074  OPENF:  TEST    [FUNC],CX
 06CB 740B         1075          JZ      OPENF1
 06CD 51           1076          PUSH    CX
 06CE B43C         1077          MOV     AH,3CH
 06D0 31C9         1078          XOR     CX,CX
 06D2 CD21         1079          INT     21H
 06D4 59           1080          POP     CX
 06D5 7203         1081          JC      OPENF2
 06D7 AB           1082          STOSW
 06D8 F8           1083  OPENF1: CLC
 06D9 C3           1084          RET
 06DA              1085  
 06DA              1086  ; TURN OFF REQUEST FLAG SINCE
 06DA              1087  ; THE FILE WAS NOT OPENED
 06DA F7D1         1088  OPENF2: NOT     CX
 06DC 210E2D28     1089          AND     [FUNC],CX
 06E0 F9           1090          STC
 06E1 C3           1091          RET
 06E2              1092  
 06E2              1093  ; --------------------------------
 06E2              1094  ; CLOSE ALL OPEN FILES AND
 06E2              1095  ; ANNOUNCE WHICH ONES WERE
 06E2              1096  ; PRODUCED
 06E2 E883FC       1097  CLOSE:  CALL    CALF
 06E5 B43E         1098          MOV     AH,3EH
 06E7 8B1C         1099          MOV     BX,[SI]
 06E9 CD21         1100          INT     21H
R-ASSEMBLER VERSION 1.05C    RA.ASM                       23

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 06EB BF2D25       1101          MOV     DI,TEMP
 06EE BED720       1102          MOV     SI,OUTM
 06F1 E87207       1103          CALL    WRM
 06F4              1104  
 06F4              1105  ; FLAG BY FLAG
 06F4 B91010       1106          MOV     CX,1010H
 06F7 BE8D28       1107          MOV     SI,OUTFN
 06FA 8B1E4D28     1108          MOV     BX,[OUTHDL]
 06FE E82400       1109          CALL    CLOSF
 0701 B92020       1110          MOV     CX,2020H
 0704 BEAD28       1111          MOV     SI,LSTFN
 0707 8B1E4F28     1112          MOV     BX,[LSTHDL]
 070B E81700       1113          CALL    CLOSF
 070E B94040       1114          MOV     CX,4040H
 0711 BECD28       1115          MOV     SI,SYMFN
 0714 8B1E5128     1116          MOV     BX,[SYMHDL]
 0718 E80A00       1117          CALL    CLOSF
 071B              1118  
 071B              1119  ; DO NOT ANNOUNCE OUTPUT FILES
 071B              1120  ; IF THERE ARE NONE
 071B 830E592800   1121          OR      WORD [ERRORS],0
 0720 7513         1122          JNZ     CLOSF1
 0722 E97B02       1123          JMP     PRUNT
 0725 850E2D28     1124  CLOSF:  TEST    [FUNC],CX
 0729 740A         1125          JZ      CLOSF1
 072B E83807       1126          CALL    WRM
 072E B020         1127          MOV     AL,20H
 0730 AA           1128          STOSB
 0731 B43E         1129          MOV     AH,3EH
 0733 CD21         1130          INT     21H
 0735 C3           1131  CLOSF1: RET
 0736              1132  
 0736              1133  ; --------------------------------
 0736              1134  ; WRITE SYMBOL DUMP AT THE END
 0736              1135  ; OF LISTING
 0736 FC           1136  SYMDMP: CLD
 0737 BE2D2B       1137          MOV     SI,SYMBS
 073A AD           1138          LODSW
 073B 85C0         1139          TEST    AX,AX
 073D 7501         1140          JNZ     SYMDM1
 073F C3           1141  SYMDM0: RET
 0740 89C1         1142  SYMDM1: MOV     CX,AX
 0742 31C0         1143          XOR     AX,AX
 0744 A35528       1144          MOV     [PASS],AX
 0747 A12D28       1145          MOV     AX,[FUNC]
 074A              1146  
 074A              1147  ; IF NEITHER SYMBOL FILE NOR
 074A              1148  ; LISTING IS REQUESTED, ABORT
 074A A96060       1149          TEST    AX,6060H
 074D 74F0         1150          JZ      SYMDM0
R-ASSEMBLER VERSION 1.05C    RA.ASM                       24

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 074F              1151  
 074F              1152  ; IF SYMBOL FILE ISN'T REQUESTED
 074F              1153  ; SKIP TO SYMBOL LISTING
 074F A92020       1154          TEST    AX,2020H
 0752 9C           1155          PUSHF
 0753 A94040       1156          TEST    AX,4040H
 0756 742B         1157          JZ      SYMSRT
 0758              1158  
 0758              1159  ; WRITE DATA MAP BUFFER
 0758 56           1160          PUSH    SI
 0759 51           1161          PUSH    CX
 075A B440         1162          MOV     AH,40H
 075C B90001       1163          MOV     CX,100H
 075F BA2D2A       1164          MOV     DX,MAPBUF
 0762 8B1E5128     1165          MOV     BX,[SYMHDL]
 0766 CD21         1166          INT     21H
 0768 59           1167          POP     CX
 0769 51           1168          PUSH    CX
 076A              1169  
 076A              1170  ; FIND SYMBOL TABLE SIZE
 076A AC           1171  SYMDM2: LODSB
 076B 3C21         1172          CMP     AL,21H
 076D 73FB         1173          JNB     SYMDM2
 076F AD           1174          LODSW
 0770 E2F8         1175          LOOP    SYMDM2
 0772              1176  
 0772              1177  ; WRITE TABLE WHOLESALE
 0772 B440         1178          MOV     AH,40H
 0774 BA2D2B       1179          MOV     DX,SYMBS
 0777 89F1         1180          MOV     CX,SI
 0779 29D1         1181          SUB     CX,DX
 077B 8B1E5128     1182          MOV     BX,[SYMHDL]
 077F CD21         1183          INT     21H
 0781 59           1184          POP     CX
 0782 5E           1185          POP     SI
 0783 9D           1186  SYMSRT: POPF
 0784 74B9         1187          JZ      SYMDM0
 0786 FC           1188          CLD
 0787 83F902       1189          CMP     CX,2
 078A              1190  
 078A              1191  ; ONE SYMBOL?  YEAH, SORT THAT!
 078A              1192  ; ...NOT!!
 078A 725A         1193          JB      SYMLST
 078C 51           1194          PUSH    CX
 078D 89CA         1195  SYMSR1: MOV     DX,CX
 078F 51           1196          PUSH    CX
 0790 56           1197          PUSH    SI
 0791              1198  
 0791              1199  ; PERFORM DUMB BUBBLE SORT ON
 0791              1200  ; SYMBOL TABLE
R-ASSEMBLER VERSION 1.05C    RA.ASM                       25

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0791 31DB         1201  SYMSR2: XOR     BX,BX
 0793              1202  
 0793              1203  ; GET LENGTH OF CURRENT SYMBOL
 0793 8A00         1204  SYMSR3: MOV     AL,[BX+SI]
 0795 43           1205          INC     BX
 0796 3C21         1206          CMP     AL,21H
 0798 73F9         1207          JNB     SYMSR3
 079A 43           1208          INC     BX
 079B 43           1209          INC     BX
 079C 8D38         1210          LEA     DI,[BX+SI]
 079E 31ED         1211          XOR     BP,BP
 07A0              1212  
 07A0              1213  ; GET LENGTH OF SYMBOL RIGHT AFTER
 07A0 8A03         1214  SYMSR4: MOV     AL,[BP+DI]
 07A2 45           1215          INC     BP
 07A3 3C21         1216          CMP     AL,21H
 07A5 73F9         1217          JNB     SYMSR4
 07A7 45           1218          INC     BP
 07A8 45           1219          INC     BP
 07A9              1220  
 07A9              1221  ; GET LONGEST LENGTH
 07A9              1222  ; LOGIC BEING THAT IF ONE SYMBOL
 07A9              1223  ; IS SHORTER THAN THE OTHER BUT
 07A9              1224  ; THEY ARE IDENTICAL FOR AT LEAST
 07A9              1225  ; THAT LENGTH, THE SHORTEST WILL
 07A9              1226  ; STILL HAVE A TERMINATOR THAT
 07A9              1227  ; HAS A MUCH LOWER ASCII VALUE
 07A9 89D9         1228          MOV     CX,BX
 07AB 39E9         1229          CMP     CX,BP
 07AD 7302         1230          JNB     SYMSR5
 07AF 89E9         1231          MOV     CX,BP
 07B1              1232  
 07B1              1233  ; BRUTE ASCII COMPARE
 07B1 56           1234  SYMSR5: PUSH    SI
 07B2 57           1235          PUSH    DI
 07B3 F3A6         1236          REPE CMPSB
 07B5 5F           1237          POP     DI
 07B6 5E           1238          POP     SI
 07B7 721C         1239          JB      SYMSR6
 07B9              1240  
 07B9              1241  ; SAVE LEFT SYMBOL TO TEMP BUFFER
 07B9 56           1242          PUSH    SI
 07BA 57           1243          PUSH    DI
 07BB BF2D25       1244          MOV     DI,TEMP
 07BE 89D9         1245          MOV     CX,BX
 07C0 F3A4         1246          REP MOVSB
 07C2 5F           1247          POP     DI
 07C3 5E           1248          POP     SI
 07C4              1249  
 07C4              1250  ; MOVE RIGHT SYMBOL TO THE LEFT
R-ASSEMBLER VERSION 1.05C    RA.ASM                       26

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 07C4 56           1251          PUSH    SI
 07C5 87FE         1252          XCHG    SI,DI
 07C7 89E9         1253          MOV     CX,BP
 07C9 F3A4         1254          REP MOVSB
 07CB              1255  
 07CB              1256  ; MOVE BUFFERED SYMBOL
 07CB              1257  ; TO THE RIGHT
 07CB BE2D25       1258          MOV     SI,TEMP
 07CE 89D9         1259          MOV     CX,BX
 07D0 F3A4         1260          REP MOVSB
 07D2 5E           1261          POP     SI
 07D3 89EB         1262          MOV     BX,BP
 07D5 01DE         1263  SYMSR6: ADD     SI,BX
 07D7              1264  
 07D7              1265  ; TWO SYMBOLS LEFT? THEY ARE
 07D7              1266  ; ALREADY PROCESSED, END HERE
 07D7 4A           1267          DEC     DX
 07D8 83FA02       1268          CMP     DX,2
 07DB 73B4         1269          JNC     SYMSR2
 07DD 5E           1270          POP     SI
 07DE 59           1271          POP     CX
 07DF              1272  
 07DF              1273  ; SCAN FEWER EACH TIME, END WHEN
 07DF              1274  ; ONLY TWO ARE LEFT, SINCE THEY
 07DF              1275  ; ARE ALREADY PROCESSED
 07DF 49           1276          DEC     CX
 07E0 83F902       1277          CMP     CX,2
 07E3 73A8         1278          JNC     SYMSR1
 07E5 59           1279          POP     CX
 07E6              1280  
 07E6              1281  ; WRITE SYMBOL TABLE TO LISTING
 07E6 31D2         1282  SYMLST: XOR     DX,DX
 07E8              1283  
 07E8              1284  ; FORCE A NEW PAGE
 07E8 A1901F       1285          MOV     AX,[PAGLEN]
 07EB A35D28       1286          MOV     [LSTLIN],AX
 07EE 51           1287          PUSH    CX
 07EF 56           1288          PUSH    SI
 07F0              1289  
 07F0              1290  ; GET LENGTH OF LONGEST SYMBOL
 07F0 31DB         1291  SYMLS1: XOR     BX,BX
 07F2 AC           1292  SYMLS2: LODSB
 07F3 43           1293          INC     BX
 07F4 3C21         1294          CMP     AL,21H
 07F6 73FA         1295          JNB     SYMLS2
 07F8 AD           1296          LODSW
 07F9 39DA         1297          CMP     DX,BX
 07FB 7302         1298          JNC     SYMLS3
 07FD 89DA         1299          MOV     DX,BX
 07FF E2EF         1300  SYMLS3: LOOP    SYMLS1
R-ASSEMBLER VERSION 1.05C    RA.ASM                       27

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0801 5E           1301          POP     SI
 0802 59           1302          POP     CX
 0803              1303  
 0803              1304  ; PREPARE A LINE OF SYMBOLS
 0803 BF2D24       1305          MOV     DI,LSTBUF
 0806 51           1306  SYMLS4: PUSH    CX
 0807 89F9         1307          MOV     CX,DI
 0809 FC           1308          CLD
 080A AC           1309  SYMLS5: LODSB
 080B AA           1310          STOSB
 080C 3C21         1311          CMP     AL,21H
 080E 73FA         1312          JNB     SYMLS5
 0810 4F           1313          DEC     DI
 0811 29F9         1314          SUB     CX,DI
 0813              1315  
 0813              1316  ; PAD WITH SPACES TO MAXIMUM
 0813              1317  ; DETECTED SYMBOL LENGTH
 0813 01D1         1318          ADD     CX,DX
 0815 B020         1319          MOV     AL,20H
 0817 F3AA         1320          REP STOSB
 0819 AD           1321          LODSW
 081A 50           1322          PUSH    AX
 081B              1323  
 081B              1324  ; WRITE VALUE
 081B 88E0         1325          MOV     AL,AH
 081D E8A403       1326          CALL    HALX
 0820 58           1327          POP     AX
 0821 E8A003       1328          CALL    HALX
 0824              1329  
 0824              1330  ; PREPARE FOR NEXT SYMBOL ON LINE
 0824 B82020       1331          MOV     AX,2020H
 0827 AB           1332          STOSW
 0828 89F9         1333          MOV     CX,DI
 082A 81E92D24     1334          SUB     CX,LSTBUF
 082E 01D1         1335          ADD     CX,DX
 0830              1336  
 0830              1337  ; MAKE SURE LINE DOES NOT EXCEED
 0830              1338  ; MAXIMUM LENGTH
 0830 83F93F       1339          CMP     CX,3FH
 0833 59           1340          POP     CX
 0834 7206         1341          JB      SYMLS6
 0836 E80600       1342          CALL    SYMLS7
 0839 BF2D24       1343          MOV     DI,LSTBUF
 083C 49           1344  SYMLS6: DEC     CX
 083D 75C7         1345          JNZ     SYMLS4
 083F              1346  
 083F              1347  ; WRITE LINE TO LISTING
 083F 81FF2D24     1348  SYMLS7: CMP     DI,LSTBUF
 0843 7617         1349          JBE     SYMLS8
 0845 4F           1350          DEC     DI
R-ASSEMBLER VERSION 1.05C    RA.ASM                       28

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0846 4F           1351          DEC     DI
 0847 B80D0A       1352          MOV     AX,0A0DH
 084A AB           1353          STOSW
 084B 51           1354          PUSH    CX
 084C 52           1355          PUSH    DX
 084D 56           1356          PUSH    SI
 084E              1357  
 084E              1358  ; KEEP UP LINE AND PAGE HANDLING
 084E 57           1359          PUSH    DI
 084F E847FC       1360          CALL    WTITLE
 0852 5F           1361          POP     DI
 0853 BA2D24       1362          MOV     DX,LSTBUF
 0856 E8DE00       1363          CALL    WROTE
 0859 5E           1364          POP     SI
 085A 5A           1365          POP     DX
 085B 59           1366          POP     CX
 085C C3           1367  SYMLS8: RET
 085D              1368  
 085D              1369  ; --------------------------------
 085D              1370  ; DUMP ALL EQUATES FROM SYMBOL
 085D              1371  ; TABLE ONE BY ONE
 085D A02D28       1372  EQDUMP: MOV     AL,[FUNC]
 0860 84C0         1373          TEST    AL,AL
 0862 79F8         1374          JNS     SYMLS8
 0864              1375  
 0864              1376  ; NO REASON TO TRY ANYTHING IF
 0864              1377  ; NO SYMBOL TABLE WAS LOADED
 0864 A802         1378          TEST    AL,2
 0866 74F4         1379          JZ      SYMLS8
 0868 FC           1380          CLD
 0869 BE2D2B       1381          MOV     SI,SYMBS
 086C AD           1382          LODSW
 086D 89C1         1383          MOV     CX,AX
 086F E330         1384          JCXZ    EQDUM3
 0871 F9           1385  EQDUM0: STC
 0872 19DB         1386          SBB     BX,BX
 0874 43           1387  EQDUM1: INC     BX
 0875 8A00         1388          MOV     AL,[BX+SI]
 0877 3C21         1389          CMP     AL,21H
 0879 73F9         1390          JNB     EQDUM1
 087B              1391  
 087B              1392  ; CHECK FOR EQUATE
 087B A802         1393          TEST    AL,2
 087D 741B         1394          JZ      EQDUM2
 087F BF2D22       1395          MOV     DI,TXTBUF
 0882 51           1396          PUSH    CX
 0883 89D9         1397          MOV     CX,BX
 0885 FC           1398          CLD
 0886 F3A4         1399          REP MOVSB
 0888 46           1400          INC     SI
R-ASSEMBLER VERSION 1.05C    RA.ASM                       29

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0889 AD           1401          LODSW
 088A B107         1402          MOV     CL,7
 088C              1403  
 088C              1404  ; WRITE VALUE, TERMINATE LINE,
 088C              1405  ; AND WRITE TO OUTPUT(S)
 088C E83600       1406          CALL    LINSTA
 088F E8AC0E       1407          CALL    WHAX0
 0892 E81A00       1408          CALL    LINEND
 0895 59           1409          POP     CX
 0896 E2D9         1410          LOOP    EQDUM0
 0898 EB07         1411          JMP     SHORT EQDUM3
 089A 01DE         1412  EQDUM2: ADD     SI,BX
 089C 83C603       1413          ADD     SI,3
 089F E2D0         1414          LOOP    EQDUM0
 08A1              1415  
 08A1              1416  ; WRITE ORG DIRECTIVE
 08A1 BF2D22       1417  EQDUM3: MOV     DI,TXTBUF
 08A4 B110         1418          MOV     CL,16
 08A6 A13528       1419          MOV     AX,[VORG]
 08A9 E81900       1420          CALL    LINSTA
 08AC E88F0E       1421          CALL    WHAX0
 08AF              1422  
 08AF              1423  ; REUSABLE LISTING FUNCTION
 08AF B80D0A       1424  LINEND: MOV     AX,0A0DH
 08B2 FC           1425          CLD
 08B3 AB           1426          STOSW
 08B4 89F8         1427          MOV     AX,DI
 08B6 2D2D22       1428          SUB     AX,TXTBUF
 08B9 A32F28       1429          MOV     [TXTLEN],AX
 08BC 56           1430          PUSH    SI
 08BD E805FB       1431          CALL    WLST
 08C0 E809FD       1432          CALL    WRITE
 08C3 5E           1433          POP     SI
 08C4 C3           1434          RET
 08C5              1435  
 08C5              1436  ; REUSABLE LINE START FUNCTION
 08C5 50           1437  LINSTA: PUSH    AX
 08C6 56           1438          PUSH    SI
 08C7 BEF81E       1439          MOV     SI,DIRTBL
 08CA B009         1440          MOV     AL,9
 08CC FC           1441          CLD
 08CD AA           1442          STOSB
 08CE E86C0D       1443          CALL    WMN     
 08D1 B009         1444          MOV     AL,9
 08D3 AA           1445          STOSB
 08D4 5E           1446          POP     SI
 08D5 58           1447          POP     AX
 08D6 F8           1448          CLC
 08D7 C3           1449          RET
 08D8              1450  
R-ASSEMBLER VERSION 1.05C    RA.ASM                       30

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 08D8              1451  ; --------------------------------
 08D8              1452  ; WRITE ALL TRAILING UNDEFINED
 08D8              1453  ; NAMED DATA AREAS TO LISTING
 08D8 A02D28       1454  UDDUMP: MOV     AL,[FUNC]
 08DB 84C0         1455          TEST    AL,AL
 08DD 7957         1456          JNS     UDDUM3
 08DF              1457  
 08DF              1458  ; NO REASON TO TRY ANYTHING IF
 08DF              1459  ; NO SYMBOL TABLE WAS LOADED
 08DF A802         1460          TEST    AL,2
 08E1 7453         1461          JZ      UDDUM3
 08E3 FC           1462          CLD
 08E4 BE322B       1463          MOV     SI,SYMBS+5
 08E7 8B0E2D2B     1464          MOV     CX,[SYMBS]
 08EB 83F902       1465          CMP     CX,2
 08EE 7246         1466          JB      UDDUM3
 08F0 49           1467          DEC     CX
 08F1 C70631280000 1468          MOV     WORD [BINLEN],0
 08F7 F9           1469  UDDUM0: STC
 08F8 19DB         1470          SBB     BX,BX
 08FA 43           1471  UDDUM1: INC     BX
 08FB 8A00         1472          MOV     AL,[BX+SI]
 08FD 3C21         1473          CMP     AL,21H
 08FF 73F9         1474          JNB     UDDUM1
 0901              1475  
 0901              1476  ; CHECK FOR EQUATE
 0901 A802         1477          TEST    AL,2
 0903 752A         1478          JNZ     UDDUM2
 0905              1479  
 0905              1480  ; CHECK IF PAST FINAL PC
 0905 8B4001       1481          MOV     AX,[BX+SI+1]
 0908 3B063328     1482          CMP     AX,[PC]
 090C 7221         1483          JB      UDDUM2
 090E 51           1484          PUSH    CX
 090F BF2D22       1485          MOV     DI,TXTBUF
 0912 89D9         1486          MOV     CX,BX
 0914 FC           1487          CLD
 0915 F3A4         1488          REP MOVSB
 0917 B03A         1489          MOV     AL,3AH
 0919 AA           1490          STOSB
 091A 46           1491          INC     SI
 091B AD           1492          LODSW
 091C A35728       1493          MOV     [OLDPC],AX
 091F B110         1494          MOV     CL,16
 0921 E8A1FF       1495          CALL    LINSTA
 0924 E8170E       1496          CALL    WHAX0
 0927 E885FF       1497          CALL    LINEND
 092A 59           1498          POP     CX
 092B E2CA         1499          LOOP    UDDUM0
 092D EB07         1500          JMP     SHORT UDDUM3
R-ASSEMBLER VERSION 1.05C    RA.ASM                       31

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 092F 01DE         1501  UDDUM2: ADD     SI,BX
 0931 83C603       1502          ADD     SI,3
 0934 E2C1         1503          LOOP    UDDUM0
 0936 C3           1504  UDDUM3: RET
 0937              1505  
 0937              1506  ; --------------------------------
 0937              1507  ; ANOTHER CHEAP WAY TO SAVE BYTES
 0937 89F9         1508  WROTE:  MOV     CX,DI
 0939 29D1         1509          SUB     CX,DX
 093B B440         1510          MOV     AH,40H
 093D 8B1E4F28     1511          MOV     BX,[LSTHDL]
 0941 CD21         1512          INT     21H
 0943 73F1         1513          JNC     UDDUM3
 0945              1514  
 0945              1515  ; FROM HERE, A FALL-THROUGH
 0945 BAAD28       1516  WROTE1: MOV     DX,LSTFN
 0948 B00F         1517          MOV     AL,0FH
 094A              1518  
 094A              1519  ; --------------------------------
 094A              1520  ; TURN AN ERROR CODE INTO A
 094A              1521  ; VISIBLE COMPLAINT ON THE
 094A              1522  ; TERMINAL INTERFACE
 094A FC           1523  SCREAM: CLD
 094B 98           1524          CBW
 094C BF2D25       1525          MOV     DI,TEMP
 094F 89C1         1526          MOV     CX,AX
 0951              1527  
 0951              1528  ; ERROR CODE $0F IS A FILE ERROR
 0951              1529  ; INVOLVING THE PROGRAM INTERFACE
 0951 3C0F         1530          CMP     AL,0FH
 0953 7427         1531          JZ      SCRUM
 0955              1532  
 0955              1533  ; OTHERWISE THE ERROR IS WITHIN
 0955              1534  ; THE CURRENT INPUT FILE
 0955 E810FA       1535          CALL    CALF
 0958 7218         1536          JC      SCROOM
 095A AD           1537          LODSW
 095B AD           1538          LODSW
 095C 50           1539          PUSH    AX
 095D              1540  
 095D              1541  ; WRITE OUT FILE NAME
 095D E80605       1542          CALL    WRM
 0960 B028         1543          MOV     AL,28H
 0962 AA           1544          STOSB
 0963 58           1545          POP     AX
 0964 51           1546          PUSH    CX
 0965 52           1547          PUSH    DX
 0966              1548  
 0966              1549  ; WRITE OUT LINE NUMBER
 0966 B90A00       1550          MOV     CX,10
R-ASSEMBLER VERSION 1.05C    RA.ASM                       32

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0969 E8A002       1551          CALL    WN
 096C 5A           1552          POP     DX
 096D 59           1553          POP     CX
 096E B82920       1554          MOV     AX,2029H
 0971 AB           1555          STOSW
 0972              1556  
 0972              1557  ; CHECK FOR ERROR CODES THAT
 0972              1558  ; INVOLVE SPECIAL HANDLING
 0972 80F905       1559  SCROOM: CMP     CL,5
 0975 740C         1560          JZ      SCROYM
 0977 80F90B       1561          CMP     CL,0BH
 097A 7511         1562          JNZ     SCROME
 097C              1563  
 097C              1564  ; WRITE NAME OF REQUESTED INCLUDE
 097C 89D6         1565  SCRUM:  MOV     SI,DX
 097E E8E504       1566          CALL    WRM
 0981 EB0A         1567          JMP     SHORT SCROME
 0983              1568  
 0983              1569  ; WRITE BYTE COUNT FOR MISJUMP
 0983 51           1570  SCROYM: PUSH    CX
 0984 89D0         1571          MOV     AX,DX
 0986 B90A00       1572          MOV     CX,10
 0989 E88002       1573          CALL    WN
 098C 59           1574          POP     CX
 098D              1575  
 098D              1576  ; GET THE PERTINENT ERROR MESSAGE
 098D              1577  ; BY BRUTE FORCE SCANNING THROUGH
 098D              1578  ; THEM ALL
 098D BE9A1F       1579  SCROME: MOV     SI,EM0
 0990 E307         1580          JCXZ    SCRAM
 0992 AC           1581  SCREM:  LODSB
 0993 84C0         1582          TEST    AL,AL
 0995 75FB         1583          JNZ     SCREM
 0997 E2F9         1584          LOOP    SCREM
 0999              1585  
 0999              1586  ; WRITE ERROR MESSAGE AND
 0999              1587  ; FALL THROUGH TO PRUNT
 0999 E8CA04       1588  SCRAM:  CALL    WRM
 099C FF065928     1589          INC     WORD [ERRORS]
 09A0              1590  
 09A0              1591  ; --------------------------------
 09A0              1592  ; ECHO LINE CURRENTLY BEING
 09A0              1593  ; WRITTEN TO TERMINAL
 09A0 BA2D25       1594  PRUNT:  MOV     DX,TEMP
 09A3 B80D0A       1595          MOV     AX,0A0DH
 09A6 AB           1596          STOSW
 09A7 89F9         1597          MOV     CX,DI
 09A9 29D1         1598          SUB     CX,DX
 09AB 51           1599          PUSH    CX
 09AC 52           1600          PUSH    DX
R-ASSEMBLER VERSION 1.05C    RA.ASM                       33

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 09AD B440         1601          MOV     AH,40H
 09AF BB0100       1602          MOV     BX,1
 09B2 CD21         1603          INT     21H
 09B4 5A           1604          POP     DX
 09B5 59           1605          POP     CX
 09B6 F9           1606          STC
 09B7 C3           1607          RET
 09B8              1608  
 09B8              1609  ; --------------------------------
 09B8              1610  ; INCLUDE DIRECTIVE REQUESTED
 09B8 30C0         1611  P2:     XOR     AL,AL
 09BA 8800         1612          MOV     [BX+SI],AL
 09BC E8C1F9       1613          CALL    INCF
 09BF B00B         1614  P2F:    MOV     AL,0BH
 09C1 C3           1615          RET
 09C2              1616  
 09C2              1617  ; --------------------------------
 09C2              1618  ; INCBIN DIRECTIVE REQUESTED
 09C2 B8003D       1619  P3:     MOV     AX,3D00H
 09C5 8800         1620          MOV     [BX+SI],AL
 09C7 89F2         1621          MOV     DX,SI
 09C9 CD21         1622          INT     21H
 09CB 72F2         1623          JC      P2F
 09CD 89C3         1624          MOV     BX,AX
 09CF B43F         1625  P3L:    MOV     AH,3FH
 09D1 BA2D25       1626          MOV     DX,TEMP
 09D4 B90001       1627          MOV     CX,100H
 09D7 CD21         1628          INT     21H
 09D9 89F2         1629          MOV     DX,SI
 09DB 72E2         1630          JC      P2F
 09DD 01063328     1631          ADD     [PC],AX
 09E1 89C1         1632          MOV     CX,AX
 09E3 E31B         1633          JCXZ    P3E
 09E5 F6062D2810   1634          TEST    BYTE [FUNC],10H
 09EA 7410         1635          JZ      P3S
 09EC 50           1636          PUSH    AX
 09ED 53           1637          PUSH    BX
 09EE B440         1638          MOV     AH,40H
 09F0 8B162D25     1639          MOV     DX,[TEMP]
 09F4 8B1E4D28     1640          MOV     BX,[OUTHDL]
 09F8 CD21         1641          INT     21H
 09FA 5B           1642          POP     BX
 09FB 58           1643          POP     AX
 09FC 85C0         1644  P3S:    TEST    AX,AX
 09FE 75CF         1645          JNZ     P3L
 0A00 B43E         1646  P3E:    MOV     AH,3EH
 0A02 CD21         1647          INT     21H
 0A04 C3           1648          RET
 0A05              1649  
 0A05              1650  ; --------------------------------
R-ASSEMBLER VERSION 1.05C    RA.ASM                       34

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0A05              1651  ; TITLE DIRECTIVE REQUESTED
 0A05 FC           1652  P5:     CLD
 0A06 BF2D27       1653          MOV     DI,TTLBUF
 0A09 89D9         1654          MOV     CX,BX
 0A0B F3A4         1655          REP MOVSB
 0A0D 30C0         1656          XOR     AL,AL
 0A0F AA           1657          STOSB
 0A10 F8           1658          CLC
 0A11 C3           1659          RET
 0A12              1660  
 0A12              1661  ; --------------------------------
 0A12              1662  ; PAGE DIRECTIVE REQUESTED
 0A12 85D2         1663  P4:     TEST    DX,DX
 0A14 7508         1664          JNZ     P4S
 0A16 A1901F       1665          MOV     AX,[PAGLEN]
 0A19 A35D28       1666          MOV     [LSTLIN],AX
 0A1C F8           1667          CLC
 0A1D C3           1668          RET
 0A1E 8916901F     1669  P4S:    MOV     [PAGLEN],DX
 0A22 F8           1670          CLC
 0A23 C3           1671          RET
 0A24              1672  
 0A24              1673  ; --------------------------------
 0A24              1674  ; ACTUAL ASSEMBLER MODULES
 0A24              1675          INCLUDE GENERIC.ASM
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  35

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0A24              1     ; --------------------------------
 0A24              2     ; ASSEMBLE ONE LINE
 0A24 31C0         3     ASM:    XOR     AX,AX
 0A26              4     
 0A26              5     ; SAVE STACK SO EVERY ERROR
 0A26              6     ; CAN RETURN HERE REGARDLESS OF
 0A26              7     ; STACK CONTENTS
 0A26 89263928     8             MOV     [STK],SP
 0A2A A33128       9             MOV     [BINLEN],AX
 0A2D BE2D22       10            MOV     SI,TXTBUF
 0A30 A02D28       11            MOV     AL,[FUNC]
 0A33 84C0         12            TEST    AL,AL
 0A35 7946         13            JNS     ASMLIN
 0A37 FC           14            CLD
 0A38 BF2D22       15            MOV     DI,TXTBUF
 0A3B              16    
 0A3B              17    ; WRITE LABEL IF SYMBOLS ARE TO
 0A3B              18    ; BE READ
 0A3B A802         19            TEST    AL,2
 0A3D 7419         20            JZ      NOSYM
 0A3F A13328       21            MOV     AX,[PC]
 0A42 BE2D2B       22            MOV     SI,SYMBS
 0A45 B10C         23            MOV     CL,0CH
 0A47 E82E01       24            CALL    SDEF
 0A4A 750C         25            JNZ     NOSYM
 0A4C              26    
 0A4C              27    ; WRITE SYMBOL IF IT IS NOT
 0A4C              28    ; AN EQUATE OR BLANK
 0A4C 4B           29            DEC     BX
 0A4D F60002       30            TEST    BYTE [BX+SI],2
 0A50 7506         31            JNZ     NOSYM
 0A52 E81104       32            CALL    WRM
 0A55 B03A         33            MOV     AL,3AH
 0A57 AA           34            STOSB
 0A58 BE2D23       35    NOSYM:  MOV     SI,BINBUF
 0A5B AC           36            LODSB
 0A5C A24128       37            MOV     [OPCODE],AL
 0A5F B009         38            MOV     AL,9
 0A61 AA           39            STOSB
 0A62 E8F50B       40            CALL    DISASM
 0A65 B80D0A       41            MOV     AX,0A0DH
 0A68 AB           42            STOSW
 0A69 89F8         43            MOV     AX,DI
 0A6B 2D2D22       44            SUB     AX,TXTBUF
 0A6E A32F28       45            MOV     [TXTLEN],AX
 0A71 A13128       46            MOV     AX,[BINLEN]
 0A74 01063328     47            ADD     [PC],AX
 0A78 F8           48            CLC
 0A79 C3           49            RET
 0A7A E8CC01       50    ASMLBL: CALL    LBL
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  36

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0A7D              51    
 0A7D              52    ; RESET STACK JUST IN CASE WE
 0A7D              53    ; GOT BACK HERE FROM SOME OR
 0A7D              54    ; OTHER ODD PLACE
 0A7D 8B263928     55    ASMLIN: MOV     SP,[STK]
 0A81 E85C00       56            CALL    CC
 0A84 7429         57            JZ      SETEQ0
 0A86              58    
 0A86              59    ; EQUAL SIGN WORKS LIKE AN EQU
 0A86 3C3D         60            CMP     AL,3DH
 0A88 7413         61            JE      ASMEQU
 0A8A              62    
 0A8A              63    ; SET PROGRAM COUNTER BY CHARACTER
 0A8A 3C24         64            CMP     AL,PCCHAR
 0A8C 7423         65            JE      ASMORG
 0A8E E85504       66            CALL    ASMCMD
 0A91 75E7         67            JNZ     ASMLBL
 0A93 E84A00       68            CALL    CC
 0A96 7417         69            JZ      SETEQ0
 0A98              70    
 0A98              71    ; CHARACTERS PAST END OF LINE
 0A98              72    ; ERROR
 0A98 B009         73            MOV     AL,9
 0A9A E99502       74            JMP     FAIL
 0A9D 46           75    ASMEQU: INC     SI
 0A9E              76    
 0A9E              77    ; --------------------------------
 0A9E              78    ; EQU DIRECTIVE OR EQUAL SIGN
 0A9E A02D28       79    SETEQU: MOV     AL,[FUNC]
 0AA1 A803         80            TEST    AL,3
 0AA3 740A         81            JZ      SETEQ0
 0AA5              82    
 0AA5              83    ; GET OR CALCULATE IMMEDIATE
 0AA5              84    ; AND STORE IT AT POINTER
 0AA5              85    ; GENERATED BY LBL
 0AA5 E8A102       86            CALL    RE
 0AA8 89EF         87            MOV     DI,BP
 0AAA 804DFF02     88            OR      BYTE [DI-1],2
 0AAE AB           89            STOSW
 0AAF F8           90    SETEQ0: CLC
 0AB0 C3           91            RET
 0AB1 46           92    ASMORG: INC     SI
 0AB2 E82B00       93            CALL    CC
 0AB5 7424         94            JZ      ASMOER
 0AB7 3C3D         95            CMP     AL,3DH
 0AB9 7520         96            JNE     ASMOER
 0ABB 46           97            INC     SI
 0ABC              98    
 0ABC              99    ; --------------------------------
 0ABC              100   ; ORG DIRECTIVE
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  37

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0ABC E88A02       101   SETORG: CALL    RE
 0ABF 8B163328     102           MOV     DX,[PC]
 0AC3 A33328       103           MOV     [PC],AX
 0AC6              104   
 0AC6              105   ; CHECK FOR START OF PROGRAM
 0AC6 3B163528     106           CMP     DX,[VORG]
 0ACA 740A         107           JE      SETOR2
 0ACC              108   
 0ACC              109   ; IF NEW ADDRESS IS AHEAD,
 0ACC              110   ; DEFINE AS EMPTY SPACE
 0ACC 29D0         111           SUB     AX,DX
 0ACE 7204         112           JB      SETOR1
 0AD0 01063728     113           ADD     [USIZE],AX
 0AD4 F8           114   SETOR1: CLC
 0AD5 C3           115           RET
 0AD6              116   
 0AD6              117   ; SET LOAD ADDRESS AT
 0AD6              118   ; PROGRAM START
 0AD6 A3302B       119   SETOR2: MOV     [SYMBS+3],AX
 0AD9 F8           120           CLC
 0ADA C3           121           RET
 0ADB              122   
 0ADB              123   ; SYNTAX ERROR
 0ADB B001         124   ASMOER: MOV     AL,1
 0ADD E95202       125           JMP     FAIL
 0AE0              126   
 0AE0              127   ; --------------------------------
 0AE0              128   ; SCAN FOR TOKENS AT TXTBUF
 0AE0              129   ; SET SI TO FIRST TOKEN
 0AE0              130   ; LOCATION, BX TO LENGTH,
 0AE0              131   ; AL TO FIRST CHAR
 0AE0 31DB         132   CC:     XOR     BX,BX
 0AE2 8A00         133   CCM:    MOV     AL,[BX+SI]
 0AE4 3C00         134           CMP     AL,0
 0AE6 7442         135           JE      CCT
 0AE8 3C0D         136           CMP     AL,0DH
 0AEA 743E         137           JE      CCT
 0AEC 3C21         138           CMP     AL,21H
 0AEE 722F         139           JB      CCK
 0AF0 3C22         140           CMP     AL,22H
 0AF2 743B         141           JE      CCQ
 0AF4 3C27         142           CMP     AL,27H
 0AF6 7437         143           JE      CCQ
 0AF8 3C30         144           CMP     AL,30H
 0AFA 722A         145           JB      CCS
 0AFC 3C3A         146           CMP     AL,3AH
 0AFE 721C         147           JB      CCL
 0B00 3C3B         148           CMP     AL,3BH
 0B02 7426         149           JE      CCT
 0B04 3C41         150           CMP     AL,41H
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  38

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0B06 721E         151           JB      CCS
 0B08 3C5B         152           CMP     AL,5BH
 0B0A 7210         153           JB      CCL
 0B0C 3C5F         154           CMP     AL,5FH
 0B0E 740C         155           JE      CCL
 0B10 3C61         156           CMP     AL,61H
 0B12 7212         157           JB      CCS
 0B14 3C7B         158           CMP     AL,7BH
 0B16 730E         159           JNB     CCS
 0B18              160   
 0B18              161   ; CONVERT NORMAL LETTER
 0B18              162   ; TO UPPERCASE
 0B18 24DF         163           AND     AL,0DFH
 0B1A 8800         164           MOV     [BX+SI],AL
 0B1C              165   
 0B1C              166   ; INCREMENT TOKEN LENGTH
 0B1C 43           167   CCL:    INC     BX
 0B1D EBC3         168           JMP     SHORT CCM
 0B1F              169   
 0B1F              170   ; IF THERE IS A TOKEN, ABORT
 0B1F              171   ; AND RETURN IT, OTHERWISE
 0B1F              172   ; SKIP SPACE
 0B1F 85DB         173   CCK:    TEST    BX,BX
 0B21 7507         174           JNZ     CCT
 0B23 46           175           INC     SI
 0B24 EBBC         176           JMP     SHORT CCM
 0B26              177   
 0B26              178   ; IF THERE IS ALREADY A TOKEN
 0B26              179   ; ABORT AND RETURN EXISTING
 0B26              180   ; TOKEN, OTHERWISE RETURN
 0B26              181   ; SPECIAL CHARACTER
 0B26 85DB         182   CCS:    TEST    BX,BX
 0B28 740E         183           JZ      CCE
 0B2A              184   
 0B2A              185   ; ABORT AND RETURN FIRST
 0B2A              186   ; CHARACTER ON LINE AND
 0B2A              187   ; SET ZERO FLAG
 0B2A 8A04         188   CCT:    MOV     AL,[SI]
 0B2C 85DB         189           TEST    BX,BX
 0B2E C3           190           RET
 0B2F              191   
 0B2F              192   ; IF TOKEN EXISTS, ABORT AND
 0B2F              193   ; RETURN TOKEN, OTHERWISE
 0B2F              194   ; SCAN UNTIL NEXT MATCHING
 0B2F              195   ; QUOTE AND RETURN QUOTED
 0B2F              196   ; TEXT AS TOKEN
 0B2F 85DB         197   CCQ:    TEST    BX,BX
 0B31 75F7         198           JNZ     CCT
 0B33 43           199   CCW:    INC     BX
 0B34 3A00         200           CMP     AL,[BX+SI]
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  39

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0B36 75FB         201           JNZ     CCW
 0B38 43           202   CCE:    INC     BX
 0B39 C3           203           RET
 0B3A              204   
 0B3A              205   ; --------------------------------
 0B3A              206   ; TEST IF 16-BIT SIGNED NUMBER
 0B3A              207   ; CAN UNAMBIGUOUSLY FIT WITHIN
 0B3A              208   ; 8 BITS
 0B3A A880         209   AA:     TEST    AL,80H
 0B3C 7503         210           JNZ     AA1
 0B3E              211   
 0B3E              212   ; IF SIGN BIT IS NOT SET ON
 0B3E              213   ; LOWER BYTE, UPPER BYTE MUST
 0B3E              214   ; BE ZERO
 0B3E 84E4         215           TEST    AH,AH
 0B40 C3           216           RET
 0B41              217   
 0B41              218   ; IF SIGN BIT IS SET ON LOWER
 0B41              219   ; BYTE, UPPER BYTE MUST BE FF
 0B41 80FCFF       220   AA1:    CMP     AH,0FFH
 0B44 C3           221           RET
 0B45              222   
 0B45              223   ; --------------------------------
 0B45              224   ; SCAN SYMBOL TABLE FOR TOKEN
 0B45              225   ; AND RETURN DEFINITION IF FOUND
 0B45 8B15         226   SL:     MOV     DX,[DI]
 0B47 89D9         227           MOV     CX,BX
 0B49              228   
 0B49              229   ; ADVANCE TABLE POINTER, ADD
 0B49              230   ; 2 BYTES FOR DEFINITION
 0B49 47           231   SL1:    INC     DI
 0B4A 47           232           INC     DI
 0B4B 89CB         233           MOV     BX,CX
 0B4D              234   
 0B4D              235   ; DECREMENT COUNTER
 0B4D 4A           236           DEC     DX
 0B4E 7827         237           JS      SL6
 0B50              238   
 0B50              239   ; GET ENTRY LENGTH AND CHECK
 0B50              240   ; WITH SYMBOL; SET BX TO -1
 0B50              241   ; FIRST TO BE ABLE TO
 0B50              242   ; PREINCREMENT
 0B50 F9           243           STC
 0B51 19DB         244           SBB     BX,BX
 0B53 B020         245           MOV     AL,20H
 0B55 43           246   SL2:    INC     BX
 0B56 3A01         247           CMP     AL,[BX+DI]
 0B58 72FB         248           JB      SL2
 0B5A 39CB         249           CMP     BX,CX
 0B5C 750B         250           JNE     SL4
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  40

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0B5E              251   
 0B5E              252   ; CHECK ENTRY AGAINST SYMBOL
 0B5E 4B           253   SL3:    DEC     BX
 0B5F 780D         254           JS      SL5
 0B61 8A00         255           MOV     AL,[BX+SI]
 0B63 3A01         256           CMP     AL,[BX+DI]
 0B65 74F7         257           JE      SL3
 0B67 89CB         258           MOV     BX,CX
 0B69 01DF         259   SL4:    ADD     DI,BX
 0B6B 47           260           INC     DI
 0B6C 75DB         261           JNE     SL1
 0B6E              262   
 0B6E              263   ; LOAD DEFINITION INTO AX
 0B6E 89CB         264   SL5:    MOV     BX,CX
 0B70 8B4101       265           MOV     AX,[BX+DI+1]
 0B73 01DE         266           ADD     SI,BX
 0B75 39DB         267           CMP     BX,BX
 0B77 C3           268   SL6:    RET
 0B78              269   
 0B78              270   ; --------------------------------
 0B78              271   ; SCAN SYMBOL TABLE BY AX FOR
 0B78              272   ; DEFINITION, ACCORDING TO CL,
 0B78              273   ; AND RETURN SYMBOL
 0B78 8B14         274   SDEF:   MOV     DX,[SI]
 0B7A 83C603       275           ADD     SI,3
 0B7D 4A           276           DEC     DX
 0B7E 753E         277           JNZ     SDEF7
 0B80 4A           278           DEC     DX
 0B81 C3           279           RET
 0B82              280   
 0B82              281   ; GET ENTRY LENGTH
 0B82 F9           282   SDEF1:  STC
 0B83 19DB         283           SBB     BX,BX
 0B85 43           284   SDEF2:  INC     BX
 0B86 803821       285           CMP     BYTE [BX+SI],21H
 0B89 73FA         286           JNB     SDEF2
 0B8B 43           287           INC     BX
 0B8C              288   
 0B8C              289   ; CHECK DEFINITION
 0B8C F6C10C       290           TEST    CL,0CH
 0B8F 740F         291           JZ      SDEF3
 0B91 F6C108       292           TEST    CL,8
 0B94 741B         293           JZ      SDEF4
 0B96 F6C104       294           TEST    CL,4
 0B99 741B         295           JZ      SDEF5
 0B9B              296   
 0B9B              297   ; FULL WORD
 0B9B 3900         298           CMP     [BX+SI],AX
 0B9D 751D         299           JNE     SDEF6
 0B9F C3           300           RET
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  41

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0BA0              301   
 0BA0              302   ; SIGNED BYTE
 0BA0              303   ; FALLS THROUGH TO LOW BYTE
 0BA0 F64001FF     304   SDEF3:  TEST    BYTE [BX+SI+1],0FFH
 0BA4 740B         305           JZ      SDEF4
 0BA6 807801FF     306           CMP     BYTE [BX+SI+1],0FFH
 0BAA 7510         307           JNE     SDEF6
 0BAC F600FF       308           TEST    BYTE [BX+SI],0FFH
 0BAF 790B         309           JNS     SDEF6
 0BB1              310   
 0BB1              311   ; LOW BYTE
 0BB1 3800         312   SDEF4:  CMP     [BX+SI],AL
 0BB3 7507         313           JNE     SDEF6
 0BB5 C3           314           RET
 0BB6              315   
 0BB6              316   ; HIGH BYTE
 0BB6 384001       317   SDEF5:  CMP     [BX+SI+1],AL
 0BB9 7501         318           JNE     SDEF6
 0BBB C3           319           RET
 0BBC              320   
 0BBC              321   ; SKIP ENTRY ENTIRELY
 0BBC 01DE         322   SDEF6:  ADD     SI,BX
 0BBE              323   
 0BBE              324   ; ACTUAL START OF LOOP, SINCE
 0BBE              325   ; THE TABLE STARTS ON A TWO-BYTE
 0BBE              326   ; VALUE; PREDECREMENTING DX
 0BBE              327   ; WILL ALSO RESET THE ZERO FLAG
 0BBE              328   ; ONCE IT'S RUN THROUGH WITH
 0BBE              329   ; NO RESULT
 0BBE 46           330   SDEF7:  INC     SI
 0BBF 46           331           INC     SI
 0BC0 4A           332           DEC     DX
 0BC1 79BF         333           JNS     SDEF1
 0BC3 C3           334           RET
 0BC4              335   
 0BC4              336   ; --------------------------------
 0BC4              337   ; HUMDRUM HEX CONVERT
 0BC4 50           338   HALX:   PUSH    AX
 0BC5 D0E8         339           SHR     AL,1
 0BC7 D0E8         340           SHR     AL,1
 0BC9 D0E8         341           SHR     AL,1
 0BCB D0E8         342           SHR     AL,1
 0BCD E80100       343           CALL    HALL
 0BD0 58           344           POP     AX
 0BD1 240F         345   HALL:   AND     AL,0FH
 0BD3 0C30         346           OR      AL,30H
 0BD5 3C3A         347           CMP     AL,3AH
 0BD7 7202         348           JB      HALN
 0BD9 0407         349           ADD     AL,7
 0BDB              350   
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  42

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0BDB              351   ; WRITE CHARACTER TO
 0BDB              352   ; TEXT BUFFER
 0BDB AA           353   HALN:   STOSB
 0BDC C3           354           RET
 0BDD              355   
 0BDD              356   ; --------------------------------
 0BDD              357   ; READ 16-BIT NUMBER IN EITHER
 0BDD              358   ; BINARY, OCTAL, HEX, OR DECIMAL
 0BDD              359   ; AS DEFINED BY ROTATION COUNT
 0BDD              360   ; IN CL
 0BDD FC           361   RN:     CLD
 0BDE              362   
 0BDE              363   ; BLANK OUT TEMPORARY STORAGE
 0BDE 31D2         364           XOR     DX,DX
 0BE0              365   
 0BE0              366   ; CL BETWEEN 1 AND 4 WORKS WITH
 0BE0              367   ; COMMON NUMBER BASES THAT ARE
 0BE0              368   ; POWERS OF 2.  ANYTHING ELSE
 0BE0              369   ; IS CHANGED TO ZERO WHICH WORKS
 0BE0              370   ; WITH DECIMAL
 0BE0 80F905       371           CMP     CL,5
 0BE3 7202         372           JB      RN1
 0BE5 30C9         373           XOR     CL,CL
 0BE7 84C9         374   RN1:    TEST    CL,CL
 0BE9 750A         375           JNZ     RN2
 0BEB              376   
 0BEB              377   ; IF NOTHING IN CL, CONTINUE
 0BEB              378   ; PROCESSING AS DECIMAL
 0BEB D1E2         379           SHL     DX,1
 0BED 89D0         380           MOV     AX,DX
 0BEF D1E2         381           SHL     DX,1
 0BF1 D1E2         382           SHL     DX,1
 0BF3 01C2         383           ADD     DX,AX
 0BF5 D3E2         384   RN2:    SHL     DX,CL
 0BF7              385   
 0BF7              386   ; READ ONE DIGIT FROM LINE
 0BF7              387   ; AND USE ALL OF AX FOR IT
 0BF7 30E4         388           XOR     AH,AH
 0BF9 AC           389           LODSB
 0BFA 2C30         390           SUB     AL,30H
 0BFC              391   
 0BFC              392   ; ANYTHING BELOW $30 WILL
 0BFC              393   ; UNDERFLOW OUT OF ITS VALID
 0BFC              394   ; DIAPAZON AND WILL NOT PASS THE
 0BFC              395   ; FOLLOWING UPPER BOUNDARY TESTS
 0BFC 3C0A         396           CMP     AL,0AH
 0BFE 7206         397           JB      RN3
 0C00 2C07         398           SUB     AL,7
 0C02 3C0F         399           CMP     AL,0FH
 0C04 7705         400           JNBE    RN0
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  43

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0C06 01C2         401   RN3:    ADD     DX,AX
 0C08 4B           402           DEC     BX
 0C09 75DC         403           JNZ     RN1
 0C0B              404   
 0C0B              405   ; IF THE TOKEN IS FULLY
 0C0B              406   ; PROCESSED, BX WILL END UP
 0C0B              407   ; TRIGGERING THE ZERO FLAG.  IF
 0C0B              408   ; EXITED VIA THE EARLIER JUMP,
 0C0B              409   ; THE ZERO FLAG ISN'T SET,
 0C0B              410   ; SIGNALING AN INVALID DIGIT.
 0C0B C3           411   RN0:    RET
 0C0C              412   
 0C0C              413   ; --------------------------------
 0C0C              414   ; WRITE 16-BIT NUMBER TO TEXT
 0C0C              415   ; BUFFER AS A NUMERIC CONSTANT
 0C0C              416   ; WITHOUT LEADING ZEROES
 0C0C              417   ; IN BASE SPECIFIED BY CX
 0C0C FC           418   WN:     CLD
 0C0D 39C8         419           CMP     AX,CX
 0C0F 7309         420           JNB     WN1
 0C11 3D0A00       421           CMP     AX,0AH
 0C14 7304         422           JNB     WN1
 0C16              423   
 0C16              424   ; NO NEED FOR A LONG RIGMAROLE
 0C16              425   ; IF THERE'S ONLY ONE DIGIT
 0C16 0C30         426           OR      AL,30H
 0C18 AA           427           STOSB
 0C19 C3           428           RET
 0C1A 89FE         429   WN1:    MOV     SI,DI
 0C1C 31D2         430   WN2:    XOR     DX,DX
 0C1E              431   
 0C1E              432   ; DIVIDE BY BASE AND GET
 0C1E              433   ; REMAINDER FOR EACH DIGIT
 0C1E F7F1         434           DIV     CX
 0C20 92           435           XCHG    AX,DX
 0C21              436   
 0C21              437   ; A VARIATION ON
 0C21              438   ; ALLISON'S ALGORITHM
 0C21 3C0A         439           CMP     AL,0AH
 0C23 1C69         440           SBB     AL,69H
 0C25 2F           441           DAS
 0C26 AA           442           STOSB
 0C27 92           443           XCHG    AX,DX
 0C28 85C0         444           TEST    AX,AX
 0C2A 75F0         445           JNZ     WN2
 0C2C              446   
 0C2C              447   ; DIGITS ARE WRITTEN TO BUFFER
 0C2C              448   ; BACKWARDS AT FIRST, AND THE
 0C2C              449   ; FINAL ONE WRITTEN IS THE
 0C2C              450   ; FIRST DIGIT--IF IT IS NOT A
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  44

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0C2C              451   ; NUMERIC, IT REQUIRES A
 0C2C              452   ; LEADING ZERO
 0C2C 80FA3A       453           CMP     DL,3AH
 0C2F 7203         454           JB      WN5
 0C31 B030         455           MOV     AL,30H
 0C33 AA           456           STOSB
 0C34              457   
 0C34              458   ; REVERSE ORDER OF DIGITS IN
 0C34              459   ; TEXT BUFFER
 0C34 89F9         460   WN5:    MOV     CX,DI
 0C36 29F1         461           SUB     CX,SI
 0C38 D1E9         462           SHR     CX,1
 0C3A              463   
 0C3A              464   ; UNLESS THERE'S ONLY ONE
 0C3A 740C         465           JZ      WN0
 0C3C 29CF         466           SUB     DI,CX
 0C3E 01CE         467           ADD     SI,CX
 0C40 4E           468   WN4:    DEC     SI
 0C41 8A05         469           MOV     AL,[DI]
 0C43 8604         470           XCHG    [SI],AL
 0C45 AA           471           STOSB
 0C46 E2F8         472           LOOP    WN4
 0C48 C3           473   WN0:    RET
 0C49              474   
 0C49              475   ; --------------------------------
 0C49              476   ; ADD SYMBOL TO SYMBOL TABLE
 0C49              477   ; OR REDEFINE EXISTING SYMBOL
 0C49 E894FE       478   LBL:    CALL    CC
 0C4C A02D28       479           MOV     AL,[FUNC]
 0C4F 2403         480           AND     AL,3
 0C51 7434         481           JZ      ERR3
 0C53              482   
 0C53              483   ; PROCESS DETECTED SYMBOL
 0C53 BF2D2B       484           MOV     DI,SYMBS
 0C56 E8ECFE       485           CALL    SL
 0C59 750F         486           JNZ     LBL1
 0C5B              487   
 0C5B              488   ; SYMBOL EXISTS, BUT CAN BE
 0C5B              489   ; REDEFINED ON FUNCTION 2
 0C5B 01DF         490           ADD     DI,BX
 0C5D 47           491           INC     DI
 0C5E A02D28       492           MOV     AL,[FUNC]
 0C61 2402         493           AND     AL,2
 0C63 7511         494           JNZ     LBL2
 0C65              495   
 0C65              496   ; DUPLICATE SYMBOL ERROR
 0C65 B00A         497           MOV     AL,0AH
 0C67 E9C800       498           JMP     FAIL
 0C6A              499   
 0C6A              500   ; WRITE SYMBOL TO TABLE
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  45

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0C6A 89D9         501   LBL1:   MOV     CX,BX
 0C6C FC           502           CLD
 0C6D F3A4         503           REP MOVSB
 0C6F 30C0         504           XOR     AL,AL
 0C71 AA           505           STOSB
 0C72              506   
 0C72              507   ; INCREASE SYMBOL COUNT
 0C72 FF062D2B     508           INC     WORD [SYMBS]
 0C76              509   
 0C76              510   ; SAVE POINTER TO ENTRY
 0C76 89FD         511   LBL2:   MOV     BP,DI
 0C78              512   
 0C78              513   ; GET CURRENT PROGRAM COUNTER
 0C78              514   ; AND STORE IN TABLE WITH THE
 0C78              515   ; NEW ENTRY
 0C78 A13328       516           MOV     AX,[PC]
 0C7B AB           517           STOSW
 0C7C              518   
 0C7C              519   ; CHECK FOR COLON OR INSTRUCTION
 0C7C E861FE       520           CALL    CC
 0C7F 7406         521           JZ      ERR3
 0C81 3C3A         522           CMP     AL,3AH
 0C83 7501         523           JNE     LBL3
 0C85              524   
 0C85              525   ; SKIP COLON
 0C85 46           526           INC     SI
 0C86 C3           527   LBL3:   RET
 0C87              528   
 0C87              529   ; INVALID INSTRUCTION ERROR
 0C87 B003         530   ERR3:   MOV     AL,3
 0C89 E9A600       531           JMP     FAIL
 0C8C              532   
 0C8C              533   ; --------------------------------
 0C8C              534   ; PROCESS DFB/DFW DIRECTIVE
 0C8C BF2D23       535   SETDFB: MOV     DI,BINBUF
 0C8F 31C9         536           XOR     CX,CX
 0C91 E84CFE       537   SETDMA: CALL    CC
 0C94 746F         538           JZ      ERR8
 0C96 3C3F         539           CMP     AL,3FH
 0C98 7433         540           JE      SETDUD
 0C9A              541   
 0C9A              542   ; DEFINED DATA IS DISCOVERED SO
 0C9A              543   ; WRITE ALL PRECEDING UNDEFINED
 0C9A              544   ; DATA TO BUFFER AS ZEROES;
 0C9A              545   ; IF NONE, REP WILL EXECUTE
 0C9A              546   ; ZERO TIMES
 0C9A 50           547           PUSH    AX
 0C9B 31C0         548           XOR     AX,AX
 0C9D F3AA         549           REP STOSB
 0C9F 58           550           POP     AX
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  46

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0CA0 3C22         551           CMP     AL,22H
 0CA2 7430         552           JE      SETDQU
 0CA4 3C27         553           CMP     AL,27H
 0CA6 742C         554           JE      SETDQU
 0CA8 51           555   SETDVA: PUSH    CX
 0CA9 57           556           PUSH    DI
 0CAA E89C00       557           CALL    RE
 0CAD 5F           558           POP     DI
 0CAE 59           559           POP     CX
 0CAF AB           560           STOSW
 0CB0              561   
 0CB0              562   ; STORE ONLY THE NECESSARY
 0CB0              563   ; AMOUNT OF BYTES
 0CB0 803E412802   564           CMP     BYTE [OPCODE],2
 0CB5 7431         565           JE      SETDCM
 0CB7 7303         566           JNB     SETDVW
 0CB9 4F           567           DEC     DI
 0CBA EB2C         568           JMP     SHORT SETDCM
 0CBC              569   
 0CBC              570   ; VALUES LARGER THAN 16 BITS
 0CBC              571   ; ARE SIGN EXTENDED TO FILL
 0CBC D1E0         572   SETDVW: SHL     AX,1
 0CBE 18C0         573           SBB     AL,AL
 0CC0 51           574           PUSH    CX
 0CC1 8A0E4128     575           MOV     CL,[OPCODE]
 0CC5              576   
 0CC5              577   ; ALREADY HAVE TWO BYTES OF
 0CC5              578   ; VALUE STORED
 0CC5 80E902       579           SUB     CL,2
 0CC8 F3AA         580           REP STOSB
 0CCA 59           581           POP     CX
 0CCB EB1B         582           JMP     SHORT SETDCM
 0CCD              583   
 0CCD              584   ; IF ANY UNDEFINED DATA IS
 0CCD              585   ; FOUND, ADD IT UP
 0CCD 020E4128     586   SETDUD: ADD     CL,[OPCODE]
 0CD1 46           587           INC     SI
 0CD2 EB14         588           JMP     SHORT SETDCM
 0CD4              589   
 0CD4              590   ; QUOTED STRINGS OF LESS THAN 3
 0CD4              591   ; BYTES ARE PROCESSED AS LITERAL
 0CD4              592   ; BINARY CONSTANTS
 0CD4 A04128       593   SETDQU: MOV     AL,[OPCODE]
 0CD7 0403         594           ADD     AL,3
 0CD9 38C3         595           CMP     BL,AL
 0CDB 72CB         596           JB      SETDVA
 0CDD 51           597           PUSH    CX
 0CDE 89D9         598           MOV     CX,BX
 0CE0              599   
 0CE0              600   ; WRITE ONLY WHAT IS BETWEEN THE
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  47

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0CE0              601   ; QUOTATION MARKS AND SKIP MARKS
 0CE0 83E902       602           SUB     CX,2
 0CE3 46           603           INC     SI
 0CE4 F3A4         604           REP MOVSB
 0CE6 46           605           INC     SI
 0CE7 59           606           POP     CX
 0CE8              607   
 0CE8              608   ; IF THERE ARE ANY MORE
 0CE8              609   ; CHARACTERS ON THE LINE, THE
 0CE8              610   ; FIRST MUST BE A COMMA
 0CE8 E8F5FD       611   SETDCM: CALL    CC
 0CEB 7407         612           JZ      SETDEN
 0CED 3C2C         613           CMP     AL,2CH
 0CEF 7518         614           JNE     ERR1
 0CF1 46           615           INC     SI
 0CF2 EB9D         616           JMP     SHORT SETDMA
 0CF4              617   
 0CF4              618   ; ADD ANY UNDEFINED DATA TO THE
 0CF4              619   ; ACCUMULATED AMOUNT AND UPDATE
 0CF4              620   ; PC BY THE SAME AMOUNT.  THE
 0CF4              621   ; ASM PROCEDURE WILL UPDATE PC
 0CF4              622   ; BY THE LENGTH OF THE BINARY
 0CF4              623   ; OUTPUT PRODUCED, I.E. HOW FAR
 0CF4              624   ; THE BUFFER HAS BEEN SKIPPED
 0CF4 010E3728     625   SETDEN: ADD     [USIZE],CX
 0CF8 89F8         626           MOV     AX,DI
 0CFA 2D2D23       627           SUB     AX,BINBUF
 0CFD A33128       628           MOV     [BINLEN],AX
 0D00 01C8         629           ADD     AX,CX
 0D02 E97101       630           JMP     STDAT
 0D05              631   
 0D05              632   ; MISSING OPERAND ERROR
 0D05 B008         633   ERR8:   MOV     AL,8
 0D07 EB29         634           JMP     SHORT FAIL
 0D09              635   
 0D09              636   ; SYNTAX ERROR
 0D09 B001         637   ERR1:   MOV     AL,1
 0D0B EB25         638           JMP     SHORT FAIL
 0D0D              639   
 0D0D              640   ; --------------------------------
 0D0D              641   ; PREPARE FILE NAME FOR
 0D0D              642   ; INCLUDE DIRECTIVE
 0D0D E8D0FD       643   SETINC: CALL    CC
 0D10 74F3         644           JZ      ERR8
 0D12 3C22         645           CMP     AL,22H
 0D14 7404         646           JE      SETIN1
 0D16 3C27         647           CMP     AL,27H
 0D18 7508         648           JNE     SETIN2
 0D1A 46           649   SETIN1: INC     SI
 0D1B              650   
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  48

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0D1B              651   ; IF ENCLOSED IN QUOTES, MUST
 0D1B              652   ; BE AT LEAST 3 CHARACTERS LONG
 0D1B              653   ; INCLUDING THE TWO MARKS
 0D1B 83EB02       654           SUB     BX,2
 0D1E 76E5         655           JBE     ERR8
 0D20 EB0D         656           JMP     SHORT SETEND
 0D22              657   
 0D22              658   ; IF NOT IN QUOTES, GET REST
 0D22              659   ; OF LINE UNTIL FIRST EMPTY
 0D22              660   ; SPACE OR SEMICOLON
 0D22 31DB         661   SETIN2: XOR     BX,BX
 0D24 43           662   SETIN3: INC     BX
 0D25 8A00         663           MOV     AL,[BX+SI]
 0D27 3C3B         664           CMP     AL,3BH
 0D29 7404         665           JE      SETEND
 0D2B 3C21         666           CMP     AL,21H
 0D2D 73F5         667           JNB     SETIN3
 0D2F              668   
 0D2F              669   ; PROCEED DIRECTLY INTO THE
 0D2F              670   ; I/O HANDLER
 0D2F A04128       671   SETEND: MOV     AL,[OPCODE]
 0D32              672   
 0D32              673   ; --------------------------------
 0D32              674   ; ERROR AND I/O HANDLER
 0D32 8B263928     675   FAIL:   MOV     SP,[STK]
 0D36              676   
 0D36              677   ; FIRST RESET STACK TO TOP LEVEL
 0D36              678   ; CALLER, THE LINE ASSEMBLER
 0D36 3C05         679           CMP     AL,5
 0D38 750D         680           JNE     FAIL2
 0D3A              681   
 0D3A              682   ; ERROR CODE 5 IS RELATIVE JUMP
 0D3A              683   ; OUT OF RANGE; CALCULATE THE
 0D3A              684   ; ABSOLUTE AMOUNT OF BYTES
 0D3A 8B164528     685           MOV     DX,[IMM]
 0D3E 85D2         686           TEST    DX,DX
 0D40 7902         687           JNS     FAIL1
 0D42 F7D2         688           NOT     DX
 0D44 83EA7F       689   FAIL1:  SUB     DX,7FH
 0D47 F9           690   FAIL2:  STC
 0D48 C3           691           RET
 0D49              692   
 0D49              693   ; --------------------------------
 0D49              694   ; PRIMITIVE EXPRESSION EVALUATOR
 0D49 30C9         695   RE:     XOR     CL,CL
 0D4B 31C0         696           XOR     AX,AX
 0D4D A34528       697           MOV     [IMM],AX
 0D50 E88DFD       698   REA:    CALL    CC
 0D53 741C         699           JZ      RED
 0D55              700   
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  49

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0D55              701   ; PREPARE TO SET ARITHMETIC
 0D55              702   ; OPERATOR FLAGS
 0D55 3C2B         703           CMP     AL,2BH
 0D57 7412         704           JE      REC
 0D59 3C2D         705           CMP     AL,2DH
 0D5B 740B         706           JE      REB
 0D5D              707   
 0D5D              708   ; GV WILL APPLY THE OPERATOR
 0D5D              709   ; AND RESET ITS FLAG
 0D5D E81A00       710           CALL    GV
 0D60 720F         711           JC      RED
 0D62              712   
 0D62              713   ; IF AN IDENTIFIER WAS FOUND,
 0D62              714   ; GV HAS SET ITS FLAG INSTEAD
 0D62 01064528     715           ADD     [IMM],AX
 0D66 EBE8         716           JMP     SHORT REA
 0D68              717   
 0D68              718   ; USE OF AN OPERATOR WILL RESET
 0D68              719   ; THE IDENTIFIER FLAG
 0D68 80F180       720   REB:    XOR     CL,80H
 0D6B 80E1BF       721   REC:    AND     CL,0BFH
 0D6E 46           722           INC     SI
 0D6F EBDF         723           JMP     SHORT REA
 0D71              724   
 0D71              725   ; CHECK FOR OPERAND TO MAKE
 0D71              726   ; SURE THERE ARE NO DANGLING
 0D71              727   ; OPERATORS
 0D71 F6C140       728   RED:    TEST    CL,40H
 0D74 748F         729           JZ      ERR8
 0D76 A14528       730           MOV     AX,[IMM]
 0D79 C3           731           RET
 0D7A              732   
 0D7A              733   ; --------------------------------
 0D7A              734   ; HANDLE ONE NUMERIC CONSTANT
 0D7A              735   ; OR IDENTIFIER AND GET VALUE
 0D7A F6C140       736   GV:     TEST    CL,40H
 0D7D              737   
 0D7D              738   ; CHECK FLAGS IF IDENTIFIER WAS
 0D7D              739   ; ALREADY PROCESSED
 0D7D 752C         740           JNZ     GVA
 0D7F 3C24         741           CMP     AL,PCCHAR
 0D81 741D         742           JE      GVC
 0D83 3C22         743           CMP     AL,22H
 0D85 7426         744           JE      GVQ
 0D87 3C27         745           CMP     AL,27H
 0D89 7422         746           JE      GVQ
 0D8B              747   
 0D8B              748   ; CHECK SIZE OVERRIDES AND START
 0D8B              749   ; OVER IF THERE ARE ANY
 0D8B E82002       750           CALL    RNM
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  50

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0D8E 74EA         751           JZ      GV
 0D90 E8DB01       752           CALL    RNC
 0D93 7368         753           JNC     GVV
 0D95              754   
 0D95              755   ; INVALID CHARACTERS MEANS THE
 0D95              756   ; END OF THE IDENTIFIER
 0D95 3C40         757           CMP     AL,40H
 0D97 7212         758           JB      GVA
 0D99 A02D28       759           MOV     AL,[FUNC]
 0D9C 2403         760           AND     AL,3
 0D9E 752F         761           JNZ     GVL
 0DA0              762   
 0DA0              763   ; ONLY BOTHER READING LABELS
 0DA0              764   ; IF THE FUNCTION IS SPECIFIED
 0DA0              765   ; OTHERWISE JUST GET CURRENT PC
 0DA0 01DE         766   GVC:    ADD     SI,BX
 0DA2 80C901       767           OR      CL,1
 0DA5 8B163328     768           MOV     DX,[PC]
 0DA9 EB52         769           JMP     SHORT GVV
 0DAB              770   
 0DAB              771   ; RETURN WITH CARRY MEANS
 0DAB              772   ; UNEXPECTED ENTRY OR END
 0DAB              773   ; OF LINE
 0DAB F9           774   GVA:    STC
 0DAC C3           775           RET
 0DAD              776   
 0DAD              777   ; SAVE TWO PLACES PAST FIRST
 0DAD              778   ; QUOTATION MARK
 0DAD 8B5401       779   GVQ:    MOV     DX,[SI+1]
 0DB0 01DE         780           ADD     SI,BX
 0DB2              781   
 0DB2              782   ; 5 CHARACTERS INCLUDING 2
 0DB2              783   ; QUOTES MEANS 3 CHARACTER VALUE
 0DB2              784   ; AND THAT IS EXCESSIVE
 0DB2 83FB05       785           CMP     BX,5
 0DB5 730E         786           JNB     GV7
 0DB7              787   
 0DB7              788   ; 2 CHARACTER VALUE MEANS WHAT
 0DB7              789   ; WAS SAVED IS GOOD
 0DB7 83FB04       790           CMP     BX,4
 0DBA 7341         791           JNB     GVV
 0DBC              792   
 0DBC              793   ; 0 CHARACTER VALUE CANNOT BE
 0DBC 83FB03       794           CMP     BX,3
 0DBF 7209         795           JB      GV8
 0DC1              796   
 0DC1              797   ; 1 CHARACTER MEANS UPPER BYTE
 0DC1              798   ; OF TEMP VALUE MUST BE BLANKED
 0DC1 30F6         799           XOR     DH,DH
 0DC3 7438         800           JZ      GVV
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  51

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0DC5              801   
 0DC5              802   ; CONSTANT TOO LARGE ERROR
 0DC5 B007         803   GV7:    MOV     AL,7
 0DC7 E968FF       804           JMP     FAIL
 0DCA              805   
 0DCA              806   ; MISSING OPERAND ERROR
 0DCA B008         807   GV8:    MOV     AL,8
 0DCC E963FF       808           JMP     FAIL
 0DCF              809   
 0DCF              810   ; PROCESS SYMBOL REFERENCE
 0DCF 51           811   GVL:    PUSH    CX
 0DD0 BF2D2B       812           MOV     DI,SYMBS
 0DD3 E86FFD       813           CALL    SL
 0DD6 5B           814           POP     BX
 0DD7              815   
 0DD7              816   ; RESTORE BX AS IT IS ZERO
 0DD7              817   ; AFTER SKIPPING TOKEN
 0DD7 87CB         818           XCHG    BX,CX
 0DD9 BA0201       819           MOV     DX,102H
 0DDC 92           820           XCHG    DX,AX
 0DDD 740B         821           JZ      GVL1
 0DDF              822   
 0DDF              823   ; ONLY RAISE ALARM FOR MISSING
 0DDF              824   ; IDENTIFIERS ON CODE 2 TO ALLOW
 0DDF              825   ; CODE 1 TO COLLECT THEM AT A
 0DDF              826   ; LEISURELY PACE
 0DDF 84062D28     827           TEST    AL,[FUNC]
 0DE3 74BB         828           JZ      GVC
 0DE5              829   
 0DE5              830   ; SYMBOL NOT FOUND ERROR
 0DE5 B004         831           MOV     AL,4
 0DE7 E948FF       832           JMP     FAIL
 0DEA              833   
 0DEA              834   ; A FORWARD SYMBOL REFERENCE
 0DEA              835   ; MUST RESOLVE TO A 16 BIT VALUE
 0DEA              836   ; BUT THE SIZE OF A BACKWARD
 0DEA              837   ; REFERENCE CAN BE 8 BITS AND
 0DEA              838   ; DETECTED 8-BIT BACKWARD
 0DEA              839   ; REFERENCES ARE THEREFORE
 0DEA              840   ; MARKED WITH BIT 1 ON THE
 0DEA              841   ; TERMINATOR CHARACTER WHICH
 0DEA              842   ; CODE 2 WILL LOOK FOR;
 0DEA              843   ; CONSEQUENTLY, IT MAY NOT BE
 0DEA              844   ; SET DURING A CODE 2 SEQUENCE
 0DEA 84F6         845   GVL1:   TEST    DH,DH
 0DEC 750C         846           JNZ     GVL3
 0DEE 84062D28     847           TEST    AL,[FUNC]
 0DF2 7502         848           JNZ     GVL2
 0DF4 0821         849           OR      [BX+DI],AH
 0DF6 8421         850   GVL2:   TEST    [BX+DI],AH
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  52

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0DF8 7503         851           JNZ     GVV
 0DFA 80C902       852   GVL3:   OR      CL,2
 0DFD              853   
 0DFD              854   ; SET IDENTIFIER FLAG
 0DFD 80C940       855   GVV:    OR      CL,40H
 0E00 84C9         856           TEST    CL,CL
 0E02 7905         857           JNS     GVNS
 0E04 80F180       858           XOR     CL,80H
 0E07              859   
 0E07              860   ; IF MINUS FLAG IS SET, NEGATE
 0E07              861   ; ACQUIRED VALUE
 0E07 F7DA         862           NEG     DX
 0E09              863   
 0E09              864   ; CHECK FLAGS FOR ACTIVE SIZE
 0E09              865   ; OVERRIDES
 0E09 F6C110       866   GVNS:   TEST    CL,10H
 0E0C 7518         867           JNZ     GVWO
 0E0E F6C108       868           TEST    CL,8
 0E11 7507         869           JNZ     GVHB
 0E13 F6C104       870           TEST    CL,4
 0E16 7509         871           JNZ     GVLB
 0E18 EB0C         872           JMP     SHORT GVWO
 0E1A F6C104       873   GVHB:   TEST    CL,4
 0E1D 7507         874           JNZ     GVWO
 0E1F 86F2         875           XCHG    DL,DH
 0E21 30F6         876   GVLB:   XOR     DH,DH
 0E23 80E1FC       877           AND     CL,0FCH
 0E26 89D0         878   GVWO:   MOV     AX,DX
 0E28 F8           879           CLC
 0E29 C3           880           RET
 0E2A              881   
 0E2A              882   ; --------------------------------
 0E2A              883   ; CHECK VALUE FOR SYMBOL AND
 0E2A              884   ; WRITE SYMBOL IF DETECTED
 0E2A F6062D2803   885   WSYMA:  TEST    BYTE [FUNC],3
 0E2F 7433         886           JZ      WSYMA4
 0E31 56           887           PUSH    SI
 0E32 30ED         888           XOR     CH,CH
 0E34 BE2D2B       889           MOV     SI,SYMBS
 0E37 E83EFD       890           CALL    SDEF
 0E3A 7417         891           JZ      WSYMA1
 0E3C              892   
 0E3C              893   ; TRY SYMBOL-1
 0E3C 40           894           INC     AX
 0E3D B52D         895           MOV     CH,2DH
 0E3F BE2D2B       896           MOV     SI,SYMBS
 0E42 E833FD       897           CALL    SDEF
 0E45 740C         898           JZ      WSYMA1
 0E47              899   
 0E47              900   ; TRY SYMBOL+1
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  53

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0E47 48           901           DEC     AX
 0E48 48           902           DEC     AX
 0E49 B52B         903           MOV     CH,2BH
 0E4B BE2D2B       904           MOV     SI,SYMBS
 0E4E E827FD       905           CALL    SDEF
 0E51 750F         906           JNZ     WSYMA3
 0E53 E81000       907   WSYMA1: CALL    WRM
 0E56              908   
 0E56              909   ; IF THERE'S A SIGN CHARACTER
 0E56              910   ; IN X, WRITE SIGN AND 1
 0E56 84ED         911           TEST    CH,CH
 0E58 7405         912           JZ      WSYMA2
 0E5A B431         913           MOV     AH,31H
 0E5C 88E8         914           MOV     AL,CH
 0E5E AB           915           STOSW
 0E5F 5E           916   WSYMA2: POP     SI
 0E60 F8           917           CLC
 0E61 C3           918           RET
 0E62              919   
 0E62              920   ; RESTORE ORIGINAL VALUE
 0E62 40           921   WSYMA3: INC     AX
 0E63 5E           922           POP     SI
 0E64 F9           923   WSYMA4: STC
 0E65 C3           924           RET
 0E66              925   
 0E66              926   ; --------------------------------
 0E66              927   ; WRITE SI TO DI
 0E66 FC           928   WRM:    CLD
 0E67 AC           929           LODSB
 0E68 AA           930           STOSB
 0E69 3C20         931           CMP     AL,20H
 0E6B 73F9         932           JNB     WRM
 0E6D 4F           933           DEC     DI
 0E6E C3           934           RET
 0E6F              935   
 0E6F              936   ; --------------------------------
 0E6F              937   ; DFS DIRECTIVE
 0E6F E8D7FE       938   SETDFS: CALL    RE
 0E72 01063728     939           ADD     [USIZE],AX
 0E76              940   
 0E76              941   ; --------------------------------
 0E76              942   ; STORE DATA AREA ADDRESS
 0E76 56           943   STDAT:  PUSH    SI
 0E77 F6062D2802   944           TEST    BYTE [FUNC],2
 0E7C 7436         945           JZ      STDAT4
 0E7E BE2F2A       946           MOV     SI,MAPBUF+2
 0E81 8B0E2D2A     947           MOV     CX,[MAPBUF]
 0E85 E31E         948           JCXZ    STDAT3
 0E87 8B163328     949   STDAT1: MOV     DX,[PC]
 0E8B              950   
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  54

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0E8B              951   ; CHECK IF PC WITHIN RECORD BOUNDS
 0E8B 3B14         952           CMP     DX,[SI]
 0E8D 7211         953           JB      STDAT2
 0E8F 395402       954           CMP     [SI+2],DX
 0E92 720C         955           JB      STDAT2
 0E94              956   
 0E94              957   ; CHECK IF DATA AREA FITS
 0E94              958   ; ENTIRELY
 0E94 01C2         959           ADD     DX,AX
 0E96 3B5402       960           CMP     DX,[SI+2]
 0E99 7619         961           JBE     STDAT4
 0E9B              962   
 0E9B              963   ; EXTEND RECORD LENGTH AND QUIT
 0E9B 895402       964           MOV     [SI+2],DX
 0E9E EB14         965           JMP     SHORT STDAT4
 0EA0              966   
 0EA0              967   ; SKIP TO NEXT RECORD
 0EA0 83C604       968   STDAT2: ADD     SI,4
 0EA3 E2E2         969           LOOP    STDAT1
 0EA5              970   
 0EA5              971   ; STORE NEW RECORD
 0EA5 8B163328     972   STDAT3: MOV     DX,[PC]
 0EA9 8914         973           MOV     [SI],DX
 0EAB 01C2         974           ADD     DX,AX
 0EAD 895402       975           MOV     [SI+2],DX
 0EB0 FF062D2A     976           INC     WORD [MAPBUF]
 0EB4 5E           977   STDAT4: POP     SI
 0EB5              978   
 0EB5              979   ; ADVANCE PC
 0EB5 01063328     980           ADD     [PC],AX
 0EB9 F8           981           CLC
 0EBA C3           982           RET
 0EBB              983   
 0EBB              984   ; --------------------------------
 0EBB              985   ; SCAN FOR DATA AREA ADDRESS
 0EBB 56           986   LDDAT:  PUSH    SI
 0EBC F6062D2802   987           TEST    BYTE [FUNC],2
 0EC1 7420         988           JZ      LDDAT3
 0EC3 BE2F2A       989           MOV     SI,MAPBUF+2
 0EC6 8B0E2D2A     990           MOV     CX,[MAPBUF]
 0ECA E317         991           JCXZ    LDDAT3
 0ECC A13328       992   LDDAT1: MOV     AX,[PC]
 0ECF              993   
 0ECF              994   ; CHECK IF PC WITHIN RECORD BOUNDS
 0ECF 3B04         995           CMP     AX,[SI]
 0ED1 720B         996           JB      LDDAT2
 0ED3 8B4402       997           MOV     AX,[SI+2]
 0ED6 2B063328     998           SUB     AX,[PC]
 0EDA 7202         999           JC      LDDAT2
 0EDC 5E           1000          POP     SI
R-ASSEMBLER VERSION 1.05C    GENERIC.ASM                  55

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0EDD C3           1001          RET
 0EDE              1002  
 0EDE              1003  ; SKIP TO NEXT RECORD
 0EDE 83C604       1004  LDDAT2: ADD     SI,4
 0EE1 E2E9         1005          LOOP    LDDAT1
 0EE3 5E           1006  LDDAT3: POP     SI
 0EE4 F9           1007          STC
 0EE5 C3           1008          RET
R-ASSEMBLER VERSION 1.05C    RA.ASM                       56

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0EE6              1676          INCLUDE 8086.ASM
R-ASSEMBLER VERSION 1.05C    8086.ASM                     57

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0EE6              1     ; --------------------------------
 0EE6              2     ; 8086-SPECIFIC LINE ASSEMBLER
 0EE6 31C0         3     ASMCMD: XOR     AX,AX
 0EE8 BF3D28       4             MOV     DI,WADJ
 0EEB B90800       5             MOV     CX,8
 0EEE FC           6             CLD
 0EEF F3AB         7             REP STOSW
 0EF1              8     
 0EF1              9     ; FIRST CHECK FOR MNEMONIC
 0EF1 BF021C       10            MOV     DI,MNMTBL
 0EF4 8036472820   11            XOR     BYTE [FLAGS],20H
 0EF9 E849FC       12            CALL    SL
 0EFC BF3219       13            MOV     DI,IHDL
 0EFF 7410         14            JZ      ASMCM1
 0F01              15    
 0F01              16    ; THEN CHECK FOR DIRECTIVE
 0F01 BFF81E       17            MOV     DI,DIRTBL
 0F04 8036472820   18            XOR     BYTE [FLAGS],20H
 0F09 E839FC       19            CALL    SL
 0F0C BF5219       20            MOV     DI,AHDL
 0F0F 7537         21            JNZ     ASMCM6
 0F11              22    
 0F11              23    ; CALL THE REQUISITE HANDLER
 0F11 86064128     24    ASMCM1: XCHG    AL,[OPCODE]
 0F15 86E0         25            XCHG    AL,AH
 0F17 D1E0         26            SHL     AX,1
 0F19 01C7         27            ADD     DI,AX
 0F1B FF15         28            CALL    [DI]
 0F1D              29    
 0F1D              30    ; WRITE OUTPUT ACCORDING TO
 0F1D              31    ; COMPONENT FLAGS
 0F1D 30D2         32    ASMCM2: XOR     DL,DL
 0F1F 86164728     33            XCHG    DL,[FLAGS]
 0F23 BF2D23       34            MOV     DI,BINBUF
 0F26 033E3128     35            ADD     DI,[BINLEN]
 0F2A 56           36            PUSH    SI
 0F2B 57           37            PUSH    DI
 0F2C BE3F28       38            MOV     SI,PREFIX
 0F2F FC           39            CLD
 0F30              40    
 0F30              41    ; SHIFT FLAG BITS ONE BY ONE
 0F30              42    ; INTO CARRY FLAG
 0F30 AC           43    ASMCM3: LODSB
 0F31 D0E2         44            SHL     DL,1
 0F33 7301         45            JNC     ASMCM4
 0F35 AA           46            STOSB
 0F36 75F8         47    ASMCM4: JNZ     ASMCM3
 0F38 59           48            POP     CX
 0F39 5E           49            POP     SI
 0F3A 87F9         50            XCHG    CX,DI
R-ASSEMBLER VERSION 1.05C    8086.ASM                     58

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0F3C 29F9         51            SUB     CX,DI
 0F3E 010E3128     52            ADD     [BINLEN],CX
 0F42 010E3328     53            ADD     [PC],CX
 0F46              54    
 0F46              55    ; SET ZERO FLAG TO SIGNAL
 0F46              56    ; SUCCESSFUL ASSEMBLY
 0F46 38C0         57    ASMCM5: CMP     AL,AL
 0F48 C3           58    ASMCM6: RET
 0F49              59    
 0F49              60    ; --------------------------------
 0F49              61    ; SCAN AND FLAG RESERVED WORD
 0F49 83FB02       62    SW:     CMP     BX,2
 0F4C 721F         63            JB      SW3
 0F4E              64    
 0F4E              65    ; DON'T BOTHER SCANNING IF IT
 0F4E              66    ; IS A NUMERIC
 0F4E 3C30         67            CMP     AL,30H
 0F50 7204         68            JB      SW1
 0F52 3C3A         69            CMP     AL,3AH
 0F54 7217         70            JB      SW3
 0F56              71    
 0F56              72    ; EVERY ONE OF THESE REGISTERS
 0F56              73    ; IS NEEDED FOR LATER PROCESSING
 0F56              74    ; AND SL DESTROYS THEM ALL
 0F56 51           75    SW1:    PUSH    CX
 0F57 52           76            PUSH    DX
 0F58 53           77            PUSH    BX
 0F59 56           78            PUSH    SI
 0F5A BFF81E       79            MOV     DI,DIRTBL
 0F5D E8E5FB       80            CALL    SL
 0F60              81    
 0F60              82    ; WE REALLY ONLY NEED THE ZERO
 0F60              83    ; FLAG FROM THIS OPERATION
 0F60 5E           84            POP     SI
 0F61 5B           85            POP     BX
 0F62 5A           86            POP     DX
 0F63 59           87            POP     CX
 0F64 7505         88            JNZ     SW2
 0F66              89    
 0F66              90    ; SET FLAG IF VALID USABLE
 0F66              91    ; KEYWORD
 0F66 80FC05       92            CMP     AH,5
 0F69 7402         93            JE      SW3
 0F6B 8A04         94    SW2:    MOV     AL,[SI]
 0F6D C3           95    SW3:    RET
 0F6E              96    
 0F6E              97    ; --------------------------------
 0F6E              98    ; READ NUMERIC CONSTANT
 0F6E 50           99    RNC:    PUSH    AX
 0F6F 51           100           PUSH    CX
R-ASSEMBLER VERSION 1.05C    8086.ASM                     59

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0F70 56           101           PUSH    SI
 0F71              102   
 0F71              103   ; DEFAULT TO DECIMAL
 0F71 B105         104           MOV     CL,5
 0F73 3C30         105           CMP     AL,30H
 0F75 7222         106           JB      RNC1
 0F77 3C3A         107           CMP     AL,3AH
 0F79 731E         108           JNB     RNC1
 0F7B              109   
 0F7B              110   ; SAVE END OF CONSTANT
 0F7B              111   ; FOR LATER
 0F7B 8D38         112           LEA     DI,[BX+SI]
 0F7D 4B           113           DEC     BX
 0F7E              114   
 0F7E              115   ; GET FINAL CHARACTER TO
 0F7E              116   ; CHECK FOR SIGIL
 0F7E 8A00         117           MOV     AL,[BX+SI]
 0F80 3C42         118           CMP     AL,42H
 0F82 741A         119           JE      RNC2
 0F84 3C48         120           CMP     AL,48H
 0F86 7419         121           JE      RNC16
 0F88 3C4F         122           CMP     AL,4FH
 0F8A 7414         123           JE      RNC8
 0F8C 3C51         124           CMP     AL,51H
 0F8E 7410         125           JE      RNC8
 0F90 43           126           INC     BX
 0F91              127   
 0F91              128   ; NUMERIC DIGIT MEANS DECIMAL
 0F91 3C30         129           CMP     AL,30H
 0F93 7204         130           JB      RNC1
 0F95 3C3A         131           CMP     AL,3AH
 0F97 7209         132           JB      RNC10
 0F99              133   
 0F99              134   ; RESTORE OLD LOCATION
 0F99 5E           135   RNC1:   POP     SI
 0F9A 59           136           POP     CX
 0F9B 58           137           POP     AX
 0F9C F9           138           STC
 0F9D C3           139           RET
 0F9E              140   
 0F9E              141   ; ROTATION COUNT SLIDE
 0F9E 49           142   RNC2:   DEC     CX
 0F9F 49           143   RNC4:   DEC     CX
 0FA0 49           144   RNC8:   DEC     CX
 0FA1 49           145   RNC16:  DEC     CX
 0FA2 E838FC       146   RNC10:  CALL    RN
 0FA5 75F2         147           JNZ     RNC1
 0FA7 5E           148           POP     SI
 0FA8              149   
 0FA8              150   ; SKIP PAST CONSTANT
R-ASSEMBLER VERSION 1.05C    8086.ASM                     60

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0FA8 89FE         151           MOV     SI,DI
 0FAA 59           152           POP     CX
 0FAB 58           153           POP     AX
 0FAC F8           154           CLC
 0FAD C3           155           RET
 0FAE              156   
 0FAE              157   ; --------------------------------
 0FAE              158   ; SCAN FOR LOW/HIGH BYTE OVERRIDE
 0FAE E898FF       159   RNM:    CALL    SW
 0FB1 7522         160           JNZ     RNM2
 0FB3 01DE         161           ADD     SI,BX
 0FB5              162   
 0FB5              163   ; PREPARE FOR OPERAND FLAG
 0FB5 B410         164           MOV     AH,10H
 0FB7 3C11         165           CMP     AL,11H
 0FB9 7411         166           JZ      RNM1
 0FBB B408         167           MOV     AH,8
 0FBD 3C12         168           CMP     AL,12H
 0FBF 740B         169           JZ      RNM1
 0FC1 B404         170           MOV     AH,4
 0FC3 3C13         171           CMP     AL,13H
 0FC5 7405         172           JZ      RNM1
 0FC7              173   
 0FC7              174   ; FALL-THROUGH KEYWORD ABUSE
 0FC7              175   ; ERROR DOUBLES AS DIRECTIVE
 0FC7              176   ; HANDLER
 0FC7 B00C         177   D5:     MOV     AL,0CH
 0FC9 E966FD       178           JMP     FAIL
 0FCC              179   
 0FCC              180   ; SHIFT BIT INTO POSITION AND
 0FCC              181   ; SET OPERAND FLAG
 0FCC 08E1         182   RNM1:   OR      CL,AH
 0FCE E80FFB       183           CALL    CC
 0FD1 7403         184           JZ      RNMER8
 0FD3 38C0         185           CMP     AL,AL
 0FD5 C3           186   RNM2:   RET
 0FD6              187   
 0FD6              188   ; MISSING OPERAND ERROR
 0FD6 B008         189   RNMER8: MOV     AL,8
 0FD8 E957FD       190           JMP     FAIL
 0FDB              191   
 0FDB              192   ; --------------------------------
 0FDB              193   ; SCAN FOR OPERAND SIZE OVERRIDE
 0FDB E802FB       194   BORW:   CALL    CC
 0FDE 74F6         195           JZ      RNMER8
 0FE0 E866FF       196           CALL    SW
 0FE3 7529         197           JNZ     BORW2
 0FE5 3C10         198           CMP     AL,10H
 0FE7 7462         199           JE      RA1
 0FE9 7323         200           JNB     BORW2
R-ASSEMBLER VERSION 1.05C    8086.ASM                     61

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 0FEB 01DE         201           ADD     SI,BX
 0FED BF3D28       202           MOV     DI,WADJ
 0FF0              203   
 0FF0              204   ; SHIFT TO DISTANCE BYTE IF
 0FF0              205   ; DISTANCE OVERRIDE
 0FF0 3C08         206           CMP     AL,8
 0FF2 7201         207           JC      BORW1
 0FF4 47           208           INC     DI
 0FF5 8605         209   BORW1:  XCHG    AL,[DI]
 0FF7 84C0         210           TEST    AL,AL
 0FF9 7550         211           JNZ     RA1
 0FFB E8E2FA       212           CALL    CC
 0FFE 740E         213           JZ      BORW2
 1000 E846FF       214           CALL    SW
 1003 7509         215           JNZ     BORW2
 1005 3C10         216           CMP     AL,10H
 1007 7542         217           JNZ     RA1
 1009              218   
 1009              219   ; SKIP AND SCAN
 1009 01DE         220           ADD     SI,BX
 100B E8D2FA       221           CALL    CC
 100E C3           222   BORW2:  RET
 100F              223   
 100F              224   ; --------------------------------
 100F              225   ; READ ARGUMENTS
 100F 31D2         226   RA:     XOR     DX,DX
 1011 31C9         227           XOR     CX,CX
 1013              228   
 1013              229   ; RESET SIZE
 1013 89163D28     230           MOV     [WADJ],DX
 1017 E8C1FF       231   RAS:    CALL    BORW
 101A 742C         232           JZ      RAIX
 101C              233   
 101C              234   ; BRACKET?  MEMORY?
 101C 3C5B         235           CMP     AL,5BH
 101E 7450         236           JZ      RAM
 1020              237   
 1020              238   ; REGISTER?
 1020 E87A01       239           CALL    SCREG
 1023 742B         240           JZ      RAR
 1025              241   
 1025              242   ; NOPE, IDENTIFIER OR CONSTANT
 1025 E821FD       243   RAL:    CALL    RE
 1028 BA0403       244           MOV     DX,304H
 102B 86CE         245           XCHG    DH,CL
 102D 20CE         246           AND     DH,CL
 102F 750A         247           JNZ     RAIW
 1031 84E4         248           TEST    AH,AH
 1033 7405         249           JZ      RAIB
 1035              250   
R-ASSEMBLER VERSION 1.05C    8086.ASM                     62

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1035              251   ; IF UPPER BYTE IS NONZERO,
 1035              252   ; SEE IF IT STILL FITS IN A
 1035              253   ; BYTE SIGNED
 1035 E802FB       254           CALL    AA
 1038 7501         255           JNZ     RAIW
 103A 49           256   RAIB:   DEC     CX
 103B A03D28       257   RAIW:   MOV     AL,[WADJ]
 103E 84C0         258           TEST    AL,AL
 1040 7406         259           JZ      RAIX
 1042 B102         260           MOV     CL,2
 1044 48           261           DEC     AX
 1045 7401         262           JZ      RAIX
 1047 41           263           INC     CX
 1048 E9C600       264   RAIX:   JMP     WARG
 104B B001         265   RA1:    MOV     AL,1
 104D E9E2FC       266           JMP     FAIL
 1050              267   
 1050              268   ; FIRST CHECK IF SEGMENT PREFIX
 1050 E81C01       269   RAR:    CALL    GSPR
 1053 73C2         270           JNC     RAS
 1055 88C6         271           MOV     DH,AL
 1057              272   
 1057              273   ; CHECK FOR SEGMENT REGISTER
 1057              274   ; AND SAVE FLAGS FOR LATER
 1057 3C10         275           CMP     AL,10H
 1059 9F           276           LAHF
 105A              277   
 105A              278   ; SET SIZE BY REGISTER NUMBER;
 105A              279   ; THIS USES THE CARRY FLAG TO
 105A              280   ; AVOID JUMPS
 105A 3C08         281           CMP     AL,8
 105C 18C0         282           SBB     AL,AL
 105E 0402         283           ADD     AL,2
 1060 A23D28       284           MOV     [WADJ],AL
 1063              285   
 1063              286   ; NOW ACT ON SEGMENT REGISTER
 1063 9E           287           SAHF
 1064 18C0         288           SBB     AL,AL
 1066 0402         289           ADD     AL,2
 1068              290   
 1068              291   ; SAVE REGISTER NUMBER AND SIZE
 1068 80E607       292           AND     DH,7
 106B 88C2         293           MOV     DL,AL
 106D E9A100       294           JMP     WARG
 1070              295   
 1070              296   ; HANDLE MEMORY REFERENCE
 1070 46           297   RAM:    INC     SI
 1071              298   
 1071              299   ; CHECK FOR SIZE OVERRIDE AGAIN
 1071 E867FF       300           CALL    BORW
R-ASSEMBLER VERSION 1.05C    8086.ASM                     63

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1074 31D2         301           XOR     DX,DX
 1076 30C9         302           XOR     CL,CL
 1078              303   
 1078              304   ; SIMPLE EXPRESSION EVALUATOR
 1078 E865FA       305   RAD:    CALL    CC
 107B 745E         306           JZ      RA8
 107D 3C5D         307           CMP     AL,5DH
 107F 745F         308           JZ      RADX
 1081 3C2B         309           CMP     AL,2BH
 1083 7419         310           JZ      RADP
 1085 3C2D         311           CMP     AL,2DH
 1087 7412         312           JZ      RADM
 1089              313   
 1089              314   ; IF NOT PLUS, MINUS, OR
 1089              315   ; BRACKET, IT'S AN OPERAND
 1089 E81101       316           CALL    SCREG
 108C 7416         317           JZ      RADR
 108E 52           318           PUSH    DX
 108F E8E8FC       319           CALL    GV
 1092 5A           320           POP     DX
 1093 72B6         321           JC      RA1
 1095 01064328     322           ADD     [DISP],AX
 1099 EBDD         323           JMP     SHORT RAD
 109B              324   
 109B              325   ; SET OPERATOR FLAG
 109B 80F180       326   RADM:   XOR     CL,80H
 109E 80E1BF       327   RADP:   AND     CL,0BFH
 10A1 46           328           INC     SI
 10A2 EBD4         329           JMP     SHORT RAD
 10A4              330   
 10A4              331   ; PREPARE REGISTER FLAGS
 10A4              332   ; BY ROTATING A BIT INTO
 10A4              333   ; POSITION AND PUTTING INTO
 10A4              334   ; OPERAND FLAGS, THEN TO BE
 10A4              335   ; USED IN THE BITMASK TO
 10A4              336   ; CHECK FOR DUPLICATES. SINCE
 10A4              337   ; THERE ARE ONLY FOUR VALID
 10A4              338   ; REGISTERS, THERE ARE ONLY
 10A4              339   ; FOUR BITS, SO A 16-BYTE
 10A4              340   ; LOOKUP TABLE ALONG WITH THE
 10A4              341   ; BIT MASK CAN BE USED TO
 10A4              342   ; TEST FOR ILLEGAL COMBINATIONS
 10A4 B201         343   RADR:   MOV     DL,1
 10A6 3C0B         344           CMP     AL,11
 10A8 7421         345           JZ      BXD
 10AA 3C0D         346           CMP     AL,13
 10AC 741B         347           JZ      BPD
 10AE 3C0E         348           CMP     AL,14
 10B0 7413         349           JZ      SID
 10B2 3C0F         350           CMP     AL,15
R-ASSEMBLER VERSION 1.05C    8086.ASM                     64

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 10B4 7411         351           JZ      DID
 10B6 E8B600       352           CALL    GSPR
 10B9 73BD         353           JNC     RAD
 10BB              354   
 10BB              355   ; IF THE REGISTER IS NEITHER A
 10BB              356   ; VALID INDEX OR SEGMENT,
 10BB              357   ; RAISE INVALID REGISTER ERROR
 10BB B00D         358   RA0D:   MOV     AL,0DH
 10BD E972FC       359           JMP     FAIL
 10C0              360   
 10C0              361   ; INVALID ADDRESSING ERROR
 10C0 B002         362   RA2:    MOV     AL,2
 10C2 E96DFC       363           JMP     FAIL
 10C5              364   
 10C5              365   ; BITMASK ROTATION SLIDE
 10C5 D0E2         366   SID:    SHL     DL,1
 10C7 D0E2         367   DID:    SHL     DL,1
 10C9 D0E2         368   BPD:    SHL     DL,1
 10CB              369   
 10CB              370   ; REGISTER USED?
 10CB 84D6         371   BXD:    TEST    DH,DL
 10CD 75F1         372           JNZ     RA2
 10CF F6C180       373           TEST    CL,80H
 10D2 75EC         374           JNZ     RA2
 10D4 08D6         375           OR      DH,DL
 10D6 80C940       376           OR      CL,40H
 10D9 EB9D         377           JMP     SHORT RAD
 10DB B008         378   RA8:    MOV     AL,8
 10DD E952FC       379           JMP     FAIL
 10E0              380   
 10E0              381   ; IS OPERAND THERE?  NO
 10E0              382   ; DANGLING OPERATORS?
 10E0 F6C140       383   RADX:   TEST    CL,40H
 10E3 74F6         384           JZ      RA8
 10E5 46           385           INC     SI
 10E6              386   
 10E6              387   ; CHECK FOR VALID REGISTER
 10E6              388   ; COMBINATION
 10E6 88F0         389           MOV     AL,DH
 10E8 BBCA1B       390           MOV     BX,RM
 10EB D7           391           XLATB
 10EC 3CFF         392           CMP     AL,0FFH
 10EE 74CB         393           JZ      RA0D
 10F0              394   
 10F0              395   ; ISOLATE IDENTIFIER FLAG
 10F0 B203         396           MOV     DL,3
 10F2 88C6         397           MOV     DH,AL
 10F4              398   
 10F4              399   ; NO REGISTERS USED?
 10F4 3C0E         400           CMP     AL,0EH
R-ASSEMBLER VERSION 1.05C    8086.ASM                     65

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 10F6 7417         401           JZ      RADW
 10F8              402   
 10F8              403   ; NAMED ADDRESS IS RESOLVED
 10F8              404   ; AS WORD-SIZED
 10F8 20D1         405           AND     CL,DL
 10FA 7513         406           JNZ     RADW
 10FC              407   
 10FC              408   ; NUMERIC VALUE IS EVALUATED
 10FC              409   ; FOR SIZE
 10FC A14328       410           MOV     AX,[DISP]
 10FF 85C0         411           TEST    AX,AX
 1101 7505         412           JNZ     RADB
 1103 80FE06       413           CMP     DH,6
 1106 7509         414           JNZ     WARG
 1108 B108         415   RADB:   MOV     CL,8
 110A E82DFA       416           CALL    AA
 110D 7402         417           JZ      WARG
 110F B10C         418   RADW:   MOV     CL,0CH
 1111              419   
 1111              420   ; SET ARGUMENT TYPE
 1111 080E4728     421   WARG:   OR      [FLAGS],CL
 1115 A13D28       422           MOV     AX,[WADJ]
 1118 B104         423           MOV     CL,4
 111A              424   
 111A              425   ; IF ONE OPERAND PRESENT,
 111A              426   ; ROTATE IT INTO POSITION
 111A F60649280F   427           TEST    BYTE [ARGS],0FH
 111F 7404         428           JZ      NARGS
 1121 D3C0         429           ROL     AX,CL
 1123 D3C2         430           ROL     DX,CL
 1125 09064B28     431   NARGS:  OR      [SIZES],AX
 1129 09164928     432           OR      [ARGS],DX
 112D E8B0F9       433           CALL    CC
 1130 7508         434           JNZ     COMMA
 1132 A14928       435           MOV     AX,[ARGS]
 1135 8A2E4B28     436           MOV     CH,[SIZES]
 1139 C3           437           RET
 113A              438   
 113A              439   ; CHECK FOR COMMA BETWEEN
 113A              440   ; OPERANDS
 113A 46           441   COMMA:  INC     SI
 113B 3C3A         442           CMP     AL,3AH
 113D 740C         443           JZ      COL
 113F 3C2C         444           CMP     AL,2CH
 1141 7527         445           JNZ     GSPR1
 1143 E89AF9       446           CALL    CC
 1146 7493         447           JZ      RA8
 1148 E9C4FE       448           JMP     RA
 114B              449   
 114B              450   ; COLON AS OPERAND IS A SPECIAL
R-ASSEMBLER VERSION 1.05C    8086.ASM                     66

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 114B              451   ; CASE TO DENOTE SEGMENT:OFFSET
 114B              452   ; ADDRESSING
 114B A04928       453   COL:    MOV     AL,[ARGS]
 114E 3C04         454           CMP     AL,4
 1150 7518         455           JNZ     GSPR1
 1152 A14528       456           MOV     AX,[IMM]
 1155 87064328     457           XCHG    AX,[DISP]
 1159 A34528       458           MOV     [IMM],AX
 115C E8EAFB       459           CALL    RE
 115F BA0403       460           MOV     DX,304H
 1162 20CE         461           AND     DH,CL
 1164 B10F         462           MOV     CL,0FH
 1166 EBA9         463           JMP     SHORT WARG
 1168 F9           464   GSPR0:  STC
 1169 C3           465           RET
 116A B001         466   GSPR1:  MOV     AL,1
 116C E9C3FB       467           JMP     FAIL
 116F              468   
 116F              469   ; --------------------------------
 116F              470   ; SCAN AND VERIFY SEGMENT PREFIX
 116F 3C10         471   GSPR:   CMP     AL,10H
 1171 72F5         472           JC      GSPR0
 1173 86E0         473           XCHG    AL,AH
 1175 E868F9       474           CALL    CC
 1178 86E0         475           XCHG    AL,AH
 117A 74EC         476           JZ      GSPR0
 117C              477   
 117C              478   ; A COLON IS REQUIRED FOR A
 117C              479   ; SEGMENT PREFIX
 117C 80FC3A       480           CMP     AH,3AH
 117F 75E7         481           JNZ     GSPR0
 1181 2403         482           AND     AL,3
 1183 D0E0         483           SHL     AL,1
 1185 D0E0         484           SHL     AL,1
 1187 D0E0         485           SHL     AL,1
 1189 0C26         486           OR      AL,26H
 118B 46           487   GSPR2:  INC     SI
 118C A24028       488           MOV     [SEGPRE],AL
 118F A04728       489           MOV     AL,[FLAGS]
 1192 A840         490           TEST    AL,40H
 1194 75D4         491           JNZ     GSPR1
 1196 0C40         492           OR      AL,40H
 1198 A24728       493           MOV     [FLAGS],AL
 119B F8           494           CLC
 119C C3           495           RET
 119D              496   
 119D              497   ; --------------------------------
 119D              498   ; SCAN REGISTER AND RETURN
 119D              499   ; REGISTER INDEX
 119D 51           500   SCREG:  PUSH    CX
R-ASSEMBLER VERSION 1.05C    8086.ASM                     67

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 119E 83FB02       501           CMP     BX,2
 11A1 7515         502           JNZ     SCREG0
 11A3 8B04         503           MOV     AX,[SI]
 11A5 BFDA1B       504           MOV     DI,REGS
 11A8 B91400       505           MOV     CX,14H
 11AB FC           506           CLD
 11AC F2AF         507           REPNE SCASW
 11AE 7508         508           JNZ     SCREG0
 11B0 01DE         509           ADD     SI,BX
 11B2 B013         510           MOV     AL,13H
 11B4 28C8         511           SUB     AL,CL
 11B6 31DB         512           XOR     BX,BX
 11B8 59           513   SCREG0: POP     CX
 11B9 C3           514           RET
 11BA              515   
 11BA              516   ; --------------------------------
 11BA              517   ; ADJUST AND CHECK OPERAND
 11BA              518   ; SIZE CORRESPONDENCE
 11BA 50           519   WA:     PUSH    AX
 11BB 51           520           PUSH    CX
 11BC              521   
 11BC              522   ; SPLIT ARGUMENT SIZE NYBBLES
 11BC              523   ; INTO BYTES
 11BC 24F0         524           AND     AL,0F0H
 11BE 88EC         525           MOV     AH,CH
 11C0 86E8         526           XCHG    AL,CH
 11C2 D2EC         527           SHR     AH,CL
 11C4              528   
 11C4              529   ; MASK OUT ARGUMENTS
 11C4 250F0F       530           AND     AX,0F0FH
 11C7 7422         531           JZ      WAZ
 11C9 84C0         532           TEST    AL,AL
 11CB 7417         533           JZ      WALZ
 11CD 84E4         534           TEST    AH,AH
 11CF 7415         535           JZ      WAHZ
 11D1 38E0         536           CMP     AL,AH
 11D3 7411         537           JZ      WAHZ
 11D5 80FD40       538           CMP     CH,40H
 11D8 740C         539           JZ      WAHZ
 11DA              540   
 11DA              541   ; OPERAND SIZE MISMATCH ERROR
 11DA B006         542   WA6:    MOV     AL,6
 11DC E953FB       543           JMP     FAIL
 11DF              544   
 11DF              545   ; INVALID OPERAND ERROR
 11DF 30C0         546   WA0:    XOR     AL,AL
 11E1 E94EFB       547           JMP     FAIL
 11E4              548   
 11E4              549   ; ONLY ONE OPERAND IS EXPLICIT
 11E4 88E0         550   WALZ:   MOV     AL,AH
R-ASSEMBLER VERSION 1.05C    8086.ASM                     68

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 11E6 3C03         551   WAHZ:   CMP     AL,3
 11E8 73F5         552           JNC     WA0
 11EA 48           553           DEC     AX
 11EB              554   
 11EB              555   ; EQUAL OR NO EXPLICIT KNOWN
 11EB              556   ; OPERAND SIZE
 11EB A23D28       557   WAZ:    MOV     [WADJ],AL
 11EE F606472802   558           TEST    BYTE [FLAGS],2
 11F3 740E         559           JZ      WAE
 11F5 84C0         560           TEST    AL,AL
 11F7 740D         561           JZ      WAB
 11F9 80FC01       562           CMP     AH,1
 11FC 7408         563           JZ      WAB
 11FE 800E472801   564           OR      BYTE [FLAGS],1
 1203 59           565   WAE:    POP     CX
 1204 58           566           POP     AX
 1205 C3           567           RET
 1206              568   
 1206              569   ; FITS IN A BYTE?
 1206 80264728FE   570   WAB:    AND     BYTE [FLAGS],0FEH
 120B F6062D2801   571           TEST    BYTE [FUNC],1
 1210 75F1         572           JNZ     WAE
 1212 A14528       573           MOV     AX,[IMM]
 1215 84E4         574           TEST    AH,AH
 1217 74EA         575           JZ      WAE
 1219 E81EF9       576           CALL    AA
 121C 74E5         577           JZ      WAE
 121E              578   
 121E              579   ; CONSTANT TOO LARGE ERROR
 121E B007         580   WA7:    MOV     AL,7
 1220 E90FFB       581           JMP     FAIL
 1223              582   
 1223              583   ; --------------------------------
 1223              584   ; GENERATE VALID MODIFIER BYTE
 1223              585   ; BASED ON ENCODED OPERANDS
 1223 800E472810   586   MMODRM: OR      BYTE [FLAGS],10H
 1228 A14928       587           MOV     AX,[ARGS]
 122B B104         588           MOV     CL,4
 122D 3C11         589           CMP     AL,11H
 122F 745C         590           JZ      MREGR
 1231 3C12         591           CMP     AL,12H
 1233 7456         592           JZ      MREGL
 1235 3C13         593           CMP     AL,13H
 1237 742E         594           JZ      MMEMR
 1239 3C21         595           CMP     AL,21H
 123B 7450         596           JZ      MREGR
 123D 3C23         597           CMP     AL,23H
 123F 7426         598           JZ      MMEMR
 1241 3C31         599           CMP     AL,31H
 1243 7420         600           JZ      MMEML
R-ASSEMBLER VERSION 1.05C    8086.ASM                     69

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1245 3C32         601           CMP     AL,32H
 1247 741C         602           JZ      MMEML
 1249              603   
 1249              604   ; ONLY ONE OPERAND?
 1249 250F0F       605           AND     AX,0F0FH
 124C 3C01         606           CMP     AL,1
 124E 743D         607           JZ      MREGR
 1250 3C03         608           CMP     AL,3
 1252 7413         609           JZ      MMEMR
 1254 A14928       610           MOV     AX,[ARGS]
 1257 D3C8         611           ROR     AX,CL
 1259 250F0F       612           AND     AX,0F0FH
 125C 3C01         613           CMP     AL,1
 125E 742D         614           JZ      MREGR
 1260 3C03         615           CMP     AL,3
 1262 7403         616           JZ      MMEMR
 1264 C3           617           RET
 1265              618   
 1265              619   ; R/M DESTINATION:
 1265              620   ; TO BE ROTATED INTO POSITION
 1265 D2CC         621   MMEML:  ROR     AH,CL
 1267 88E0         622   MMEMR:  MOV     AL,AH
 1269 50           623           PUSH    AX
 126A 250770       624           AND     AX,7007H
 126D D0CC         625           ROR     AH,1
 126F 08E0         626           OR      AL,AH
 1271 08064228     627           OR      [MODRM],AL
 1275 58           628           POP     AX
 1276 2408         629           AND     AL,8
 1278 7522         630           JNZ     MM0
 127A              631   
 127A              632   ; SET MODIFIER BITS ACCORDING
 127A              633   ; TO DISPLACEMENT
 127A A04728       634           MOV     AL,[FLAGS]
 127D 240C         635           AND     AL,0CH
 127F 741B         636           JZ      MM0
 1281 B440         637           MOV     AH,40H
 1283 2404         638           AND     AL,4
 1285 7411         639           JZ      MM8
 1287 D0E4         640           SHL     AH,1
 1289 EB0D         641           JMP     SHORT MM8
 128B              642   
 128B              643   ; SEGMENT REGISTER DESTINATION
 128B              644   ; ALSO TO BE ROTATED
 128B D2CC         645   MREGL:  ROR     AH,CL
 128D 88E0         646   MREGR:  MOV     AL,AH
 128F D0CC         647           ROR     AH,1
 1291 250738       648           AND     AX,3807H
 1294              649   
 1294              650   ; SET REGISTER MODIFIER
R-ASSEMBLER VERSION 1.05C    8086.ASM                     70

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1294 0CC0         651           OR      AL,0C0H
 1296 08C4         652           OR      AH,AL
 1298 08264228     653   MM8:    OR      [MODRM],AH
 129C C3           654   MM0:    RET
 129D              655   
 129D              656   ; --------------------------------
 129D              657   ; SHIFT AND ROTATE HANDLER
 129D E86FFD       658   G2:     CALL    RA
 12A0              659   
 12A0              660   ; REMEMBER DETECTED ARGUMENTS
 12A0 50           661           PUSH    AX
 12A1              662   
 12A1              663   ; NEGLECT THEM FOR PURPOSES OF
 12A1              664   ; GENERATING A MODIFIER
 12A1 250F0F       665           AND     AX,0F0FH
 12A4 A34928       666           MOV     [ARGS],AX
 12A7              667   
 12A7              668   ; MODIFIER EXTENSION IS IN TABLE
 12A7 B0D0         669           MOV     AL,0D0H
 12A9 86064128     670           XCHG    AL,[OPCODE]
 12AD A24228       671           MOV     [MODRM],AL
 12B0              672   
 12B0              673   ; GET OPERATION SIZE
 12B0 88E8         674           MOV     AL,CH
 12B2 240F         675           AND     AL,0FH
 12B4 7407         676           JZ      G2B
 12B6 48           677           DEC     AX
 12B7 7404         678           JZ      G2B
 12B9 08064128     679           OR      [OPCODE],AL
 12BD              680   
 12BD              681   ; HANDLE DETECTED OPERANDS
 12BD 58           682   G2B:    POP     AX
 12BE              683   
 12BE              684   ; ALLOW NON-CANON SINGLE
 12BE              685   ; OPERAND FORM
 12BE 25F0F0       686           AND     AX,0F0F0H
 12C1 741B         687           JZ      G2N
 12C3              688   
 12C3              689   ; OTHERWISE SECOND OPERAND MUST
 12C3              690   ; BE EITHER CL OR 1
 12C3 3D1010       691           CMP     AX,1010H
 12C6 7411         692           JZ      G2CL
 12C8 3C40         693           CMP     AL,40H
 12CA 7508         694           JNZ     G2F
 12CC A14528       695           MOV     AX,[IMM]
 12CF 3D0100       696           CMP     AX,1
 12D2 740A         697           JZ      G2N
 12D4              698   
 12D4              699   ; SYNTAX ERROR
 12D4 B001         700   G2F:    MOV     AL,1
R-ASSEMBLER VERSION 1.05C    8086.ASM                     71

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 12D6 E959FA       701           JMP     FAIL
 12D9 800E412802   702   G2CL:   OR      BYTE [OPCODE],2
 12DE 80264728FC   703   G2N:    AND     BYTE [FLAGS],0FCH
 12E3 E93DFF       704           JMP     MMODRM
 12E6              705   
 12E6              706   ; --------------------------------
 12E6              707   ; ARITHMETIC/LOGIC HANDLER
 12E6 E826FD       708   G1:     CALL    RA
 12E9 E8CEFE       709           CALL    WA
 12EC B504         710           MOV     CH,4
 12EE 80E40F       711           AND     AH,0FH
 12F1 3D4100       712           CMP     AX,41H
 12F4 7448         713           JZ      G1AI
 12F6 3C11         714           CMP     AL,11H
 12F8 743A         715           JZ      G1MR
 12FA 3C13         716           CMP     AL,13H
 12FC 7436         717           JZ      G1MR
 12FE 3C31         718           CMP     AL,31H
 1300 742D         719           JZ      G1RM
 1302 3C41         720           CMP     AL,41H
 1304 7404         721           JZ      G1MI
 1306 3C43         722           CMP     AL,43H
 1308 753E         723           JNZ     ERR0
 130A              724   
 130A              725   ; 80-83 GROUP
 130A B080         726   G1MI:   MOV     AL,80H
 130C 86064128     727           XCHG    AL,[OPCODE]
 1310 08064228     728           OR      [MODRM],AL
 1314              729   
 1314              730   ; IF IMMEDIATE FITS IN ONE BYTE
 1314              731   ; USE SPECIAL 82 OPCODES
 1314 A14528       732           MOV     AX,[IMM]
 1317 E820F8       733           CALL    AA
 131A 7518         734           JNZ     G1MR
 131C A04B28       735           MOV     AL,[SIZES]
 131F 3C22         736           CMP     AL,22H
 1321 7411         737           JZ      G1MR
 1323 80264728FE   738           AND     BYTE [FLAGS],0FEH
 1328 F6063D28FF   739           TEST    BYTE [WADJ],0FFH
 132D 7405         740           JZ      G1MR
 132F 800E412802   741   G1RM:   OR      BYTE [OPCODE],2
 1334 A03D28       742   G1MR:   MOV     AL,[WADJ]
 1337 08064128     743           OR      [OPCODE],AL
 133B E9E5FE       744           JMP     MMODRM
 133E A03D28       745   G1AI:   MOV     AL,[WADJ]
 1341 08E8         746           OR      AL,CH
 1343 08064128     747           OR      [OPCODE],AL
 1347 C3           748           RET
 1348 B000         749   ERR0:   MOV     AL,0
 134A E9E5F9       750           JMP     FAIL
R-ASSEMBLER VERSION 1.05C    8086.ASM                     72

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 134D              751   
 134D              752   ; --------------------------------
 134D              753   ; ADVANCED ARITHMETIC/LOGIC
 134D              754   ; TEST / MUL / DIV / NEG / NOT
 134D E8BFFC       755   G3:     CALL    RA
 1350 E867FE       756           CALL    WA
 1353 B5A8         757           MOV     CH,0A8H
 1355 80E40F       758           AND     AH,0FH
 1358 3D4100       759           CMP     AX,41H
 135B 74E1         760           JZ      G1AI
 135D B5F6         761           MOV     CH,0F6H
 135F 3C01         762           CMP     AL,1
 1361 741A         763           JZ      G3R
 1363 3C03         764           CMP     AL,3
 1365 7416         765           JZ      G3R
 1367 3C41         766           CMP     AL,41H
 1369 7412         767           JZ      G3R
 136B 3C43         768           CMP     AL,43H
 136D 740E         769           JZ      G3R
 136F B584         770           MOV     CH,84H
 1371 3C11         771           CMP     AL,11H
 1373 7408         772           JZ      G3R
 1375 3C13         773           CMP     AL,13H
 1377 7404         774           JZ      G3R
 1379 3C31         775           CMP     AL,31H
 137B 75CB         776           JNZ     ERR0
 137D A03D28       777   G3R:    MOV     AL,[WADJ]
 1380 08E8         778           OR      AL,CH
 1382 86064128     779           XCHG    AL,[OPCODE]
 1386 08064228     780           OR      [MODRM],AL
 138A E996FE       781           JMP     MMODRM
 138D              782   
 138D              783   ; --------------------------------
 138D              784   ; SINGLE OPERAND [GENERALLY]
 138D              785   ; ONE-BYTE INSTRUCTIONS
 138D E87FFC       786   G4:     CALL    RA
 1390 E827FE       787           CALL    WA
 1393 3C02         788           CMP     AL,2
 1395 7438         789           JZ      G4S
 1397 3C03         790           CMP     AL,3
 1399 7416         791           JZ      G4M
 139B 3C01         792           CMP     AL,1
 139D 75A9         793           JNZ     ERR0
 139F 80FD02       794           CMP     CH,2
 13A2 720D         795           JC      G4M
 13A4 A04128       796           MOV     AL,[OPCODE]
 13A7 2418         797           AND     AL,18H
 13A9 0C40         798           OR      AL,40H
 13AB 08E0         799           OR      AL,AH
 13AD A24128       800           MOV     [OPCODE],AL
R-ASSEMBLER VERSION 1.05C    8086.ASM                     73

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 13B0 C3           801           RET
 13B1              802   
 13B1              803   ; R/M OPERANDS USE MULTI-BYTE
 13B1              804   ; EXTENSION OPCODES; POP IS A
 13B1              805   ; SPECIAL CASE SCENARIO
 13B1 A04128       806   G4M:    MOV     AL,[OPCODE]
 13B4 3C38         807           CMP     AL,38H
 13B6 B88F00       808           MOV     AX,8FH
 13B9 740E         809           JZ      G4P
 13BB A03D28       810           MOV     AL,[WADJ]
 13BE 84ED         811           TEST    CH,CH
 13C0 7501         812           JNZ     G4W
 13C2 40           813           INC     AX
 13C3              814   
 13C3              815   ; EVERYTHING ELSE GOES TO FE/FF
 13C3 0CFE         816   G4W:    OR      AL,0FEH
 13C5 8A264128     817           MOV     AH,[OPCODE]
 13C9 A34128       818   G4P:    MOV     [OPCODE],AX
 13CC E954FE       819           JMP     MMODRM
 13CF              820   
 13CF              821   ; ROTATE BY 3, AS CX IS
 13CF              822   ; ALREADY 4
 13CF 49           823   G4S:    DEC     CX
 13D0 D2E4         824           SHL     AH,CL
 13D2 A04128       825           MOV     AL,[OPCODE]
 13D5              826   
 13D5              827   ; SEG PSEUDOINSTRUCTION IS A
 13D5              828   ; SPECIAL CASE
 13D5 3C26         829           CMP     AL,26H
 13D7 7404         830           JZ      G4PSR
 13D9 D2E8         831           SHR     AL,CL
 13DB 2401         832           AND     AL,1
 13DD 08E0         833   G4PSR:  OR      AL,AH
 13DF 0C06         834           OR      AL,6
 13E1 A24128       835           MOV     [OPCODE],AL
 13E4 C3           836           RET
 13E5              837   
 13E5              838   ; --------------------------------
 13E5              839   ; NEAR AND FAR JUMPS AND CALLS
 13E5 E827FC       840   G6:     CALL    RA
 13E8              841   
 13E8              842   ; INDIRECT VIA REGISTER
 13E8 3C01         843           CMP     AL,1
 13EA 740C         844           JZ      G6R
 13EC              845   
 13EC              846   ; DIRECT LABEL/CONSTANT
 13EC 3C04         847           CMP     AL,4
 13EE 743B         848           JZ      G6I
 13F0              849   
 13F0              850   ; EXPLICITLY SPECIFIED
R-ASSEMBLER VERSION 1.05C    8086.ASM                     74

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 13F0              851   ; SEGMENT:OFFSET ADDRESSING
 13F0 3C44         852           CMP     AL,44H
 13F2 744A         853           JZ      G6IF
 13F4              854   
 13F4              855   ; INDIRECT VIA MEMORY
 13F4 3C03         856           CMP     AL,3
 13F6 756E         857           JNZ     G6F0
 13F8 A04C28       858   G6R:    MOV     AL,[SIZES+1]
 13FB 3C08         859           CMP     AL,8
 13FD 7467         860           JZ      G6F0
 13FF 3C09         861           CMP     AL,9
 1401 7417         862           JZ      G6RN
 1403 3C0A         863           CMP     AL,0AH
 1405 740E         864           JZ      G6RF
 1407              865   
 1407              866   ; IF NO DISTANCE OVERRIDE IS
 1407              867   ; SPECIFIED, CHECK FOR SIZE
 1407              868   ; OVERRIDES
 1407 88E8         869           MOV     AL,CH
 1409 3C00         870           CMP     AL,0
 140B 740D         871           JZ      G6RN
 140D 3C02         872           CMP     AL,2
 140F 7409         873           JZ      G6RN
 1411 3C03         874           CMP     AL,3
 1413 7551         875           JNZ     G6F0
 1415              876   
 1415              877   ; AT LEAST SOME ENCODING IS
 1415              878   ; SUFFICIENTLY REGULAR
 1415 800E422808   879   G6RF:   OR      BYTE [MODRM],8
 141A B1FF         880   G6RN:   MOV     CL,0FFH
 141C 860E4128     881           XCHG    CL,[OPCODE]
 1420 B010         882           MOV     AL,10H
 1422 D2E0         883           SHL     AL,CL
 1424 08064228     884           OR      [MODRM],AL
 1428 E9F8FD       885           JMP     MMODRM
 142B              886   
 142B              887   ; FAR AND SHORT JUMPS NEED
 142B              888   ; EXPLICIT OVERRIDES SINCE NEAR
 142B              889   ; JUMP IS THE DEFAULT
 142B A04C28       890   G6I:    MOV     AL,[SIZES+1]
 142E 3C00         891           CMP     AL,0
 1430 7439         892           JZ      G6IN
 1432 3C08         893           CMP     AL,8
 1434 7426         894           JZ      G6IS
 1436 3C09         895           CMP     AL,9
 1438 7431         896           JZ      G6IN
 143A 3C0A         897           CMP     AL,0AH
 143C 7528         898           JNZ     G6F0
 143E              899   
 143E              900   ; EXPLICIT SEGMENT:OFFSET FORM
R-ASSEMBLER VERSION 1.05C    8086.ASM                     75

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 143E              901   ; NEEDS NO OVERRIDES
 143E A14528       902   G6IF:   MOV     AX,[IMM]
 1441 87064328     903           XCHG    AX,[DISP]
 1445 A34528       904           MOV     [IMM],AX
 1448 800E47280F   905           OR      BYTE [FLAGS],0FH
 144D B8EA9A       906           MOV     AX,9AEAH
 1450 86264128     907           XCHG    AH,[OPCODE]
 1454 84E4         908           TEST    AH,AH
 1456 7403         909           JZ      G5X
 1458 A24128       910           MOV     [OPCODE],AL
 145B C3           911   G5X:    RET
 145C              912   
 145C              913   ; JMP SHORT OVERLAPS WITH OTHER
 145C              914   ; SHORT JUMPS
 145C B0EB         915   G6IS:   MOV     AL,0EBH
 145E 86064128     916           XCHG    AL,[OPCODE]
 1462 84C0         917           TEST    AL,AL
 1464 7520         918           JNZ     G5S
 1466 B000         919   G6F0:   MOV     AL,0
 1468 E9C7F8       920           JMP     FAIL
 146B              921   
 146B              922   ; REGULAR NEAR JUMP AS WE KNOW
 146B A14528       923   G6IN:   MOV     AX,[IMM]
 146E 2B063328     924           SUB     AX,[PC]
 1472 2D0300       925           SUB     AX,3
 1475 A34528       926           MOV     [IMM],AX
 1478 800E472803   927           OR      BYTE [FLAGS],3
 147D 800E4128E8   928           OR      BYTE [OPCODE],0E8H
 1482 C3           929           RET
 1483              930   
 1483              931   ; --------------------------------
 1483              932   ; SHORT, TYPICALLY CONDITIONAL
 1483              933   ; BRANCHES
 1483 E889FB       934   G5:     CALL    RA
 1486              935   
 1486              936   ; ONLY ONE TRAILING BYTE
 1486 80264728FE   937   G5S:    AND     BYTE [FLAGS],0FEH
 148B              938   
 148B              939   ; CONVERT ABSOLUTE ADDRESS TO
 148B              940   ; RELATIVE VALUE
 148B A14528       941           MOV     AX,[IMM]
 148E 2B063328     942           SUB     AX,[PC]
 1492 2D0200       943           SUB     AX,2
 1495 A34528       944           MOV     [IMM],AX
 1498              945   
 1498              946   ; NEGLECT TO CHECK JUMP LENGTH
 1498              947   ; UNTIL EVALUATION
 1498 F6062D2802   948           TEST    BYTE [FUNC],2
 149D 74BC         949           JZ      G5X
 149F E898F6       950           CALL    AA
R-ASSEMBLER VERSION 1.05C    8086.ASM                     76

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 14A2 74B7         951           JZ      G5X
 14A4              952   
 14A4              953   ; JUMP OUT OF RANGE ERROR
 14A4 B005         954           MOV     AL,5
 14A6 E989F8       955           JMP     FAIL
 14A9              956   
 14A9              957   ; --------------------------------
 14A9              958   ; LDS / LEA / LES DESERVE THEIR
 14A9              959   ; OWN LITTLE CATEGORY SO WE
 14A9              960   ; NEEDN'T DEAL WITH MORE KLUDGES
 14A9 E863FB       961   G8:     CALL    RA
 14AC 3C31         962           CMP     AL,31H
 14AE 75B6         963           JNZ     G6F0
 14B0 E970FD       964           JMP     MMODRM
 14B3              965   
 14B3              966   ; --------------------------------
 14B3              967   ; MOV HANDLER
 14B3 E859FB       968   G9:     CALL    RA
 14B6 E801FD       969           CALL    WA
 14B9 30ED         970           XOR     CH,CH
 14BB              971   
 14BB              972   ; THESE ARE BASICALLY LDA/STA
 14BB 3D31E0       973           CMP     AX,0E031H
 14BE 7437         974           JZ      G9A
 14C0 3D130E       975           CMP     AX,0E13H
 14C3 7430         976           JZ      G9A2
 14C5 3C11         977           CMP     AL,11H
 14C7 7458         978           JZ      G9MR
 14C9 3C13         979           CMP     AL,13H
 14CB 7454         980           JZ      G9MR
 14CD 3C21         981           CMP     AL,21H
 14CF 7444         982           JZ      G9SR
 14D1 3C23         983           CMP     AL,23H
 14D3 7440         984           JZ      G9SR
 14D5 3C43         985           CMP     AL,43H
 14D7 7443         986           JZ      G9MI
 14D9              987   
 14D9              988   ; DIRECTION CHANGE
 14D9 B502         989           MOV     CH,2
 14DB 3C12         990           CMP     AL,12H
 14DD 7436         991           JZ      G9SR
 14DF 3C31         992           CMP     AL,31H
 14E1 743E         993           JZ      G9MR
 14E3 3C32         994           CMP     AL,32H
 14E5 742E         995           JZ      G9SR
 14E7              996   
 14E7              997   ; SINGLE BYTE MOVES
 14E7 B5B0         998           MOV     CH,0B0H
 14E9 3C41         999           CMP     AL,41H
 14EB 7569         1000          JNZ     G9F0
R-ASSEMBLER VERSION 1.05C    8086.ASM                     77

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 14ED A03D28       1001          MOV     AL,[WADJ]
 14F0 49           1002          DEC     CX
 14F1 D2E0         1003          SHL     AL,CL
 14F3 EB18         1004          JMP     SHORT G9S
 14F5 B502         1005  G9A2:   MOV     CH,2
 14F7 A14328       1006  G9A:    MOV     AX,[DISP]
 14FA A34528       1007          MOV     [IMM],AX
 14FD A04728       1008          MOV     AL,[FLAGS]
 1500 25E300       1009          AND     AX,0E3H
 1503 0C03         1010          OR      AL,3
 1505 A24728       1011          MOV     [FLAGS],AL
 1508 A03D28       1012          MOV     AL,[WADJ]
 150B 0CA0         1013          OR      AL,0A0H
 150D 08E0         1014  G9S:    OR      AL,AH
 150F 08E8         1015          OR      AL,CH
 1511 A24128       1016          MOV     [OPCODE],AL
 1514 C3           1017          RET
 1515 B08C         1018  G9SR:   MOV     AL,8CH
 1517 A24128       1019          MOV     [OPCODE],AL
 151A EB08         1020          JMP     SHORT G9M
 151C B0C6         1021  G9MI:   MOV     AL,0C6H
 151E A24128       1022          MOV     [OPCODE],AL
 1521 A03D28       1023  G9MR:   MOV     AL,[WADJ]
 1524 08E8         1024  G9M:    OR      AL,CH
 1526 08064128     1025          OR      [OPCODE],AL
 152A E9F6FC       1026          JMP     MMODRM
 152D              1027  
 152D              1028  ; --------------------------------
 152D              1029  ; ESC IS A MESSY AND WEIRD
 152D              1030  ; INSTRUCTION
 152D E8DFFA       1031  G0EH:   CALL    RA
 1530 3C14         1032          CMP     AL,14H
 1532 7404         1033          JZ      G0EHRM
 1534 3C34         1034          CMP     AL,34H
 1536 751E         1035          JNZ     G9F0
 1538 A14528       1036  G0EHRM: MOV     AX,[IMM]
 153B 3D3F00       1037          CMP     AX,3FH
 153E 7733         1038          JA      G0CHF
 1540 88C4         1039          MOV     AH,AL
 1542 49           1040          DEC     CX
 1543 D2C8         1041          ROR     AL,CL
 1545 250707       1042          AND     AX,707H
 1548 D2C4         1043          ROL     AH,CL
 154A 09064128     1044          OR      [OPCODE],AX
 154E 80264728FC   1045          AND     BYTE [FLAGS],0FCH
 1553 E9CDFC       1046          JMP     MMODRM
 1556 B000         1047  G9F0:   MOV     AL,0
 1558 E9D7F7       1048          JMP     FAIL
 155B              1049  
 155B              1050  ; --------------------------------
R-ASSEMBLER VERSION 1.05C    8086.ASM                     78

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 155B              1051  ; AAM AND AAD
 155B E882F5       1052  G7:     CALL    CC
 155E 750C         1053          JNZ     G7A
 1560              1054  
 1560              1055  ; NO OPERAND MEANS IMPLICIT 10
 1560 B80A00       1056          MOV     AX,0AH
 1563 A34528       1057          MOV     [IMM],AX
 1566 800E472802   1058  G7B:    OR      BYTE [FLAGS],2
 156B C3           1059          RET
 156C              1060  
 156C              1061  ; OTHERWISE PROCESS OPERAND
 156C E8DAF7       1062  G7A:    CALL    RE
 156F 84E4         1063          TEST    AH,AH
 1571 74F3         1064          JZ      G7B
 1573 B007         1065  G0CHF:  MOV     AL,7
 1575 E9BAF7       1066          JMP     FAIL
 1578              1067  
 1578              1068  ; --------------------------------
 1578              1069  ; INTERRUPT CALL
 1578 E8CEF7       1070  G0CH:   CALL    RE
 157B              1071  
 157B              1072  ; INT 3 IS ITS OWN OPCODE
 157B 3D0300       1073          CMP     AX,3
 157E 740A         1074          JZ      G0CH3
 1580 84E4         1075          TEST    AH,AH
 1582 75EF         1076          JNZ     G0CHF
 1584 800E472802   1077          OR      BYTE [FLAGS],2
 1589 C3           1078          RET
 158A FE0E4128     1079  G0CH3:  DEC     BYTE [OPCODE]
 158E C3           1080          RET
 158F              1081  
 158F              1082  ; --------------------------------
 158F              1083  ; IN / OUT
 158F E87DFA       1084  G0DH:   CALL    RA
 1592 80264728FE   1085          AND     BYTE [FLAGS],0FEH
 1597              1086  
 1597              1087  ; EXPLICIT PORT FORM
 1597 3C41         1088          CMP     AL,41H
 1599 7415         1089          JZ      G0DHI
 159B 3C14         1090          CMP     AL,14H
 159D 740F         1091          JZ      G0DHO
 159F 800E412808   1092          OR      BYTE [OPCODE],8
 15A4              1093  
 15A4              1094  ; INDIRECT VIA DX
 15A4 3D1120       1095          CMP     AX,2011H
 15A7 7407         1096          JZ      G0DHI
 15A9 3D1102       1097          CMP     AX,211H
 15AC 75A8         1098          JNZ     G9F0
 15AE D2ED         1099  G0DHO:  SHR     CH,CL
 15B0 88E8         1100  G0DHI:  MOV     AL,CH
R-ASSEMBLER VERSION 1.05C    8086.ASM                     79

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 15B2 240F         1101          AND     AL,0FH
 15B4 3C02         1102          CMP     AL,2
 15B6 7204         1103          JC      G0DH0
 15B8 FE064128     1104          INC     BYTE [OPCODE]
 15BC C3           1105  G0DH0:  RET
 15BD              1106  
 15BD              1107  ; --------------------------------
 15BD              1108  ; XCHG
 15BD E84FFA       1109  G0FH:   CALL    RA
 15C0 E8F7FB       1110          CALL    WA
 15C3 3C13         1111          CMP     AL,13H
 15C5 7419         1112          JZ      G0FHM
 15C7 3C31         1113          CMP     AL,31H
 15C9 7415         1114          JZ      G0FHM
 15CB 3C11         1115          CMP     AL,11H
 15CD 7587         1116          JNZ     G9F0
 15CF A03D28       1117          MOV     AL,[WADJ]
 15D2 A8FF         1118          TEST    AL,0FFH
 15D4 740A         1119          JZ      G0FHM
 15D6 88E0         1120          MOV     AL,AH
 15D8 A80F         1121          TEST    AL,0FH
 15DA 740F         1122          JZ      G0FHAR
 15DC A8F0         1123          TEST    AL,0F0H
 15DE 740D         1124          JZ      G0FHRA
 15E0 A03D28       1125  G0FHM:  MOV     AL,[WADJ]
 15E3 0C86         1126          OR      AL,86H
 15E5 A24128       1127          MOV     [OPCODE],AL
 15E8 E938FC       1128          JMP     MMODRM
 15EB D2E8         1129  G0FHAR: SHR     AL,CL
 15ED 0C90         1130  G0FHRA: OR      AL,90H
 15EF A24128       1131          MOV     [OPCODE],AL
 15F2 C3           1132          RET
 15F3              1133  
 15F3              1134  ; --------------------------------
 15F3              1135  ; RET
 15F3 E8EAF4       1136  G0BH:   CALL    CC
 15F6 7420         1137          JZ      G0
 15F8 E814FA       1138          CALL    RA
 15FB              1139  
 15FB              1140  ; IF IMMEDIATE VALUE SPECIFIED,
 15FB              1141  ; ADJUST OPCODE ACCORDINGLY
 15FB 3C04         1142          CMP     AL,4
 15FD 7509         1143          JNZ     G0BH1
 15FF 800E472803   1144          OR      BYTE [FLAGS],3
 1604 FE0E4128     1145          DEC     BYTE [OPCODE]
 1608 A04C28       1146  G0BH1:  MOV     AL,[ARGS+3]
 160B 3C09         1147          CMP     AL,9
 160D 7409         1148          JZ      G0
 160F 3C0A         1149          CMP     AL,10
 1611 7505         1150          JNZ     G0
R-ASSEMBLER VERSION 1.05C    8086.ASM                     80

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1613 800E412808   1151  G0BH2:  OR      BYTE [OPCODE],8
 1618              1152  
 1618              1153  ; --------------------------------
 1618              1154  ; INSTRUCTIONS WITHOUT OPERANDS
 1618              1155  ; JUST GET A TRAILING RET
 1618 C3           1156  G0:     RET
 1619              1157  
 1619              1158  ; --------------------------------
 1619              1159  ; PREFIX INSTRUCTIONS JUST GET
 1619              1160  ; WRITTEN RIGHT AWAY AND LINE
 1619              1161  ; ASSEMBLY CONTINUES
 1619 E801F9       1162  G0AH:   CALL    ASMCM2
 161C E95EF4       1163          JMP     ASMLIN
 161F              1164  
 161F              1165  ; --------------------------------
 161F              1166  ; EVEN DIRECTIVE
 161F A13328       1167  D0:     MOV     AX,[PC]
 1622 D0E8         1168          SHR     AL,1
 1624 18C0         1169          SBB     AL,AL
 1626 2420         1170          AND     AL,20H
 1628 A24728       1171          MOV     [FLAGS],AL
 162B 31C9         1172          XOR     CX,CX
 162D C3           1173          RET
 162E              1174  
 162E              1175  ; --------------------------------
 162E              1176  ; PAGE DIRECTIVE
 162E 31D2         1177  D8:     XOR     DX,DX
 1630 E8ADF4       1178          CALL    CC
 1633 7405         1179          JZ      D8X
 1635 E811F7       1180          CALL    RE
 1638 89C2         1181          MOV     DX,AX
 163A E9F2F6       1182  D8X:    JMP     SETEND
 163D              1183  
 163D              1184  ; --------------------------------
 163D              1185  ; WRITE ELEMENT FROM TABLE
 163D              1186  ; AT SI
 163D FC           1187  WMN:    CLD
 163E 30ED         1188          XOR     CH,CH
 1640 7405         1189          JZ      WMN2
 1642 AC           1190  WMN1:   LODSB
 1643 3C20         1191          CMP     AL,20H
 1645 73FB         1192          JNB     WMN1
 1647 AD           1193  WMN2:   LODSW
 1648 49           1194          DEC     CX
 1649 79F7         1195          JNS     WMN1
 164B E918F8       1196          JMP     WRM
 164E              1197  
 164E              1198  ; --------------------------------
 164E              1199  ; WRAPPER FOR WRITING
 164E              1200  ; DIRECTIVES
R-ASSEMBLER VERSION 1.05C    8086.ASM                     81

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 164E 56           1201  WDIR:   PUSH    SI
 164F BEF81E       1202          MOV     SI,DIRTBL
 1652 E8E8FF       1203          CALL    WMN     
 1655 5E           1204          POP     SI
 1656 B020         1205          MOV     AL,20H
 1658 AA           1206          STOSB
 1659 C3           1207          RET
 165A              1208  
 165A              1209  ; --------------------------------
 165A              1210  ; DISASSEMBLE ONE INSTRUCTION
 165A BB0E00       1211  DISASM: MOV     BX,14
 165D              1212  
 165D              1213  ; WRITE DATA BYTE AS DB
 165D E85BF8       1214          CALL    LDDAT
 1660 732D         1215          JNC     DISAS2
 1662              1216  
 1662              1217  ; IF NOT DATA, DISASSEMBLE
 1662 30E4         1218          XOR     AH,AH
 1664 A04128       1219          MOV     AL,[OPCODE]
 1667 89C3         1220          MOV     BX,AX
 1669              1221  
 1669              1222  ; PREPARE SIZE ADJUSTMENT FOR
 1669              1223  ; REGISTER OPERAND BASED ON
 1669              1224  ; WORD BIT
 1669 2401         1225          AND     AL,1
 166B D0E0         1226          SHL     AL,1
 166D D0E0         1227          SHL     AL,1
 166F D0E0         1228          SHL     AL,1
 1671 D0E0         1229          SHL     AL,1
 1673 A33D28       1230          MOV     [WADJ],AX
 1676              1231  
 1676              1232  ; GET MNEMONIC FOR OPCODE
 1676 8A8FA21A     1233          MOV     CL,[BINTBL+BX]
 167A 84C9         1234          TEST    CL,CL
 167C 780B         1235          JS      DISAS1
 167E              1236  
 167E              1237  ; SIGNED INDEX MEANS DO NOT
 167E              1238  ; WRITE MNEMONIC QUITE YET
 167E 56           1239          PUSH    SI
 167F BE021C       1240          MOV     SI,MNMTBL
 1682 E8B8FF       1241          CALL    WMN
 1685 5E           1242          POP     SI
 1686 B009         1243          MOV     AL,9
 1688 AA           1244          STOSB
 1689              1245  
 1689              1246  ; INVOKE HANDLER TO DECODE
 1689              1247  ; OPERANDS
 1689 8A9FA219     1248  DISAS1: MOV     BL,[BX+HDLTBL]
 168D D1E3         1249          SHL     BX,1
 168F A04128       1250  DISAS2: MOV     AL,[OPCODE]
R-ASSEMBLER VERSION 1.05C    8086.ASM                     82

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1692 FF976419     1251          CALL    [BX+DHDL]
 1696 89F0         1252          MOV     AX,SI
 1698 2D2D23       1253          SUB     AX,BINBUF
 169B A33128       1254          MOV     [BINLEN],AX
 169E C3           1255          RET
 169F              1256  
 169F              1257  ; --------------------------------
 169F              1258  ; ACCUMULATOR AND IMMEDIATE
 169F 30C0         1259  ACCID:  XOR     AL,AL
 16A1 E8BE00       1260          CALL    WREG
 16A4 F6063D28FF   1261          TEST    BYTE [WADJ],0FFH
 16A9 EB18         1262          JMP     SHORT RIMMDW
 16AB              1263  
 16AB              1264  ; --------------------------------
 16AB              1265  ; IF 10 IS ENCODED, IT CAN BE
 16AB              1266  ; CONSIDERED IMPLICIT
 16AB AC           1267  AAMD:   LODSB
 16AC 3C0A         1268          CMP     AL,0AH
 16AE 7542         1269          JNZ     WHAL
 16B0              1270  
 16B0              1271  ; --------------------------------
 16B0              1272  ; REMOVE TRAILING TAB SINCE
 16B0              1273  ; THERE IS NO OPERAND
 16B0 4F           1274  SINGD:  DEC     DI
 16B1 C3           1275          RET
 16B2              1276  
 16B2              1277  ; --------------------------------
 16B2              1278  ; IMMEDIATE INTO REGISTER
 16B2 56           1279  RIMMD:  PUSH    SI
 16B3              1280  
 16B3              1281  ; THE REGISTER IS DIRECTLY
 16B3              1282  ; ENCODED INTO OPCODE SERIES B*
 16B3 250F00       1283          AND     AX,0FH
 16B6 D0E0         1284          SHL     AL,1
 16B8 50           1285          PUSH    AX
 16B9 05DA1B       1286          ADD     AX,REGS
 16BC 89C6         1287          MOV     SI,AX
 16BE A5           1288          MOVSW
 16BF 58           1289          POP     AX
 16C0 A810         1290          TEST    AL,10H
 16C2 5E           1291          POP     SI
 16C3 B02C         1292  RIMMDW: MOV     AL,2CH
 16C5 AA           1293          STOSB
 16C6 AD           1294          LODSW
 16C7 756E         1295          JNZ     WHAX
 16C9              1296  
 16C9              1297  ; WHOLE WORD LOADED BY DEFAULT
 16C9              1298  ; SO RECEDE INPUT BUFFER IF ONLY
 16C9              1299  ; A BYTE IS RELEVANT
 16C9 4E           1300  RIMMDB: DEC     SI
R-ASSEMBLER VERSION 1.05C    8086.ASM                     83

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 16CA EB26         1301          JMP     SHORT WHAL
 16CC              1302  
 16CC              1303  ; --------------------------------
 16CC              1304  ; GROUP 1 INSTRUCTIONS
 16CC              1305  ; OPCODES 80-83
 16CC B9A21B       1306  G01D:   MOV     CX,_G01D
 16CF E8DE01       1307          CALL    GRPD
 16D2              1308  
 16D2              1309  ; --------------------------------
 16D2              1310  ; IMMEDIATE INTO R/M
 16D2 E89A00       1311  RMID:   CALL    WPTR
 16D5              1312  
 16D5              1313  ; WRITE COMMA AND VALUE
 16D5 B02C         1314  G03DT:  MOV     AL,2CH
 16D7 AA           1315          STOSB
 16D8 AD           1316          LODSW
 16D9 F6063D28FF   1317          TEST    BYTE [WADJ],0FFH
 16DE 74E9         1318          JZ      RIMMDB
 16E0 803E412883   1319          CMP     BYTE [OPCODE],83H
 16E5 7550         1320          JNZ     WHAX
 16E7 4E           1321          DEC     SI
 16E8              1322  
 16E8              1323  ; --------------------------------
 16E8              1324  ; WRITE SYMBOL OR SIGNED BYTE
 16E8 84C0         1325  WHALS:  TEST    AL,AL
 16EA 7906         1326          JNS     WHAL
 16EC C6052D       1327          MOV     BYTE [DI],2DH
 16EF 47           1328          INC     DI
 16F0 F6D8         1329          NEG     AL
 16F2              1330  
 16F2              1331  ; --------------------------------
 16F2              1332  ; WRITE SYMBOL OR UNSIGNED BYTE
 16F2 30C9         1333  WHAL:   XOR     CL,CL
 16F4 E833F7       1334          CALL    WSYMA
 16F7 730E         1335          JNC     WHAL2
 16F9 3CA0         1336  WHAL0:  CMP     AL,0A0H
 16FB 7204         1337          JB      WHAL1
 16FD C60530       1338          MOV     BYTE [DI],30H
 1700 47           1339          INC     DI
 1701 E8C0F4       1340  WHAL1:  CALL    HALX
 1704 B048         1341          MOV     AL,48H
 1706 AA           1342          STOSB
 1707 C3           1343  WHAL2:  RET
 1708              1344  
 1708              1345  ; --------------------------------
 1708              1346  ; SHORT BRANCHES, WITH SPECIAL
 1708              1347  ; EXCEPTION GRANTED TO JMP SHORT
 1708              1348  ; WHICH NEEDS AN ADDITIONAL
 1708              1349  ; SHORT DIRECTIVE
 1708 3CEB         1350  RELBD:  CMP     AL,0EBH
R-ASSEMBLER VERSION 1.05C    8086.ASM                     84

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 170A 7505         1351          JNE     NOTJMP
 170C B113         1352          MOV     CL,19
 170E E83DFF       1353          CALL    WDIR
 1711 AC           1354  NOTJMP: LODSB
 1712 98           1355          CBW
 1713 050200       1356          ADD     AX,2
 1716 03063328     1357          ADD     AX,[PC]
 171A EB1B         1358          JMP     SHORT WHAX
 171C              1359  
 171C              1360  ; --------------------------------
 171C              1361  ; GROUP 3 INSTRUCTIONS
 171C B9B21B       1362  G03D:   MOV     CX,_G03D
 171F E88E01       1363          CALL    GRPD
 1722 FF34         1364          PUSH    WORD [SI]
 1724 E84800       1365          CALL    WPTR
 1727 58           1366          POP     AX
 1728 A830         1367          TEST    AL,30H
 172A 74A9         1368          JZ      G03DT
 172C C3           1369          RET
 172D              1370  
 172D              1371  ; --------------------------------
 172D              1372  ; WRITE SIGNED WORD VALUE
 172D 85C0         1373  WHAXS:  TEST    AX,AX
 172F 7906         1374          JNS     WHAX
 1731 C6052D       1375          MOV     BYTE [DI],2DH
 1734 47           1376          INC     DI
 1735 F7D8         1377          NEG     AX
 1737              1378  
 1737              1379  ; --------------------------------
 1737              1380  ; WRITE UNSIGNED WORD VALUE
 1737 B10C         1381  WHAX:   MOV     CL,0CH
 1739 E8EEF6       1382          CALL    WSYMA
 173C 7316         1383          JNC     WHAX2
 173E 80FCA0       1384  WHAX0:  CMP     AH,0A0H
 1741 7204         1385          JB      WHAX1
 1743 C60530       1386          MOV     BYTE [DI],30H
 1746 47           1387          INC     DI
 1747 50           1388  WHAX1:  PUSH    AX
 1748 86E0         1389          XCHG    AL,AH
 174A E877F4       1390          CALL    HALX
 174D 58           1391          POP     AX
 174E E873F4       1392          CALL    HALX
 1751 B048         1393          MOV     AL,48H
 1753 AA           1394          STOSB
 1754 C3           1395  WHAX2:  RET
 1755              1396  
 1755              1397  ; --------------------------------
 1755              1398  ; LDA HANDLER
 1755 B006         1399  MACCD:  MOV     AL,6
 1757 EB01         1400          JMP     SHORT MRD1
R-ASSEMBLER VERSION 1.05C    8086.ASM                     85

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1759              1401  
 1759              1402  ; --------------------------------
 1759              1403  ; REGISTER INTO R/M
 1759 AC           1404  MRD:    LODSB
 175A 50           1405  MRD1:   PUSH    AX
 175B E82B00       1406          CALL    WDISP
 175E B02C         1407          MOV     AL,2CH
 1760 AA           1408          STOSB
 1761 58           1409          POP     AX
 1762              1410  
 1762              1411  ; --------------------------------
 1762              1412  ; WRITE REGISTER FIELD
 1762 FC           1413  WREG:   CLD
 1763 56           1414          PUSH    SI
 1764 89C6         1415          MOV     SI,AX
 1766 D1EE         1416          SHR     SI,1
 1768 D1EE         1417          SHR     SI,1
 176A 83E60E       1418          AND     SI,0EH
 176D EB26         1419          JMP     SHORT WDISP1
 176F              1420  
 176F              1421  ; --------------------------------
 176F              1422  ; WRITE R/M SIZE OVERRIDE
 176F AC           1423  WPTR:   LODSB
 1770 3CC0         1424          CMP     AL,0C0H
 1772 7315         1425          JNC     WDISP
 1774 50           1426          PUSH    AX
 1775 B115         1427          MOV     CL,21
 1777 F6063D28FF   1428          TEST    BYTE [WADJ],0FFH
 177C 7502         1429          JNZ     WSELF
 177E 30C9         1430          XOR     CL,CL
 1780 E8CBFE       1431  WSELF:  CALL    WDIR
 1783 B112         1432          MOV     CL,18
 1785 E8C6FE       1433          CALL    WDIR
 1788 58           1434          POP     AX
 1789              1435  
 1789              1436  ; --------------------------------
 1789              1437  ; WRITE R/M FIELD
 1789 56           1438  WDISP:  PUSH    SI
 178A 89C6         1439          MOV     SI,AX
 178C 83E607       1440          AND     SI,7
 178F              1441  
 178F              1442  ; EVERYTHING BELOW 11XXXXXX IS
 178F              1443  ; R/M DISPLACEMENTS
 178F 3CC0         1444          CMP     AL,0C0H
 1791 720D         1445          JC      WDD
 1793 D1E6         1446          SHL     SI,1
 1795              1447  
 1795              1448  ; 11XXXXXX AND UP IS REGISTERS
 1795 81C6DA1B     1449  WDISP1: ADD     SI,REGS
 1799 03363D28     1450          ADD     SI,[WADJ]
R-ASSEMBLER VERSION 1.05C    8086.ASM                     86

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 179D A5           1451          MOVSW
 179E 5E           1452          POP     SI
 179F C3           1453          RET
 17A0              1454  
 17A0              1455  ; START WRITING BRACKETED
 17A0              1456  ; IDEAL MODE DISPLACEMENT
 17A0 50           1457  WDD:    PUSH    AX
 17A1 B05B         1458          MOV     AL,5BH
 17A3 AA           1459          STOSB
 17A4 58           1460          POP     AX
 17A5              1461  
 17A5              1462  ; ISOLATE DISPLACEMENT SIZE
 17A5              1463  ; AND TYPE
 17A5 24C7         1464          AND     AL,0C7H
 17A7 3C06         1465          CMP     AL,6
 17A9 7509         1466          JNZ     WDC
 17AB              1467  
 17AB              1468  ; BP ALONE IS NOT A THING;
 17AB              1469  ; WRITE IMMEDIATE DISPLACEMENT
 17AB              1470  ; ONLY
 17AB 5E           1471          POP     SI
 17AC AD           1472          LODSW
 17AD E887FF       1473          CALL    WHAX
 17B0 B05D         1474          MOV     AL,5DH
 17B2 AA           1475          STOSB
 17B3 C3           1476          RET
 17B4              1477  
 17B4              1478  ; WRITE DISPLACEMENT REGISTER
 17B4              1479  ; AND DISPLACEMENT
 17B4 50           1480  WDC:    PUSH    AX
 17B5 81C6C21B     1481          ADD     SI,_DISP
 17B9 8A14         1482          MOV     DL,[SI]
 17BB B02B         1483          MOV     AL,2BH
 17BD B104         1484          MOV     CL,4
 17BF 89D6         1485  WDL:    MOV     SI,DX
 17C1 83E60F       1486          AND     SI,0FH
 17C4 81C6EA1B     1487          ADD     SI,REGS+16
 17C8 A5           1488          MOVSW
 17C9 AA           1489          STOSB
 17CA D2EA         1490          SHR     DL,CL
 17CC 75F1         1491          JNZ     WDL
 17CE 58           1492          POP     AX
 17CF 5E           1493          POP     SI
 17D0 D0E0         1494          SHL     AL,1
 17D2 7209         1495          JC      WDW
 17D4 D0E0         1496          SHL     AL,1
 17D6 7214         1497          JC      WDB
 17D8 4F           1498  WDX:    DEC     DI
 17D9 B05D         1499          MOV     AL,5DH
 17DB AA           1500          STOSB
R-ASSEMBLER VERSION 1.05C    8086.ASM                     87

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 17DC C3           1501          RET
 17DD              1502  
 17DD              1503  ; 16-BIT SIGNED DISPLACEMENT
 17DD AD           1504  WDW:    LODSW
 17DE 85C0         1505          TEST    AX,AX
 17E0 74F6         1506          JZ      WDX
 17E2 7901         1507          JNS     WDAX
 17E4 4F           1508          DEC     DI
 17E5 E845FF       1509  WDAX:   CALL    WHAXS
 17E8 B05D         1510          MOV     AL,5DH
 17EA AA           1511          STOSB
 17EB C3           1512          RET
 17EC              1513  
 17EC              1514  ; 8-BIT SIGNED DISPLACEMENT
 17EC AC           1515  WDB:    LODSB
 17ED 84C0         1516          TEST    AL,AL
 17EF 74E7         1517          JZ      WDX
 17F1 7901         1518          JNS     WDAL
 17F3 4F           1519          DEC     DI
 17F4 E8F1FE       1520  WDAL:   CALL    WHALS
 17F7 B05D         1521          MOV     AL,5DH
 17F9 AA           1522          STOSB
 17FA C3           1523          RET
 17FB              1524  
 17FB              1525  ; --------------------------------
 17FB              1526  ; MOVE INTO SEGMENT REGISTER
 17FB C6063D2810   1527  MSD:    MOV     BYTE [WADJ],10H
 1800 AC           1528          LODSB
 1801 50           1529          PUSH    AX
 1802 E884FF       1530          CALL    WDISP
 1805 B02C         1531          MOV     AL,2CH
 1807 AA           1532          STOSB
 1808 58           1533          POP     AX
 1809              1534  
 1809              1535  ; --------------------------------
 1809              1536  ; WRITE SEGMENT REGISTER OPERAND
 1809 D0E8         1537  PSRD:   SHR     AL,1
 180B D0E8         1538          SHR     AL,1
 180D 250600       1539          AND     AX,6
 1810 0C20         1540          OR      AL,20H
 1812 05DA1B       1541          ADD     AX,REGS
 1815 96           1542          XCHG    AX,SI
 1816 FC           1543          CLD
 1817 A5           1544          MOVSW
 1818 96           1545          XCHG    AX,SI
 1819 C3           1546          RET
 181A              1547  
 181A              1548  ; --------------------------------
 181A              1549  ; MOVE FROM SEGMENT REGISTER
 181A C6063D2810   1550  SMD:    MOV     BYTE [WADJ],10H
R-ASSEMBLER VERSION 1.05C    8086.ASM                     88

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 181F AC           1551          LODSB
 1820 50           1552          PUSH    AX
 1821 E8E5FF       1553          CALL    PSRD
 1824 B02C         1554          MOV     AL,2CH
 1826 AA           1555          STOSB
 1827 58           1556          POP     AX
 1828 E95EFF       1557          JMP     WDISP
 182B              1558  
 182B              1559  ; --------------------------------
 182B              1560  ; EXCHANGE ACCUMULATOR AND
 182B              1561  ; 16-BIT REGISTER
 182B 50           1562  ACCRD:  PUSH    AX
 182C B84158       1563          MOV     AX,5841H
 182F AB           1564          STOSW
 1830 B02C         1565          MOV     AL,2CH
 1832 AA           1566          STOSB
 1833 58           1567          POP     AX
 1834              1568  
 1834              1569  ; --------------------------------
 1834              1570  ; WRITE 16-BIT REGISTER OPERAND
 1834 C6063D2810   1571  REGWD:  MOV     BYTE [WADJ],10H
 1839 0CC0         1572          OR      AL,0C0H
 183B E94BFF       1573          JMP     WDISP
 183E              1574  
 183E              1575  ; --------------------------------
 183E              1576  ; DECODE AND WRITE 16-BIT
 183E              1577  ; RELATIVE OFFSET, CALL/JMP
 183E AD           1578  RELWD:  LODSW
 183F 050300       1579          ADD     AX,3
 1842 03063328     1580          ADD     AX,[PC]
 1846 E9EEFE       1581          JMP     WHAX
 1849              1582  
 1849              1583  ; --------------------------------
 1849              1584  ; DECODE HORRIBLE ESC INSTRUCTION
 1849 8A24         1585  ESCD:   MOV     AH,[SI]
 184B B103         1586          MOV     CL,3
 184D D2CC         1587          ROR     AH,CL
 184F 250707       1588          AND     AX,707H
 1852 D2C0         1589          ROL     AL,CL
 1854 08E0         1590          OR      AL,AH
 1856 E899FE       1591          CALL    WHAL
 1859 B02C         1592          MOV     AL,2CH
 185B AA           1593          STOSB
 185C AC           1594          LODSB
 185D E929FF       1595          JMP     WDISP
 1860              1596  
 1860              1597  ; --------------------------------
 1860              1598  ; SIMPLE INT+VALUE
 1860 AC           1599  INTD:   LODSB
 1861 E98EFE       1600          JMP     WHAL
R-ASSEMBLER VERSION 1.05C    8086.ASM                     89

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1864              1601  
 1864              1602  ; --------------------------------
 1864              1603  ; INT 3 IS ITS OWN THING, SO
 1864              1604  ; JUST WRITE OUT THE DIGIT 3
 1864 B033         1605  INT3D:  MOV     AL,33H
 1866 AA           1606          STOSB
 1867 C3           1607          RET
 1868              1608  
 1868              1609  ; --------------------------------
 1868              1610  ; RETURN FAR IS RET+FAR OVERRIDE
 1868 B109         1611  RETFD:  MOV     CL,9
 186A E8E1FD       1612          CALL    WDIR
 186D F606412801   1613          TEST    BYTE [OPCODE],1
 1872 7402         1614          JZ      RETD
 1874 4F           1615          DEC     DI
 1875 C3           1616          RET
 1876              1617  
 1876              1618  ; --------------------------------
 1876              1619  ; DECODE RET WITH ARGUMENT
 1876              1620  ; REGULAR RETS JUST FALL INTO
 1876              1621  ; GROUP WITHOUT OPERANDS
 1876 AD           1622  RETD:   LODSW
 1877 E9BDFE       1623          JMP     WHAX
 187A              1624  
 187A              1625  ; --------------------------------
 187A              1626  ; IN/OUT INSTRUCTIONS WITH DX
 187A              1627  ; AND ACCUMULATOR
 187A A13D28       1628  ADIOD:  MOV     AX,[WADJ]
 187D              1629  
 187D              1630  ; USE THE WORD ADJUST TO GET
 187D              1631  ; CORRECT ACCUMULATOR SIZE
 187D 05DA1B       1632          ADD     AX,REGS
 1880 56           1633          PUSH    SI
 1881 89C6         1634          MOV     SI,AX
 1883 AD           1635          LODSW
 1884 5E           1636          POP     SI
 1885 BA4458       1637          MOV     DX,5844H
 1888              1638  
 1888              1639  ; THE DIRECTION BIT IS THE DEAD
 1888              1640  ; GIVEAWAY OF THE INSTRUCTION
 1888 F606412802   1641          TEST    BYTE [OPCODE],2
 188D 7401         1642          JZ      ADIOD0
 188F              1643  
 188F              1644  ; WRITE THE REGISTERS
 188F 92           1645          XCHG    AX,DX
 1890 AB           1646  ADIOD0: STOSW
 1891 B02C         1647          MOV     AL,2CH
 1893 AA           1648          STOSB
 1894 92           1649          XCHG    AX,DX
 1895 AB           1650          STOSW
R-ASSEMBLER VERSION 1.05C    8086.ASM                     90

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1896 C3           1651          RET
 1897              1652  
 1897              1653  ; --------------------------------
 1897              1654  ; IN INSTRUCTION
 1897 AC           1655  IBAPD:  LODSB
 1898 E857FE       1656          CALL    WHAL
 189B B02C         1657          MOV     AL,2CH
 189D AA           1658          STOSB
 189E B0C0         1659          MOV     AL,0C0H
 18A0 E9E6FE       1660          JMP     WDISP
 18A3              1661  
 18A3              1662  ; --------------------------------
 18A3              1663  ; 32-BIT INDIRECT CALL OR JUMP
 18A3 AD           1664  SEGOFD: LODSW
 18A4 50           1665          PUSH    AX
 18A5 AD           1666          LODSW
 18A6 E88EFE       1667          CALL    WHAX
 18A9 B03A         1668          MOV     AL,3AH
 18AB AA           1669          STOSB
 18AC 58           1670          POP     AX
 18AD E987FE       1671          JMP     WHAX
 18B0              1672  
 18B0              1673  ; --------------------------------
 18B0              1674  ; WRITE OUT GROUP INSTRUCTIONS:
 18B0              1675  ; THE FOUR GROUP HANDLERS HAVE
 18B0              1676  ; THEIR OWN INSTRUCTION TABLES
 18B0              1677  ; SINCE SEVERAL INSTRUCTIONS WILL
 18B0              1678  ; SHARE THE SAME OPCODE, AND
 18B0              1679  ; THE MNEMONIC CANNOT BE WRITTEN
 18B0              1680  ; UNTIL MODIFIER BYTE IS PROCESSED
 18B0 56           1681  GRPD:   PUSH    SI
 18B1 AC           1682          LODSB
 18B2              1683  
 18B2              1684  ; GET OPCODE EXTENSION
 18B2 D0E8         1685          SHR     AL,1
 18B4 D0E8         1686          SHR     AL,1
 18B6 D0E8         1687          SHR     AL,1
 18B8 250700       1688          AND     AX,7
 18BB 50           1689          PUSH    AX
 18BC              1690  
 18BC              1691  ; CX POINTS TO GROUP-SPECIFIC
 18BC              1692  ; INSTRUCTION TABLE
 18BC 89C6         1693          MOV     SI,AX
 18BE 01CE         1694          ADD     SI,CX
 18C0 8A0C         1695          MOV     CL,[SI]
 18C2 BE021C       1696          MOV     SI,MNMTBL
 18C5              1697  
 18C5              1698  ; WRITE MNEMONIC AND TAB,
 18C5              1699  ; AS YOU DO
 18C5 E875FD       1700          CALL    WMN
R-ASSEMBLER VERSION 1.05C    8086.ASM                     91

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 18C8 B009         1701          MOV     AL,9
 18CA AA           1702          STOSB
 18CB 58           1703          POP     AX
 18CC 5E           1704          POP     SI
 18CD C3           1705          RET
 18CE              1706  
 18CE              1707  ; --------------------------------
 18CE              1708  ; STA HANDLER
 18CE B006         1709  ACCMD:  MOV     AL,6
 18D0 EB06         1710          JMP     SHORT RMD1
 18D2              1711  
 18D2              1712  ; --------------------------------
 18D2              1713  ; LDS/LES/LEA GROUP
 18D2 C6063D2810   1714  RWMD:   MOV     BYTE [WADJ],10H
 18D7              1715  
 18D7              1716  ; --------------------------------
 18D7              1717  ; REGISTER TO R/M
 18D7 AC           1718  RMD:    LODSB
 18D8 50           1719  RMD1:   PUSH    AX
 18D9 E886FE       1720          CALL    WREG
 18DC B02C         1721          MOV     AL,2CH
 18DE AA           1722          STOSB
 18DF 58           1723          POP     AX
 18E0 E9A6FE       1724          JMP     WDISP
 18E3              1725  
 18E3              1726  ; --------------------------------
 18E3              1727  ; GROUP 2: SHIFTS AND ROTATES
 18E3 B9AA1B       1728  G02D:   MOV     CX,_G02D
 18E6 E8C7FF       1729          CALL    GRPD
 18E9 E883FE       1730          CALL    WPTR
 18EC B02C         1731          MOV     AL,2CH
 18EE AA           1732          STOSB
 18EF              1733  
 18EF              1734  ; ONLY CL OR 1 ARE VALID
 18EF F606412802   1735          TEST    BYTE [OPCODE],2
 18F4 7405         1736          JZ      G02D1
 18F6 B8434C       1737          MOV     AX,4C43H
 18F9 AB           1738          STOSW
 18FA C3           1739          RET
 18FB B031         1740  G02D1:  MOV     AL,31H
 18FD AA           1741          STOSB
 18FE C3           1742          RET
 18FF              1743  
 18FF              1744  ; --------------------------------
 18FF              1745  ; GROUP 4
 18FF B9BA1B       1746  G04D:   MOV     CX,_G04D
 1902 E8ABFF       1747          CALL    GRPD
 1905              1748  
 1905              1749  ; SOME OF THEM NEED SIZE OR
 1905              1750  ; DISTANCE OVERRIDES FOR
R-ASSEMBLER VERSION 1.05C    8086.ASM                     92

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1905              1751  ; DISAMBIGUATION
 1905 3C07         1752          CMP     AL,7
 1907 741C         1753          JZ      INVD
 1909 3C05         1754          CMP     AL,5
 190B 740F         1755          JZ      G04DF
 190D 3C04         1756          CMP     AL,4
 190F 7410         1757          JZ      DISPD
 1911 3C03         1758          CMP     AL,3
 1913 7407         1759          JZ      G04DF
 1915 3C02         1760          CMP     AL,2
 1917 7408         1761          JZ      DISPD
 1919 E953FE       1762          JMP     WPTR
 191C B109         1763  G04DF:  MOV     CL,9
 191E E82DFD       1764          CALL    WDIR
 1921              1765  
 1921              1766  ; --------------------------------
 1921              1767  ; WRITE R/M FIELD AS OPERAND
 1921 AC           1768  DISPD:  LODSB
 1922 E964FE       1769          JMP     WDISP
 1925              1770  
 1925              1771  ; --------------------------------
 1925              1772  ; INVALID INSTRUCTIONS ARE
 1925              1773  ; WRITTEN AS DATA DEFINITIONS
 1925 50           1774  INVD:   PUSH    AX
 1926 B84442       1775          MOV     AX,4244H
 1929 AB           1776          STOSW
 192A B009         1777          MOV     AL,9
 192C AA           1778          STOSB
 192D 58           1779          POP     AX
 192E E9C1FD       1780          JMP     WHAL
 1931 90           1781          EVEN
 1932              1782  
 1932              1783  ; --------------------------------
 1932              1784  ; INSTRUCTION ASSEMBLY HANDLERS
 1932 1816E6129D12 1785  IHDL:   DW      G0,G1,G2,G3
 1938 4D13
 193A 8D138314E513 1786          DW      G4,G5,G6,G7
 1940 5B15
 1942 A914B3141916 1787          DW      G8,G9,G0AH,G0BH
 1948 F315
 194A 78158F152D15 1788          DW      G0CH,G0DH,G0EH,G0FH
 1950 BD15
 1952              1789  
 1952              1790  ; --------------------------------
 1952              1791  ; DIRECTIVE HANDLERS
 1952 1F169E0A2F0D 1792  AHDL:   DW      D0,SETEQU,SETEND
 1958 BC0A8C0CC70F 1793          DW      SETORG,SETDFB,D5
 195E 6F0E0D0D2E16 1794          DW      SETDFS,SETINC,D8
 1964              1795  
 1964              1796  ; --------------------------------
R-ASSEMBLER VERSION 1.05C    8086.ASM                     93

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1964              1797  ; OPERAND DISASSEMBLY HANDLERS
 1964 5917D7189F16 1798  DHDL:   DW      MRD,RMD,ACCID
 196A 09187A18B016 1799          DW      PSRD,ADIOD,SINGD
 1970 341825190817 1800          DW      REGWD,INVD,RELBD
 1976 CC161C17FF18 1801          DW      G01D,G03D,G04D
 197C FB171A182119 1802          DW      MSD,SMD,DISPD
 1982 2B18A318CE18 1803          DW      ACCRD,SEGOFD,ACCMD
 1988 5517B2167618 1804          DW      MACCD,RIMMD,RETD
 198E D218D2166818 1805          DW      RWMD,RMID,RETFD
 1994 64186018E318 1806          DW      INT3D,INTD,G02D
 199A AB1649189718 1807          DW      AAMD,ESCD,IBAPD
 19A0 3E18         1808          DW      RELWD
 19A2              1809  
 19A2              1810  ; --------------------------------
 19A2              1811  ; OPERAND DECODER PER INSTRUCTION
 19A2 000001010202 1812  HDLTBL: DB      0,0,1,1,2,2,3,3
 19A8 0303
 19AA 000001010202 1813          DB      0,0,1,1,2,2,3,3
 19B0 0303
 19B2 000001010202 1814          DB      0,0,1,1,2,2,3,3
 19B8 0303
 19BA 000001010202 1815          DB      0,0,1,1,2,2,3,3
 19C0 0303
 19C2 000001010202 1816          DB      0,0,1,1,2,2,3,5
 19C8 0305
 19CA 000001010202 1817          DB      0,0,1,1,2,2,3,5
 19D0 0305
 19D2 000001010202 1818          DB      0,0,1,1,2,2,3,5
 19D8 0305
 19DA 000001010202 1819          DB      0,0,1,1,2,2,3,5
 19E0 0305
 19E2 060606060606 1820          DB      6,6,6,6,6,6,6,6
 19E8 0606
 19EA 060606060606 1821          DB      6,6,6,6,6,6,6,6
 19F0 0606
 19F2 060606060606 1822          DB      6,6,6,6,6,6,6,6
 19F8 0606
 19FA 060606060606 1823          DB      6,6,6,6,6,6,6,6
 1A00 0606
 1A02 070707070707 1824          DB      7,7,7,7,7,7,7,7
 1A08 0707
 1A0A 070707070707 1825          DB      7,7,7,7,7,7,7,7
 1A10 0707
 1A12 080808080808 1826          DB      8,8,8,8,8,8,8,8
 1A18 0808
 1A1A 080808080808 1827          DB      8,8,8,8,8,8,8,8
 1A20 0808
 1A22 090909090101 1828          DB      9,9,9,9,1,1,1,1
 1A28 0101
 1A2A 00000101     1829          DB      0,0,1,1
R-ASSEMBLER VERSION 1.05C    8086.ASM                     94

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1A2E 0C010D0E     1830          DB      0CH,01H,0DH,0EH
 1A32 050F0F0F     1831          DB      05H,0FH,0FH,0FH
 1A36 0F0F0F0F     1832          DB      0FH,0FH,0FH,0FH
 1A3A 05051005     1833          DB      05H,05H,10H,05H
 1A3E 05050505     1834          DB      05H,05H,05H,05H
 1A42 11111212     1835          DB      11H,11H,12H,12H
 1A46 05050505     1836          DB      05H,05H,05H,05H
 1A4A 02020505     1837          DB      02H,02H,05H,05H
 1A4E 05050505     1838          DB      05H,05H,05H,05H
 1A52 13131313     1839          DB      13H,13H,13H,13H
 1A56 13131313     1840          DB      13H,13H,13H,13H
 1A5A 13131313     1841          DB      13H,13H,13H,13H
 1A5E 13131313     1842          DB      13H,13H,13H,13H
 1A62 07071405     1843          DB      07H,07H,14H,05H
 1A66 15011616     1844          DB      15H,01H,16H,16H
 1A6A 07071717     1845          DB      07H,07H,17H,17H
 1A6E 18190505     1846          DB      18H,19H,05H,05H
 1A72 1A1A1A1A     1847          DB      1AH,1AH,1AH,1AH
 1A76 1B1B0505     1848          DB      1BH,1BH,05H,05H
 1A7A 1C1C1C1C     1849          DB      1CH,1CH,1CH,1CH
 1A7E 1C1C1C1C     1850          DB      1CH,1CH,1CH,1CH
 1A82 08080808     1851          DB      08H,08H,08H,08H
 1A86 02021D1D     1852          DB      02H,02H,1DH,1DH
 1A8A 1E1E1008     1853          DB      1EH,1EH,10H,08H
 1A8E 04040404     1854          DB      04H,04H,04H,04H
 1A92 05070505     1855          DB      05H,07H,05H,05H
 1A96 05050A0A     1856          DB      05H,05H,0AH,0AH
 1A9A 05050505     1857          DB      05H,05H,05H,05H
 1A9E 05050B0B     1858          DB      05H,05H,0BH,0BH
 1AA2              1859  
 1AA2              1860  ; --------------------------------
 1AA2              1861  ; MNEMONIC PER INSTRUCTION
 1AA2 05050505     1862  BINTBL: DB      05H,05H,05H,05H
 1AA6 05055553     1863          DB      05H,05H,55H,53H
 1AAA 51515151     1864          DB      51H,51H,51H,51H
 1AAE 51515553     1865          DB      51H,51H,55H,53H
 1AB2 04040404     1866          DB      04H,04H,04H,04H
 1AB6 04045553     1867          DB      04H,04H,55H,53H
 1ABA 65656565     1868          DB      65H,65H,65H,65H
 1ABE 65655553     1869          DB      65H,65H,55H,53H
 1AC2 06060606     1870          DB      06H,06H,06H,06H
 1AC6 06066811     1871          DB      06H,06H,68H,11H
 1ACA 70707070     1872          DB      70H,70H,70H,70H
 1ACE 70706812     1873          DB      70H,70H,68H,12H
 1AD2 75757575     1874          DB      75H,75H,75H,75H
 1AD6 75756800     1875          DB      75H,75H,68H,00H
 1ADA 0D0D0D0D     1876          DB      0DH,0DH,0DH,0DH
 1ADE 0D0D6803     1877          DB      0DH,0DH,68H,03H
 1AE2 1A1A1A1A     1878          DB      1AH,1AH,1AH,1AH
 1AE6 1A1A1A1A     1879          DB      1AH,1AH,1AH,1AH
R-ASSEMBLER VERSION 1.05C    8086.ASM                     95

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1AEA 13131313     1880          DB      13H,13H,13H,13H
 1AEE 13131313     1881          DB      13H,13H,13H,13H
 1AF2 55555555     1882          DB      55H,55H,55H,55H
 1AF6 55555555     1883          DB      55H,55H,55H,55H
 1AFA 53535353     1884          DB      53H,53H,53H,53H
 1AFE 53535353     1885          DB      53H,53H,53H,53H
 1B02 80808080     1886          DB      80H,80H,80H,80H
 1B06 80808080     1887          DB      80H,80H,80H,80H
 1B0A 80808080     1888          DB      80H,80H,80H,80H
 1B0E 80808080     1889          DB      80H,80H,80H,80H
 1B12 3834222E     1890          DB      38H,34H,22H,2EH
 1B16 3D372C1E     1891          DB      3DH,37H,2CH,1EH
 1B1A 3C363935     1892          DB      3CH,36H,39H,35H
 1B1E 27323025     1893          DB      27H,32H,30H,25H
 1B22 80808080     1894          DB      80H,80H,80H,80H
 1B26 71717373     1895          DB      71H,71H,73H,73H
 1B2A 4A4A4A4A     1896          DB      4AH,4AH,4AH,4AH
 1B2E 4A404A53     1897          DB      4AH,40H,4AH,53H
 1B32 4F737373     1898          DB      4FH,73H,73H,73H
 1B36 73737373     1899          DB      73H,73H,73H,73H
 1B3A 08100772     1900          DB      08H,10H,07H,72H
 1B3E 5654613E     1901          DB      56H,54H,61H,3EH
 1B42 4A4A4A4A     1902          DB      4AH,4AH,4AH,4AH
 1B46 4B4C0E0F     1903          DB      4BH,4CH,0EH,0FH
 1B4A 71716E6F     1904          DB      71H,71H,6EH,6FH
 1B4E 43446667     1905          DB      43H,44H,66H,67H
 1B52 4A4A4A4A     1906          DB      4AH,4AH,4AH,4AH
 1B56 4A4A4A4A     1907          DB      4AH,4AH,4AH,4AH
 1B5A 4A4A4A4A     1908          DB      4AH,4AH,4AH,4AH
 1B5E 4A4A4A4A     1909          DB      4AH,4AH,4AH,4AH
 1B62 80805E5E     1910          DB      80H,80H,5EH,5EH
 1B66 413F4A4A     1911          DB      41H,3FH,4AH,4AH
 1B6A 80805E5E     1912          DB      80H,80H,5EH,5EH
 1B6E 1B1B1C1D     1913          DB      1BH,1BH,1CH,1DH
 1B72 80808080     1914          DB      80H,80H,80H,80H
 1B76 02016374     1915          DB      02H,01H,63H,74H
 1B7A 15151515     1916          DB      15H,15H,15H,15H
 1B7E 15151515     1917          DB      15H,15H,15H,15H
 1B82 48494523     1918          DB      48H,49H,45H,23H
 1B86 19195252     1919          DB      19H,19H,52H,52H
 1B8A 07292929     1920          DB      07H,29H,29H,29H
 1B8E 19195252     1921          DB      19H,19H,52H,52H
 1B92 42805C5D     1922          DB      42H,80H,5CH,5DH
 1B96 160C8080     1923          DB      16H,0CH,80H,80H
 1B9A 096B0B6C     1924          DB      09H,6BH,0BH,6CH
 1B9E 0A6D8080     1925          DB      0AH,6DH,80H,80H
 1BA2              1926  
 1BA2              1927  ; --------------------------------
 1BA2              1928  ; GROUP MNEMONIC TABLES
 1BA2 05510465     1929  _G01D:  DB      05H,51H,04H,65H
R-ASSEMBLER VERSION 1.05C    8086.ASM                     96

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1BA6 0670750D     1930          DB      06H,70H,75H,0DH
 1BAA 5F605758     1931  _G02D:  DB      5FH,60H,57H,58H
 1BAE 696A6264     1932          DB      69H,6AH,62H,64H
 1BB2 7171504E     1933  _G03D:  DB      71H,71H,50H,4EH
 1BB6 4F181417     1934          DB      4FH,18H,14H,17H
 1BBA 1A130707     1935  _G04D:  DB      1AH,13H,07H,07H
 1BBE 29295580     1936          DB      29H,29H,55H,80H
 1BC2              1937  
 1BC2              1938  ; --------------------------------
 1BC2              1939  ; DISPLACEMENT REGISTER INDICES
 1BC2 C6E6CAEA     1940  _DISP:  DB      0C6H,0E6H,0CAH,0EAH
 1BC6 0C0E0A06     1941          DB      0CH,0EH,0AH,6
 1BCA              1942  
 1BCA              1943  ; --------------------------------
 1BCA              1944  ; DISPLACEMENT TYPE TABLE
 1BCA 0E0706FF     1945  RM:     DB      0EH,7,6,0FFH
 1BCE 050103FF     1946          DB      5,1,3,0FFH
 1BD2 040002FF     1947          DB      4,0,2,0FFH
 1BD6 FFFFFFFF     1948          DB      0FFH,0FFH,0FFH,0FFH
 1BDA              1949  
 1BDA              1950  ; --------------------------------
 1BDA              1951  ; THREE GUESSES WHAT THIS IS
 1BDA 414C434C444C 1952  REGS:   DB      "ALCLDLBLAHCHDHBH"
 1BE0 424C41484348
 1BE6 44484248
 1BEA 415843584458 1953          DB      "AXCXDXBXSPBPSIDI"
 1BF0 425853504250
 1BF6 53494449
 1BFA 455343535353 1954          DB      "ESCSSSDS"
 1C00 4453
 1C02              1955  
 1C02              1956  ; --------------------------------
 1C02              1957  ; EVERY MNEMONIC ENTRY IS LISTED
 1C02              1958  ; WITH ITS MOST LIKELY EXPECTED
 1C02              1959  ; OPCODE EXCEPT GROUP INSTRUCTIONS
 1C02              1960  ; WHICH HAVE THEIR OPCODE
 1C02              1961  ; EXTENSION INSTEAD
 1C02 7600         1962  MNMTBL: DW      118
 1C04 414141003700 1963          DB      "AAA",0,37H,0
 1C0A 41414400D507 1964          DB      "AAD",0,0D5H,7
 1C10 41414D00D407 1965          DB      "AAM",0,0D4H,7
 1C16 414153003F00 1966          DB      "AAS",0,3FH,0
 1C1C 414443001001 1967          DB      "ADC",0,10H,1
 1C22 414444000001 1968          DB      "ADD",0,0,1
 1C28 414E44002001 1969          DB      "AND",0,20H,1
 1C2E 43414C4C0000 1970          DB      "CALL",0,0,6
 1C34 06
 1C35 434257009800 1971          DB      "CBW",0,98H,0
 1C3B 434C4300F800 1972          DB      "CLC",0,0F8H,0
 1C41 434C4400FC00 1973          DB      "CLD",0,0FCH,0
R-ASSEMBLER VERSION 1.05C    8086.ASM                     97

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1C47 434C4900FA00 1974          DB      "CLI",0,0FAH,0
 1C4D 434D4300F500 1975          DB      "CMC",0,0F5H,0
 1C53 434D50003801 1976          DB      "CMP",0,38H,1
 1C59 434D50534200 1977          DB      "CMPSB",0,0A6H,0
 1C5F A600
 1C61 434D50535700 1978          DB      "CMPSW",0,0A7H,0
 1C67 A700
 1C69 435744009900 1979          DB      "CWD",0,99H,0
 1C6F 444141002700 1980          DB      "DAA",0,27H,0
 1C75 444153002F00 1981          DB      "DAS",0,2FH,0
 1C7B 444543000804 1982          DB      "DEC",0,8,4
 1C81 444956003003 1983          DB      "DIV",0,30H,3
 1C87 45534300D80E 1984          DB      "ESC",0,0D8H,0EH
 1C8D 484C5400F400 1985          DB      "HLT",0,0F4H,0
 1C93 494449560038 1986          DB      "IDIV",0,38H,3
 1C99 03
 1C9A 494D554C0028 1987          DB      "IMUL",0,28H,3
 1CA0 03
 1CA1 494E00E40D   1988          DB      "IN",0,0E4H,0DH
 1CA6 494E43000004 1989          DB      "INC",0,0,4
 1CAC 494E5400CD0C 1990          DB      "INT",0,0CDH,0CH
 1CB2 494E544F00CE 1991          DB      "INTO",0,0CEH,0
 1CB8 00
 1CB9 4952455400CF 1992          DB      "IRET",0,0CFH,0
 1CBF 00
 1CC0 4A41007705   1993          DB      "JA",0,77H,5
 1CC5 4A4145007305 1994          DB      "JAE",0,73H,5
 1CCB 4A42007205   1995          DB      "JB",0,72H,5
 1CD0 4A4245007605 1996          DB      "JBE",0,76H,5
 1CD6 4A43007205   1997          DB      "JC",0,72H,5
 1CDB 4A43585A00E3 1998          DB      "JCXZ",0,0E3H,5
 1CE1 05
 1CE2 4A45007405   1999          DB      "JE",0,74H,5
 1CE7 4A47007F05   2000          DB      "JG",0,7FH,5
 1CEC 4A4745007D05 2001          DB      "JGE",0,7DH,5
 1CF2 4A4C007C05   2002          DB      "JL",0,7CH,5
 1CF7 4A4C45007E05 2003          DB      "JLE",0,7EH,5
 1CFD 4A4D50000106 2004          DB      "JMP",0,1,6
 1D03 4A4E41007605 2005          DB      "JNA",0,76H,5
 1D09 4A4E41450072 2006          DB      "JNAE",0,72H,5
 1D0F 05
 1D10 4A4E42007305 2007          DB      "JNB",0,73H,5
 1D16 4A4E42450077 2008          DB      "JNBE",0,77H,5
 1D1C 05
 1D1D 4A4E43007305 2009          DB      "JNC",0,73H,5
 1D23 4A4E45007505 2010          DB      "JNE",0,75H,5
 1D29 4A4E47007E05 2011          DB      "JNG",0,7EH,5
 1D2F 4A4E4745007C 2012          DB      "JNGE",0,7CH,5
 1D35 05
 1D36 4A4E4C007D05 2013          DB      "JNL",0,7DH,5
R-ASSEMBLER VERSION 1.05C    8086.ASM                     98

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1D3C 4A4E4C45007F 2014          DB      "JNLE",0,7FH,5
 1D42 05
 1D43 4A4E4F007105 2015          DB      "JNO",0,71H,5
 1D49 4A4E50007B05 2016          DB      "JNP",0,7BH,5
 1D4F 4A4E53007905 2017          DB      "JNS",0,79H,5
 1D55 4A4E5A007505 2018          DB      "JNZ",0,75H,5
 1D5B 4A4F007005   2019          DB      "JO",0,70H,5
 1D60 4A50007A05   2020          DB      "JP",0,7AH,5
 1D65 4A5045007A05 2021          DB      "JPE",0,7AH,5
 1D6B 4A504F007B05 2022          DB      "JPO",0,7BH,5
 1D71 4A53007805   2023          DB      "JS",0,78H,5
 1D76 4A5A007405   2024          DB      "JZ",0,74H,5
 1D7B 4C414846009F 2025          DB      "LAHF",0,9FH,0
 1D81 00
 1D82 4C445300C508 2026          DB      "LDS",0,0C5H,8
 1D88 4C4541008D08 2027          DB      "LEA",0,8DH,8
 1D8E 4C455300C408 2028          DB      "LES",0,0C4H,8
 1D94 4C4F434B00F0 2029          DB      "LOCK",0,0F0H,0AH
 1D9A 0A
 1D9B 4C4F44534200 2030          DB      "LODSB",0,0ACH,0
 1DA1 AC00
 1DA3 4C4F44535700 2031          DB      "LODSW",0,0ADH,0
 1DA9 AD00
 1DAB 4C4F4F5000E2 2032          DB      "LOOP",0,0E2H,5
 1DB1 05
 1DB2 4C4F4F504500 2033          DB      "LOOPE",0,0E1H,5
 1DB8 E105
 1DBA 4C4F4F504E45 2034          DB      "LOOPNE",0,0E0H,5
 1DC0 00E005
 1DC3 4C4F4F504E5A 2035          DB      "LOOPNZ",0,0E0H,5
 1DC9 00E005
 1DCC 4C4F4F505A00 2036          DB      "LOOPZ",0,0E1H,5
 1DD2 E105
 1DD4 4D4F56008809 2037          DB      "MOV",0,88H,9
 1DDA 4D4F56534200 2038          DB      "MOVSB",0,0A4H,0
 1DE0 A400
 1DE2 4D4F56535700 2039          DB      "MOVSW",0,0A5H,0
 1DE8 A500
 1DEA 4D554C002003 2040          DB      "MUL",0,20H,3
 1DF0 4E4547001803 2041          DB      "NEG",0,18H,3
 1DF6 4E4F50009000 2042          DB      "NOP",0,90H,0
 1DFC 4E4F54001003 2043          DB      "NOT",0,10H,3
 1E02 4F52000801   2044          DB      "OR",0,8,1
 1E07 4F555400E60D 2045          DB      "OUT",0,0E6H,0DH
 1E0D 504F50003804 2046          DB      "POP",0,38H,4
 1E13 504F5046009D 2047          DB      "POPF",0,9DH,0
 1E19 00
 1E1A 505553480030 2048          DB      "PUSH",0,30H,4
 1E20 04
 1E21 505553484600 2049          DB      "PUSHF",0,9CH,0
R-ASSEMBLER VERSION 1.05C    8086.ASM                     99

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1E27 9C00
 1E29 52434C001002 2050          DB      "RCL",0,10H,2
 1E2F 524352001802 2051          DB      "RCR",0,18H,2
 1E35 52455000F30A 2052          DB      "REP",0,0F3H,0AH
 1E3B 5245504500F3 2053          DB      "REPE",0,0F3H,0AH
 1E41 0A
 1E42 5245504E4500 2054          DB      "REPNE",0,0F2H,0AH
 1E48 F20A
 1E4A 5245504E5A00 2055          DB      "REPNZ",0,0F2H,0AH
 1E50 F20A
 1E52 5245505A00F3 2056          DB      "REPZ",0,0F3H,0AH
 1E58 0A
 1E59 52455400C30B 2057          DB      "RET",0,0C3H,0BH
 1E5F 524F4C000002 2058          DB      "ROL",0,0,2
 1E65 524F52000802 2059          DB      "ROR",0,8,2
 1E6B 53414846009E 2060          DB      "SAHF",0,9EH,0
 1E71 00
 1E72 53414C003002 2061          DB      "SAL",0,30H,2
 1E78 53414C4300D6 2062          DB      "SALC",0,0D6H,0
 1E7E 00
 1E7F 534152003802 2063          DB      "SAR",0,38H,2
 1E85 534242001801 2064          DB      "SBB",0,18H,1
 1E8B 534341534200 2065          DB      "SCASB",0,0AEH,0
 1E91 AE00
 1E93 534341535700 2066          DB      "SCASW",0,0AFH,0
 1E99 AF00
 1E9B 534547002604 2067          DB      "SEG",0,26H,4
 1EA1 53484C002002 2068          DB      "SHL",0,20H,2
 1EA7 534852002802 2069          DB      "SHR",0,28H,2
 1EAD 53544300F900 2070          DB      "STC",0,0F9H,0
 1EB3 53544400FD00 2071          DB      "STD",0,0FDH,0
 1EB9 53544900FB00 2072          DB      "STI",0,0FBH,0
 1EBF 53544F534200 2073          DB      "STOSB",0,0AAH,0
 1EC5 AA00
 1EC7 53544F535700 2074          DB      "STOSW",0,0ABH,0
 1ECD AB00
 1ECF 535542002801 2075          DB      "SUB",0,28H,1
 1ED5 544553540000 2076          DB      "TEST",0,0,3
 1EDB 03
 1EDC 57414954009B 2077          DB      "WAIT",0,9BH,0
 1EE2 00
 1EE3 584348470086 2078          DB      "XCHG",0,86H,0FH
 1EE9 0F
 1EEA 584C41544200 2079          DB      "XLATB",0,0D7H,0
 1EF0 D700
 1EF2 584F52003001 2080          DB      "XOR",0,30H,1
 1EF8              2081  
 1EF8              2082  ; --------------------------------
 1EF8              2083  ; ASSEMBLER DIRECTIVES
 1EF8 1600         2084  DIRTBL: DW      22
R-ASSEMBLER VERSION 1.05C    8086.ASM                     100

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1EFA 425954450001 2085          DB      "BYTE",0,1,5
 1F00 05
 1F01 4442000104   2086          DB      "DB",0,1,4
 1F06 4444000404   2087          DB      "DD",0,4,4
 1F0B 4453000006   2088          DB      "DS",0,0,6
 1F10 4457000204   2089          DB      "DW",0,2,4
 1F15 44574F524400 2090          DB      "DWORD",0,3,5
 1F1B 0305
 1F1D 454E4400FF02 2091          DB      "END",0,0FFH,2
 1F23 455155000001 2092          DB      "EQU",0,0,1
 1F29 4556454E0090 2093          DB      "EVEN",0,90H,0
 1F2F 00
 1F30 464152000A05 2094          DB      "FAR",0,0AH,5
 1F36 494E4342494E 2095          DB      "INCBIN",0,0FDH,7
 1F3C 00FD07
 1F3F 494E434C5544 2096          DB      "INCLUDE",0,0FEH,7
 1F45 4500FE07
 1F49 484947480013 2097          DB      "HIGH",0,13H,5
 1F4F 05
 1F50 4C4F57001205 2098          DB      "LOW",0,12H,5
 1F56 4E4541520009 2099          DB      "NEAR",0,9,5
 1F5C 05
 1F5D 4F4646534554 2100          DB      "OFFSET",0,11H,5
 1F63 001105
 1F66 4F5247000003 2101          DB      "ORG",0,0,3
 1F6C 5041474500FC 2102          DB      "PAGE",0,0FCH,8
 1F72 08
 1F73 505452001005 2103          DB      "PTR",0,10H,5
 1F79 53484F525400 2104          DB      "SHORT",0,8,5
 1F7F 0805
 1F81 5449544C4500 2105          DB      "TITLE",0,0FBH,7
 1F87 FB07
 1F89 574F52440002 2106          DB      "WORD",0,2,5
 1F8F 05
R-ASSEMBLER VERSION 1.05C    RA.ASM                       101

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 1F90              1677  
 1F90              1678  ; --------------------------------
 1F90              1679  ; MAIN PROGRAM DATA AND TABLES
 1F90 3200         1680  PAGLEN: DW      DEFPAG
 1F92 B809C209120A 1681  ADIR:   DW      P2,P3,P4,P5
 1F98 050A
 1F9A 494E56414C49 1682  EM0:    DB      "INVALID OPERAND",0
 1FA0 44204F504552
 1FA6 414E4400
 1FAA 53594E544158 1683  EM1:    DB      "SYNTAX ERROR",0
 1FB0 204552524F52
 1FB6 00
 1FB7 494E56414C49 1684  EM2:    DB      "INVALID ADDRESSING",0
 1FBD 442041444452
 1FC3 455353494E47
 1FC9 00
 1FCA 494E56414C49 1685  EM3:    DB      "INVALID INSTRUCTION",0
 1FD0 4420494E5354
 1FD6 52554354494F
 1FDC 4E00
 1FDE 554E44454649 1686  EM4:    DB      "UNDEFINED SYMBOL",0
 1FE4 4E4544205359
 1FEA 4D424F4C00
 1FEF 204259544528 1687  EM5:    DB      " BYTE(S) OUT OF RANGE",0
 1FF5 5329204F5554
 1FFB 204F46205241
 2001 4E474500
 2005 4F504552414E 1688  EM6:    DB      "OPERAND SIZE MISMATCH",0
 200B 442053495A45
 2011 204D49534D41
 2017 54434800
 201B 434F4E535441 1689  EM7:    DB      "CONSTANT TOO LARGE",0
 2021 4E5420544F4F
 2027 204C41524745
 202D 00
 202E 4D495353494E 1690  EM8:    DB      "MISSING OPERAND",0
 2034 47204F504552
 203A 414E4400
 203E 474152424147 1691  EM9:    DB      "GARBAGE PAST END",0
 2044 452050415354
 204A 20454E4400
 204F 4455504C4943 1692  EMA:    DB      "DUPLICATE SYMBOL",0
 2055 415445205359
 205B 4D424F4C00
 2060 204E4F542041 1693  EMB:    DB      " NOT ACCESSIBLE",0
 2066 434345535349
 206C 424C4500
 2070 524553455256 1694  EMC:    DB      "RESERVED WORD MISUSE",0
 2076 454420574F52
 207C 44204D495355
R-ASSEMBLER VERSION 1.05C    RA.ASM                       102

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 2082 534500
 2085 494E56414C49 1695  EMD:    DB      "INVALID REGISTER",0
 208B 442052454749
 2091 5354455200
 2096 4C494E452054 1696  EME:    DB      "LINE TOO LONG",0
 209C 4F4F204C4F4E
 20A2 4700
 20A4 2046494C4520 1697  EMF:    DB      " FILE I/O ERROR",0
 20AA 492F4F204552
 20B0 524F5200
 20B4 41534D00     1698  DOTASM: DB      "ASM",0
 20B8 434F4D00     1699  DOTCOM: DB      "COM",0
 20BC 4C535400     1700  DOTLST: DB      "LST",0
 20C0 53594D00     1701  DOTSYM: DB      "SYM",0
 20C4 2C2050414745 1702  PAGEM:  DB      ", PAGE ",0
 20CA 2000
 20CC 504153532000 1703  PASSM:  DB      "PASS ",0
 20D2 494E3A2000   1704  INM:    DB      "IN: ",0
 20D7 4F55543A2000 1705  OUTM:   DB      "OUT: ",0
 20DD 204144445220 1706  BINLIN: DB      " ADDR BINARY",0
 20E3 42494E415259
 20E9 00
 20EA 4C494E452020 1707  SRCLIN: DB      "LINE  SOURCE",0
 20F0 534F55524345
 20F6 00
 20F7 2053594D424F 1708  SYMLIN: DB      " SYMBOL TABLE",0
 20FD 4C205441424C
 2103 4500
 2105 522D41535345 1709  AMSG:   DB      "R-ASSEMBLER"
 210B 4D424C4552
 2110 205645525349 1710          DB      " VERSION 1.05C"
 2116 4F4E20312E30
 211C 3543
 211E 0D0A24       1711          DB      13,10,36
 2121 42414420444F 1712  DOSERR: DB      "BAD DOS VERSION"
 2127 532056455253
 212D 494F4E
 2130 0D0A24       1713          DB      13,10,36
 2133 4D495353494E 1714  NOPAR:  DB      "MISSING PARAMETER"
 2139 472050415241
 213F 4D45544552
 2144 0D0A24       1715          DB      13,10,36
 2147 524120494E20 1716  USAGE:  DB      "RA IN [/SWITCH [OUT]"
 214D 5B2F53574954
 2153 4348205B4F55
 2159 545D
 215B 205B2F535749 1717          DB      " [/SWITCH [OUT]] ...]"
 2161 544348205B4F
 2167 55545D5D202E
 216D 2E2E5D
R-ASSEMBLER VERSION 1.05C    RA.ASM                       103

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 2170 0D0A         1718          DB      13,10
 2172 2F41205B4F55 1719          DB      "/A [OUT[.COM]]",9
 2178 545B2E434F4D
 217E 5D5D09
 2181 415353454D42 1720          DB      "ASSEMBLE"
 2187 4C45
 2189 0D0A         1721          DB      13,10
 218B 2F44205B4F55 1722          DB      "/D [OUT[.ASM]]",9
 2191 545B2E41534D
 2197 5D5D09
 219A 444953415353 1723          DB      "DISASSEMBLE"
 21A0 454D424C45
 21A5 0D0A         1724          DB      13,10
 21A7 2F4C205B4F55 1725          DB      "/L [OUT[.LST]]",9
 21AD 545B2E4C5354
 21B3 5D5D09
 21B6 415353454D42 1726          DB      "ASSEMBLE TO LISTING"
 21BC 4C4520544F20
 21C2 4C495354494E
 21C8 47
 21C9 0D0A         1727          DB      13,10
 21CB 2F4F20313030 1728          DB      "/O 100H",9,9
 21D1 480909
 21D4 534554204F52 1729          DB      "SET ORIGIN"
 21DA 4947494E
 21DE 0D0A         1730          DB      13,10
 21E0 2F53205B4F55 1731          DB      "/S [OUT[.SYM]]",9
 21E6 545B2E53594D
 21EC 5D5D09
 21EF 53544F524520 1732          DB      "STORE OR USE SYMBOLS"
 21F5 4F5220555345
 21FB 2053594D424F
 2201 4C53
 2203 0D0A         1733          DB      13,10
 2205 2F55205B4F55 1734          DB      "/U [OUT[.LST]]",9
 220B 545B2E4C5354
 2211 5D5D09
 2214 444953415353 1735          DB      "DISASSEMBLE TO LISTING"
 221A 454D424C4520
 2220 544F204C4953
 2226 54494E47
 222A 0D0A24       1736          DB      13,10,36
 222D              1737  
 222D              1738  ; --------------------------------
 222D              1739  ; HIDDEN BUFFERS
 222D              1740  TXTBUF: DS      100H
 232D              1741  BINBUF: DS      100H
 242D              1742  LSTBUF: DS      100H
 252D              1743  TEMP:   DS      100H
 262D              1744  TEMP2:  DS      100H
R-ASSEMBLER VERSION 1.05C    RA.ASM                       104

 ADDR BINARY       LINE  SOURCE
----------------------------------------------------------------
 272D              1745  TTLBUF: DS      100H
 282D              1746  VARS:   DS      100H
 292D              1747  INCBUF: DS      100H
 2A2D              1748  MAPBUF: DS      100H
 2B2D              1749  SYMBS:
R-ASSEMBLER VERSION 1.05C    RA.ASM                       105

 SYMBOL TABLE
----------------------------------------------------------------
       0100  AA     0B3A  AA1    0B41  AAMD   16AB  ACCID  169F
ACCMD  18CE  ACCRD  182B  ADDEX  033C  ADDEX0 0362  ADDEX1 034E
ADDEX2 0356  ADDEX3 035E  ADIOD  187A  ADIOD0 1890  ADIR   1F92
AHDL   1952  AMSG   2105  ARGS   2849  ASM    0A24  ASMCM1 0F11
ASMCM2 0F1D  ASMCM3 0F30  ASMCM4 0F36  ASMCM5 0F46  ASMCM6 0F48
ASMCMD 0EE6  ASMEQU 0A9D  ASMLBL 0A7A  ASMLIN 0A7D  ASMOER 0ADB
ASMORG 0AB1  BAH    0192  BINBUF 232D  BINLEN 2831  BINLIN 20DD
BINTBL 1AA2  BORW   0FDB  BORW1  0FF5  BORW2  100E  BPD    10C9
BXD    10CB  CALF   0368  CALF0  03AC  CC     0AE0  CCE    0B38
CCK    0B1F  CCL    0B1C  CCM    0AE2  CCQ    0B2F  CCS    0B26
CCT    0B2A  CCW    0B33  CLOSE  06E2  CLOSF  0725  CLOSF1 0735
COL    114B  COMMA  113A  D0     161F  D5     0FC7  D8     162E
D8X    163A  DECF   03AE  DEFFN  28ED  DEFORG 0100  DEFPAG 0032
DHDL   1964  DID    10C7  DIRTBL 1EF8  DISAS1 1689  DISAS2 168F
DISASM 165A  DISP   2843  DISPD  1921  DOSERR 2121  DOTASM 20B4
DOTCOM 20B8  DOTLST 20BC  DOTSYM 20C0  EM0    1F9A  EM1    1FAA
EM2    1FB7  EM3    1FCA  EM4    1FDE  EM5    1FEF  EM6    2005
EM7    201B  EM8    202E  EM9    203E  EMA    204F  EMB    2060
EMC    2070  EMD    2085  EME    2096  EMF    20A4  EQDUM0 0871
EQDUM1 0874  EQDUM2 089A  EQDUM3 08A1  EQDUMP 085D  ERR0   1348
ERR1   0D09  ERR3   0C87  ERR8   0D05  ERROR  0118  ERRORS 2859
ESCD   1849  FAIL   0D32  FAIL1  0D44  FAIL2  0D47  FLAGS  2847
FUNC   282D  G0     1618  G01D   16CC  G02D   18E3  G02D1  18FB
G03D   171C  G03DT  16D5  G04D   18FF  G04DF  191C  G0AH   1619
G0BH   15F3  G0BH1  1608  G0BH2  1613  G0CH   1578  G0CH3  158A
G0CHF  1573  G0DH   158F  G0DH0  15BC  G0DHI  15B0  G0DHO  15AE
G0EH   152D  G0EHRM 1538  G0FH   15BD  G0FHAR 15EB  G0FHM  15E0
G0FHRA 15ED  G1     12E6  G1AI   133E  G1MI   130A  G1MR   1334
G1RM   132F  G2     129D  G2B    12BD  G2CL   12D9  G2F    12D4
G2N    12DE  G3     134D  G3R    137D  G4     138D  G4M    13B1
G4P    13C9  G4PSR  13DD  G4S    13CF  G4W    13C3  G5     1483
G5S    1486  G5X    145B  G6     13E5  G6F0   1466  G6I    142B
G6IF   143E  G6IN   146B  G6IS   145C  G6R    13F8  G6RF   1415
G6RN   141A  G7     155B  G7A    156C  G7B    1566  G8     14A9
G9     14B3  G9A    14F7  G9A2   14F5  G9F0   1556  G9M    1524
G9MI   151C  G9MR   1521  G9S    150D  G9SR   1515  GRPD   18B0
GSPR   116F  GSPR0  1168  GSPR1  116A  GSPR2  118B  GV     0D7A
GV7    0DC5  GV8    0DCA  GVA    0DAB  GVC    0DA0  GVHB   0E1A
GVL    0DCF  GVL1   0DEA  GVL2   0DF6  GVL3   0DFA  GVLB   0E21
GVNS   0E09  GVQ    0DAD  GVV    0DFD  GVWO   0E26  HALL   0BD1
HALN   0BDB  HALX   0BC4  HDLTBL 19A2  HUMBUG 019A  IBAPD  1897
IHDL   1932  IMM    2845  INCBUF 292D  INCF   0380  INCF0  03A8
INCLEV 2853  INFN   286D  INM    20D2  INT3D  1864  INTD   1860
INVD   1925  LBL    0C49  LBL1   0C6A  LBL2   0C76  LBL3   0C86
LDDAT  0EBB  LDDAT1 0ECC  LDDAT2 0EDE  LDDAT3 0EE3  LINEND 08AF
LINSTA 08C5  LSTBUF 242D  LSTFN  28AD  LSTHDL 284F  LSTLIN 285D
LSTWID 0006  MACCD  1755  MAIN   0121  MAPBUF 2A2D  MM0    129C
MM8    1298  MMEML  1265  MMEMR  1267  MMODRM 1223  MNMTBL 1C02
MODRM  2842  MRD    1759  MRD1   175A  MREGL  128B  MREGR  128D
MSD    17FB  NARGS  1125  NOPAR  2133  NOSYM  0A58  NOTJMP 1711
R-ASSEMBLER VERSION 1.05C    RA.ASM                       106

 SYMBOL TABLE
----------------------------------------------------------------
OLDPC  2857  OPCODE 2841  OPEN   0643  OPEN1  0690  OPEN2  0695
OPEN3  06C1  OPENF  06C7  OPENF1 06D8  OPENF2 06DA  OUTFN  288D
OUTHDL 284D  OUTM   20D7  P2     09B8  P2F    09BF  P3     09C2
P3E    0A00  P3L    09CF  P3S    09FC  P4     0A12  P4S    0A1E
P5     0A05  PAGEM  20C4  PAGLEN 1F90  PAGNUM 285B  PARAEN 021F
PARAFN 0214  PARAG  0218  PARAM  01D5  PARANO 020F  PARANS 024C
PARANX 027B  PARAO  01A2  PARARG 020A  PARASC 01DA  PARAST 023C
PARAWF 01B2  PARAWN 026F  PASS   2855  PASSM  20CC  PC     2833
PCCHAR 0024  PREFIX 283F  PROCF  0287  PROCF1 02A8  PROCF2 02C4
PROCF3 02CA  PROCF4 02D1  PROCF5 02E9  PRUNT  09A0  PSRD   1809
RA     100F  RA0D   10BB  RA1    104B  RA2    10C0  RA8    10DB
RAD    1078  RADB   1108  RADM   109B  RADP   109E  RADR   10A4
RADW   110F  RADX   10E0  RAIB   103A  RAIW   103B  RAIX   1048
RAL    1025  RAM    1070  RAR    1050  RAS    1017  RE     0D49
REA    0D50  READ   052F  READ1  0560  READ2  0563  READ3  057C
READ4  0596  READ5  059E  READ6  05A3  READ7  05AA  READ8  05C2
REB    0D68  REC    0D6B  RED    0D71  REGS   1BDA  REGWD  1834
RELBD  1708  RELWD  183E  RETD   1876  RETFD  1868  RFN    0313
RFN1   0326  RFN2   0328  RFN3   0333  RFN4   0336  RFN5   0337
RIMMD  16B2  RIMMDB 16C9  RIMMDW 16C3  RM     1BCA  RMD    18D7
RMD1   18D8  RMID   16D2  RN     0BDD  RN0    0C0B  RN1    0BE7
RN2    0BF5  RN3    0C06  RNC    0F6E  RNC1   0F99  RNC10  0FA2
RNC16  0FA1  RNC2   0F9E  RNC4   0F9F  RNC8   0FA0  RNM    0FAE
RNM1   0FCC  RNM2   0FD5  RNMER8 0FD6  RUN    014D  RWMD   18D2
SCRAM  0999  SCREAM 094A  SCREG  119D  SCREG0 11B8  SCREM  0992
SCROME 098D  SCROOM 0972  SCROYM 0983  SCRUM  097C  SDEF   0B78
SDEF1  0B82  SDEF2  0B85  SDEF3  0BA0  SDEF4  0BB1  SDEF5  0BB6
SDEF6  0BBC  SDEF7  0BBE  SEGOFD 18A3  SEGPRE 2840  SETDCM 0CE8
SETDEN 0CF4  SETDFB 0C8C  SETDFS 0E6F  SETDMA 0C91  SETDQU 0CD4
SETDUD 0CCD  SETDVA 0CA8  SETDVW 0CBC  SETEND 0D2F  SETEQ0 0AAF
SETEQU 0A9E  SETIN1 0D1A  SETIN2 0D22  SETIN3 0D24  SETINC 0D0D
SETOR1 0AD4  SETOR2 0AD6  SETORG 0ABC  SID    10C5  SINGD  16B0
SIZES  284B  SL     0B45  SL1    0B49  SL2    0B55  SL3    0B5E
SL4    0B69  SL5    0B6E  SL6    0B77  SMD    181A  SRCLIN 20EA
START  0100  STDAT  0E76  STDAT1 0E87  STDAT2 0EA0  STDAT3 0EA5
STDAT4 0EB4  STK    2839  SW     0F49  SW1    0F56  SW2    0F6B
SW3    0F6D  SYMBS  2B2D  SYMDM0 073F  SYMDM1 0740  SYMDM2 076A
SYMDMP 0736  SYMFLG 2848  SYMFN  28CD  SYMHDL 2851  SYMLIN 20F7
SYMLS1 07F0  SYMLS2 07F2  SYMLS3 07FF  SYMLS4 0806  SYMLS5 080A
SYMLS6 083C  SYMLS7 083F  SYMLS8 085C  SYMLST 07E6  SYMSR1 078D
SYMSR2 0791  SYMSR3 0793  SYMSR4 07A0  SYMSR5 07B1  SYMSR6 07D5
SYMSRT 0783  TEMP   252D  TEMP2  262D  TTLBUF 272D  TXTBUF 222D
TXTLEN 282F  UDDUM0 08F7  UDDUM1 08FA  UDDUM2 092F  UDDUM3 0936
UDDUMP 08D8  USAGE  2147  USIZE  2837  VARS   282D  VORG   2835
WA     11BA  WA0    11DF  WA6    11DA  WA7    121E  WAB    1206
WADJ   283D  WAE    1203  WAHZ   11E6  WALZ   11E4  WARG   1111
WAZ    11EB  WDAL   17F4  WDAX   17E5  WDB    17EC  WDC    17B4
WDD    17A0  WDIR   164E  WDISP  1789  WDISP1 1795  WDL    17BF
WDW    17DD  WDX    17D8  WFN    02FD  WFN1   02FF  WFN2   030A
WHAL   16F2  WHAL0  16F9  WHAL1  1701  WHAL2  1707  WHALS  16E8
R-ASSEMBLER VERSION 1.05C    RA.ASM                       107

 SYMBOL TABLE
----------------------------------------------------------------
WHAX   1737  WHAX0  173E  WHAX1  1747  WHAX2  1754  WHAXS  172D
WLST   03C5  WLSTB  041C  WLSTE  043C  WLSTG  045E  WLSTI  046E
WLSTL  03F6  WLSTM  041A  WLSTN  0416  WLSTO  0495  WLSTP  0465
WLSTS  0442  WLSTT  03E9  WLSTX  046D  WMN    163D  WMN1   1642
WMN2   1647  WN     0C0C  WN0    0C48  WN1    0C1A  WN2    0C1C
WN4    0C40  WN5    0C34  WPTR   176F  WREG   1762  WRITE  05CC
WRITE1 05F4  WRITE2 05FE  WRITE3 0612  WRITE4 0623  WRITE5 0628
WRITE6 062A  WRITE7 063B  WRM    0E66  WROTE  0937  WROTE1 0945
WSELF  1780  WSYMA  0E2A  WSYMA1 0E53  WSYMA2 0E5F  WSYMA3 0E62
WSYMA4 0E64  WTITL1 04B7  WTITL2 04D0  WTITL3 04F2  WTITL4 0511
WTITL5 0529  WTITLE 0499  _DISP  1BC2  _G01D  1BA2  _G02D  1BAA
_G03D  1BB2  _G04D  1BBA

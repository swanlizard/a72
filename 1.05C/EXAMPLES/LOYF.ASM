	MOV	AX,13H
	INT	10H
	PUSH	ES
	MOV	AX,0A000H
	MOV	ES,AX
;	MOV	WORD [ES:1000],0C0CH
;	MOV	BYTE [ES:1002],0CH
;	MOV	BYTE [ES:1322],0CH
;	MOV	BYTE [ES:1641],0CH
;	JMP	SHORT BIG
	MOV	CX,64000
	CLD
	REP MOVSB
BIG:	MOV	BP,63680
OUTER:	MOV	DI,319
INNER:	XOR	AX,AX
	CALL	CHECK
	MOV	AH,[ES:BP+DI]
	MOV	DX,0C08H
	CMP	AL,3
	JE	LIVE
	MOV	DX,0C00H
	CMP	AL,2
	JE	LIVE
	MOV	DX,0400H
LIVE:	AND	AH,DH
	OR	AH,DL
	MOV	[ES:BP+DI],AH
	DEC	DI
	JNS	INNER
	SUB	BP,320
	JNC	OUTER
	XOR	DI,DI
SCAN:	MOV	AL,[ES:DI]
	MOV	AH,0CH
	TEST	AL,8
	JNZ	SCAN1
	XOR	AH,AH
SCAN1:	MOV	[ES:DI],AH
	INC	DI
	CMP	DI,64000
	JB	SCAN
	MOV	DX,03DAH
WAIT1:	IN	AL,DX
	TEST	AL,8
	JNZ	WAIT1
WAIT2:	IN	AL,DX
	TEST	AL,8
	JZ	WAIT2
	IN	AL,60H
	CMP	AL,1
	JNE	BIG
	POP	ES
	MOV	AX,3
	INT	10H
	RET
CHECK:	MOV	BX,BP			; BP=Y
	CMP	BX,320
	JNB	LOWY
	MOV	BX,64000
LOWY:	SUB	BX,320			; BX=Y-1
	MOV	SI,DI			; DI=X
	CMP	SI,1
	JNB	LOWX
	MOV	SI,320
LOWX:	DEC	SI			; SI=X-1
	TEST	BYTE [ES:BX+DI],4	; upper middle
	JZ	$+3
	INC	AX
	TEST	BYTE [ES:BX+SI],4	; upper left
	JZ	$+3
	INC	AX
	TEST	BYTE [ES:BP+SI],4	; middle left
	JZ	$+3
	INC	AX
	PUSH	BX
	MOV	BX,BP
	CMP	BX,63680
	JB	HIGHY
	MOV	BX,65216
HIGHY:	ADD	BX,320			; BX=Y+1
	TEST	BYTE [ES:BX+SI],4	; lower left
	JZ	$+3
	INC	AX
	TEST	BYTE [ES:BX+DI],4	; lower middle
	JZ	$+3
	INC	AX
	MOV	SI,DI
	CMP	SI,319
	JB	HIGHX
	MOV	SI,65535
HIGHX:	INC	SI			; SI=X+1
	TEST	BYTE [ES:BX+SI],4	; lower right
	JZ	$+3
	INC	AX
	TEST	BYTE [ES:BP+SI],4	; middle right
	JZ	$+3
	INC	AX
	POP	BX			; BX=up Y
	TEST	BYTE [ES:BX+SI],4	; upper right
	JZ	$+3
	INC	AX
	RET

	XOR	AX,AX
	MOV	[CHK],AX
	MOV	[INFILE],AL
	MOV	[OUTFILE],AL
	DEC	AX
	MOV	[STAK],AX
	MOV	SI,81H
	CALL	OPENF
	JNC	RDDA
	INT	20H
RDDA:	MOV	AH,3FH
	MOV	CX,80H
	MOV	DX,80H
	MOV	BX,[INHDL]
	INT	21H
	TEST	AX,AX
	JZ	RDDE
	ADD	[SIZE],AX
	ADC	WORD PTR [SIZE+2],0
	MOV	CX,AX
	CLC
	MOV	SI,80H
	XOR	AH,AH
RDDAL:	LODSB
	ADD	[CHK],AX
	LOOP	RDDAL
	JMP	SHORT RDDA
RDDE:	MOV	AX,[EXTRA]
	ADD	AX,[SIZE]
	ADD	AX,[VORG]
	MOV	[STACKP],AX
	XOR	AX,AX
	MOV	CL,4
	SUB	AX,[SIZE]
	SUB	AX,[VORG]
	SHR	AX,CL
	MOV	[EXTRA+2],AX
	DEC	CX
	MOV	AX,[EXTRA]
	CLC
	RCR	AX,1
	PUSHF
	SHR	AX,CL
	POPF
	ADC	AX,0
	MOV	[EXTRA],AX
	XOR	AX,AX
	ADD	WORD PTR [SIZE],20H
	ADC	AX,[SIZE+1]
	MOV	[SIZE+1],AX
	SHR	AX,1
	MOV	[SIZE+2],AX
	MOV	AX,[SIZE]
	AND	AX,1FFH
	JZ	NOPG
	INC	WORD PTR [SIZE+2]
NOPG:	MOV	[SIZE],AX
	MOV	SI,OFFSET EXEHDR
	MOV	CX,20H
	XOR	AH,AH
ADDHDR:	LODSB
	ADD	[CHK],AX
	LOOP	ADDHDR
	MOV	AX,[CHK]
	NEG	AX
	MOV	[CHKSUM],AX
	MOV	AX,4200H
	XOR	CX,CX
	XOR	DX,DX
	MOV	BX,[INHDL]
	INT	21H
	MOV	AH,40H
	MOV	CX,20H
	MOV	DX,OFFSET EXEHDR
	MOV	BX,[OUTHDL]
	INT	21H
WRL:	MOV	AH,3FH
	MOV	CX,80H
	MOV	DX,80H
	MOV	BX,[INHDL]
	INT	21H
	PUSH	AX
	MOV	CX,AX
	MOV	AH,40H
	MOV	DX,80H
	MOV	BX,[OUTHDL]
	INT	21H
	POP	AX
	TEST	AX,AX
	JNZ	WRL
	CALL	CLOSF
	INT	20H
OPENF:	CALL	PARAM
	JC	NOPE
	MOV	SI,OFFSET DOTCOM
	MOV	DI,OFFSET INFILE
	CLC
	CALL	ADDEXT
	MOV	SI,OFFSET DOTEXE
	MOV	DI,OFFSET OUTFILE
	CLC
	CALL	ADDEXT
	MOV	SI,OFFSET INFILE
	MOV	AX,3D00H
	MOV	DX,OFFSET INFILE+1
	INT	21H
	JC	FAIL
	MOV	[INHDL],AX
	MOV	SI,OFFSET OUTFILE
	MOV	AH,3CH
	XOR	CX,CX
	MOV	DX,OFFSET OUTFILE+1
	INT	21H
	JNC	OK
	MOV	AH,3EH
	MOV	BX,[INHDL]
	INT	21H
FAIL:	PUSH	SI
	MOV	DI,80H
	MOV	SI,OFFSET FILERR
	CALL	WRM
	POP	SI
	CALL	FINAL
	STC
	RET
NOPE:	MOV	AH,9
	MOV	DX,OFFSET USAGE
	INT	21H
	MOV	AX,[BUFFER+1]
	CMP	AX,3F2FH
	JNZ	OVER
	MOV	AH,9
	MOV	DX,OFFSET HELP
	INT	21H
OVER:	STC
	RET
OK:	MOV	[OUTHDL],AX
	MOV	SI,OFFSET INM
	MOV	DI,80H
	CALL	WRM
	MOV	SI,OFFSET INFILE
FINAL:	CALL	WRM
	MOV	AX,0A0DH
	STOSW
	MOV	AX,924H
	STOSB
	MOV	DX,80H
	INT	21H
	CLC
	RET
PARAM:	MOV	DI,OFFSET BUFFER
	CALL	GETFN
	JZ	PARAM4
	MOV	AX,[BUFFER]
	CMP	AX,2F02H
	JZ	PARAM3
	MOV	DI,OFFSET INFILE
	MOV	AL,[DI]
	TEST	AL,AL
	JZ	PARAM2
	MOV	DI,OFFSET OUTFILE
	MOV	AL,[DI]
	TEST	AL,AL
	JNZ	PARAM0
PARAM2:	PUSH	SI
	MOV	SI,OFFSET BUFFER
	MOVSB
	DEC	SI
	CALL	WRM
	POP	SI
	JMP	SHORT PARAM
PARAM4:	MOV	AL,[INFILE]
	TEST	AL,AL
	JZ	PARAM0
	MOV	AL,[OUTFILE]
	TEST	AL,AL
	JNZ	PARAM5
	MOV	SI,OFFSET INFILE
	MOV	DI,OFFSET OUTFILE
	MOVSB
	DEC	SI
	CALL	WRM
	MOV	DI,OFFSET OUTFILE
	STC
	CALL	ADDEXT
PARAM5:	MOV	AX,[STAK]
	INC	AX
	JNZ	PARAM6
	MOV	AX,200H
PARAM6:	ADD	[EXTRA],AX
	CLC
	RET
PARAM3:	MOV	AL,[BUFFER+2]
	CMP	AL,44H
	JZ	PDATA
	CMP	AL,49H
	JZ	PSIG
	CMP	AL,4FH
	JZ	PORG
	CMP	AL,53H
	JZ	PSTACK
PARAM0:	STC
	RET
PDATA:	CALL	GETVAL
	JC	PARAM0
	MOV	[EXTRA],AX
	JMP	PARAM
PSTACK:	CALL	GETVAL
	JC	PARAM0
	MOV	[STAK],AX
	JMP	PARAM
PORG:	CALL	GETVAL
	JC	PARAM0
	MOV	[VORG],AX
	JMP	PARAM
PSIG:	MOV	DI,OFFSET BUFFER
	LODSB
	TEST	AL,AL
	JZ	PARAM0
	CMP	AL,0DH
	JZ	PARAM0
	CMP	AL,20H
	JNA	PSIG
	XOR	CX,CX
	CMP	AL,22H
	JZ	PQUO
	CMP	AL,27H
	JNZ	PARAM0
PQUO:	CMP	[SI],AL
	JZ	PSTR
	MOVSB
	INC	CX
	JMP	SHORT PQUO
PSTR:	INC	SI
	CMP	CL,4
	JNA	PSGOT
	MOV	CL,4
PSGOT:	PUSH	SI
	MOV	SI,OFFSET BUFFER
	MOV	DI,OFFSET SIGN
	REPZ	MOVSB
	POP	SI
	JMP	PARAM
GETVAL:	MOV	DI,OFFSET BUFFER
	CALL	GETFN
	JZ	GETVA0
	XOR	BH,BH
	MOV	BL,[BUFFER]
	PUSH	SI
	MOV	SI,OFFSET BUFFER+1
	MOV	AL,[SI]
	CALL	RN
	POP	SI
	RET
GETVA0:	STC
	RET
RN:	SUB	AL,48
	JC	RN9
	CMP	AL,10
	JNC	RN9
	XOR	AH,AH
	CMP	BX,1
	JC	RN9
	JA	RN1
	INC	SI
	RET
RN1:	CLD
	PUSH	DX
	PUSH	BX
	PUSH	SI
	DEC	BX
	XOR	DX,DX
	MOV	AL,[BX+SI]
	MOV	CL,4
	CMP	AL,48
	JC	RN0
	CMP	AL,58
	JC	RN5
	CMP	AL,72
	JZ	RN6
	CMP	AL,79
	JZ	RN8
	CMP	AL,81
	JZ	RN4
	CMP	AL,66
	JZ	RN2
RN0:	POP	SI
	POP	BX
	POP	DX
RN9:	STC
	RET
RN2:	DEC	CX
RN4:	DEC	CX
RN8:	DEC	CX
RN6:	SHL	DX,CL
	LODSB
	SUB	AL,48
	JC	RN0
	CMP	AL,10
	JC	RN7
	SUB	AL,7
RN7:	OR	DL,AL
	DEC	BX
	JNZ	RN6
RN3:	MOV	AX,DX
	POP	SI
	POP	BX
	ADD	SI,BX
	POP	DX
	RET
RN5:	LODSB
	SUB	AL,48
	JC	RN0
	CMP	AL,10
	JNC	RN0
	SHL	DX,1
	MOV	CX,DX
	SHL	DX,1
	SHL	DX,1
	ADD	DX,CX
	ADD	DX,AX
	DEC	BX
	JNS	RN5
	JMP	SHORT RN3
GETFN:	XOR	CX,CX
	PUSH	DI
	INC	DI
	CLD
GETFN1:	LODSB
	CMP	AL,0DH
	JZ	GETFN0
	CMP	AL,21H
	JC	GETFN2
	CMP	AL,61H
	JC	GETFN3
	CMP	AL,7BH
	JNC	GETFN3
	AND	AL,0DFH
GETFN3:	INC	CX
	STOSB
	JMP	SHORT GETFN1
GETFN2:	TEST	CX,CX
	JZ	GETFN1
GETFN0:	DEC	SI
	MOV	[DI],CH
	POP	DI
	MOV	[DI],CL
	TEST	CX,CX
	RET
ADDEXT:	LAHF
	CLD
	MOV	BP,DI
	XOR	CH,CH
	MOV	CL,[DI]
	INC	DI
	MOV	AL,2EH
	REPNZ	SCASB
	JNZ	ADDXT2
	SAHF
	JNC	ADDXT0
	DEC	DI
ADDXT2:	SAHF
	JC	ADDXT1
	STOSB
	CALL	WRM
ADDXT1:	MOV	[DI],CH
	MOV	AX,DI
	SUB	AX,BP
	DEC	AX
	MOV	DI,BP
	STOSB
ADDXT0:	RET
WRM:	MOV	CL,[SI]
	XOR	CH,CH
	INC	SI
	CLD
	REPZ	MOVSB
	RET
CLOSF:	MOV	SI,OFFSET OUTM
	MOV	DI,80H
	CALL	WRM
	MOV	SI,OFFSET OUTFILE
	CALL	FINAL
	MOV	AH,3EH
	MOV	BX,[INHDL]
	INT	21H
	MOV	AH,3EH
	MOV	BX,[OUTHDL]
	INT	21H
	RET
EXEHDR	DW	5A4DH
SIZE	DW	0,0,0,2
EXTRA	DW	0,0FFFFH,0FFF0H
STACKP	DW	0
CHKSUM	DW	0
VORG	DW	100H,0FFF0H,1CH,0
SIGN	DW	0,0
DOTCOM	DB	3,"COM"
DOTEXE	DB	3,"EXE"
INM	DB	4,"IN: "
OUTM	DB	5,"OUT: "
FILERR	DB	14,"ERROR READING "
USAGE	DB	"WREXE <IN>[.COM] "
	DB	"[<OUT>[.EXE]] "
	DB	"[/O <ORG>] "
	DB	"[/D <DATA>] "
	DB	"[/S <STACK>] "
	DB	'[/I "<SIG>"]'
	DB	13,10,36
HELP	DB	"Convert COM program "
	DB	"to EXE",13,10
	DB	"/D size",9,9,"Specify size of"
	DB	" undefined data trailing"
	DB	" binary",13,10
	DB	"/I text",9,9,"4 character "
	DB	"custom signature in unused"
	DB	" field",13,10
	DB	"/O addr",9,9,"Set program "
	DB	"start offset (100H default)"
	DB	13,10
	DB	"/S size",9,9,"Specify stack "
	DB	"buffer size (512B default)"
	DB	13,10,36
STAK	DW	?
CHK	DW	?
INHDL	DW	?
OUTHDL	DW	?
INFILE	DS	20H
OUTFILE	DS	20H
BUFFER:

	CALL	OPENF
	JNC	MAIN
	INT	20H
MAIN:	TEST	BYTE PTR [FUNC],80H
	JZ	DEHEX
	TEST	BYTE PTR [FUNC],20H
	JZ	DEBIN
	MOV	AX,3030H
	MOV	DI,OFFSET EOFREC+8
	CLD
	STOSW
	STOSB
DEBIN:	MOV	AH,3FH
	MOV	CX,[LINWID]
	MOV	DX,OFFSET BUFFER
	MOV	BX,[INHDL]
	INT	21H
	TEST	AX,AX
	JZ	DEBIN0
	XOR	CX,CX
	XCHG	AX,CX
	MOV	SI,OFFSET BUFFER
	MOV	BX,[PC]
	ADD	[PC],CX
	CALL	IHEX
	MOV	AH,40H
	MOV	BX,[OUTHDL]
	INT	21H
	JMP	SHORT DEBIN
DEBIN0:	MOV	AH,40H
	MOV	CX,13
	MOV	DX,OFFSET EOFREC
	MOV	BX,[OUTHDL]
	INT	21H
DEHEX0:	CALL	CLOSF
	INT	20H
DEHEX:	MOV	DX,OFFSET BUFFER
	MOV	BX,[INHDL]
	CALL	FRLT
	JC	DEHEX0
	MOV	SI,OFFSET BUFFER
	CALL	IBIN
	MOV	AX,[PC]
	ADD	AX,CX
	XCHG	AX,[PC]
	PUSH	CX
	PUSH	DX
	TEST	BYTE PTR [FUNC],40H
	JZ	DEHEX3
	SUB	BX,AX
	JNA	DEHEX3
	MOV	CX,80H
	MOV	DI,CX
	XOR	AL,AL
	CLD
	REPZ	STOSB
DEHEX1:	MOV	CX,80H
	CMP	BX,CX
	JNC	DEHEX2
	MOV	CX,BX
DEHEX2:	MOV	AH,40H
	MOV	DX,80H
	PUSH	CX
	PUSH	BX
	MOV	BX,[OUTHDL]
	INT	21H
	POP	BX
	POP	CX
	SUB	BX,CX
	JA	DEHEX1
DEHEX3:	POP	DX
	POP	CX
	MOV	AH,40H
	MOV	BX,[OUTHDL]
	INT	21H
	JMP	SHORT DEHEX
OPENF:	XOR	AX,AX
	MOV	[INFILE],AL
	MOV	[OUTFILE],AL
	MOV	[FUNC],AL
	MOV	SI,81H
	CALL	PARAM
	JC	NOPE
	MOV	AX,OFFSET DOTHEX
	MOV	BX,OFFSET DOTCOM
	TEST	BYTE PTR [FUNC],80H
	JZ	OPENF1
	XCHG	AX,BX
OPENF1:	MOV	SI,AX
	MOV	DI,OFFSET INFILE
	CLC
	CALL	ADDEXT
	MOV	SI,BX
	MOV	DI,OFFSET OUTFILE
	CLC
	CALL	ADDEXT
	MOV	SI,OFFSET INFILE
	MOV	AX,3D00H
	MOV	DX,OFFSET INFILE+1
	INT	21H
	JC	OPENF0
	MOV	[INHDL],AX
	MOV	SI,OFFSET OUTFILE
	MOV	AH,3CH
	XOR	CX,CX
	MOV	DX,OFFSET OUTFILE+1
	INT	21H
	JNC	OK
	MOV	AH,3EH
	MOV	BX,[INHDL]
	INT	21H
OPENF0:	PUSH	SI
	MOV	DI,80H
	MOV	SI,OFFSET FILERR
	CALL	WRM
	POP	SI
	CALL	FINAL
	STC
	RET
NOPE:	MOV	AH,9
	MOV	DX,OFFSET USAGE
	INT	21H
	TEST	BYTE PTR [FUNC],10H
	JZ	OVER
	MOV	AH,9
	MOV	DX,OFFSET HELP
	INT	21H
OVER:	STC
	RET
OK:	MOV	[OUTHDL],AX
	MOV	SI,OFFSET INM
	MOV	DI,80H
	CALL	WRM
	MOV	SI,OFFSET INFILE
FINAL:	CALL	WRM
	MOV	AX,0A0DH
	STOSW
	MOV	AX,924H
	STOSB
	MOV	DX,80H
	INT	21H
	CLC
	RET
PARAM:	MOV	DI,OFFSET BUFFER
	CALL	GETFN
	JZ	PARAM4
	MOV	AX,[BUFFER]
	CMP	AX,2F02H
	JZ	PARAM3
	MOV	DI,OFFSET INFILE
	MOV	AL,[DI]
	TEST	AL,AL
	JZ	PARAM2
	MOV	DI,OFFSET OUTFILE
	MOV	AL,[DI]
	TEST	AL,AL
	JNZ	PARAM0
PARAM2:	PUSH	SI
	MOV	SI,OFFSET BUFFER
	MOVSB
	DEC	SI
	CALL	WRM
	MOVSB
	POP	SI
	JMP	SHORT PARAM
PARAM4:	MOV	AL,[INFILE]
	TEST	AL,AL
	JZ	PARAM0
	MOV	AL,[OUTFILE]
	TEST	AL,AL
	JNZ	PARAM5
	MOV	SI,OFFSET INFILE
	MOV	DI,OFFSET OUTFILE
	MOVSB
	DEC	SI
	CALL	WRM
	MOV	DI,OFFSET OUTFILE
	STC
	CALL	ADDEXT
PARAM5:	CLC
	RET
PARAM3:	MOV	AL,[BUFFER+2]
	MOV	AH,80H
	CMP	AL,3FH
	JZ	PHLP
	CMP	AL,43H
	JZ	PCPM
	CMP	AL,48H
	JZ	PHEX
	CMP	AL,4CH
	JZ	PLEN
	CMP	AL,4FH
	JZ	PORG
	CMP	AL,50H
	JZ	PPAD
PARAM0:	STC
	RET
PHLP:	SHR	AH,1
PCPM:	SHR	AH,1
PPAD:	SHR	AH,1
PHEX:	OR	[FUNC],AH
	JMP	SHORT PARAM
PLEN:	CALL	GETVAL
	JC	PARAM0
	MOV	[LINWID],AL
	JMP	PARAM
PORG:	CALL	GETVAL
	JC	PARAM0
	MOV	[PC],AX
	JMP	PARAM
GETVAL:	MOV	DI,OFFSET BUFFER
	CALL	GETFN
	JZ	GETVA0
	XOR	BH,BH
	MOV	BL,[BUFFER]
	PUSH	SI
	MOV	SI,OFFSET BUFFER+1
	MOV	AL,[SI]
	CALL	RN
	POP	SI
	RET
GETVA0:	STC
	RET
IHEX:	PUSH	AX
	MOV	DI,80H
	XOR	DX,DX
	MOV	AL,3AH
	CLD
	STOSB
	ADD	DL,CL
	MOV	AL,CL
	CALL	HALX
	ADD	DL,BH
	MOV	AL,BH
	CALL	HALX
	ADD	DL,BL
	MOV	AL,BL
	CALL	HALX
	POP	AX
	CALL	HALX
IHEXL:	LODSB
	ADD	DL,AL
	CALL	HALX
	LOOP	IHEXL
	XOR	AL,AL
	SUB	AL,DL
	CALL	HALX
	MOV	AX,0A0DH
	STOSW
	MOV	DX,80H
	MOV	CX,DI
	SUB	CX,DX
	RET
IBIN:	PUSH	SI
	MOV	DI,SI
	CLD
	LODSB
	CMP	AL,3AH
	JNZ	IBIN0
	CALL	HAXL
	MOV	CL,AL
	ADD	CH,AL
	CALL	HAXL
	MOV	BH,AL
	ADD	CH,AL
	CALL	HAXL
	MOV	BL,AL
	ADD	CH,AL
	CALL	HAXL
	MOV	DL,AL
	ADD	CH,AL
	XOR	DH,DH
	TEST	CL,CL
	JZ	IBIN2
IBIN1:	CALL	HAXL
	STOSB
	ADD	CH,AL
	DEC	CL
	JNZ	IBIN1
IBIN2:	CALL	HAXL
	ADD	CH,AL
	JNZ	IBIN0
	MOV	AX,DX
	MOV	CX,DI
	POP	DX
	SUB	CX,DX
	CLC
	RET
IBIN0:	POP	DX
	XOR	CX,CX
	XOR	AX,AX
	STC
	RET
GETFN:	XOR	CX,CX
	PUSH	DI
	INC	DI
	CLD
GETFN1:	LODSB
	CMP	AL,0DH
	JZ	GETFN0
	CMP	AL,21H
	JC	GETFN2
	CMP	AL,61H
	JC	GETFN3
	CMP	AL,7BH
	JNC	GETFN3
	AND	AL,0DFH
GETFN3:	INC	CX
	STOSB
	JMP	SHORT GETFN1
GETFN2:	TEST	CX,CX
	JZ	GETFN1
GETFN0:	DEC	SI
	MOV	[DI],CH
	POP	DI
	MOV	[DI],CL
	TEST	CX,CX
	RET
ADDEXT:	LAHF
	CLD
	MOV	BP,DI
	XOR	CH,CH
	MOV	CL,[DI]
	INC	DI
	MOV	AL,2EH
	REPNZ	SCASB
	JNZ	ADDXT2
	SAHF
	JNC	ADDXT0
	DEC	DI
ADDXT2:	SAHF
	JC	ADDXT1
	STOSB
	CALL	WRM
ADDXT1:	MOV	[DI],CH
	MOV	AX,DI
	SUB	AX,BP
	DEC	AX
	MOV	DI,BP
	STOSB
ADDXT0:	RET
CLOSF:	MOV	SI,OFFSET OUTM
	MOV	DI,80H
	CALL	WRM
	MOV	SI,OFFSET OUTFILE
	CALL	FINAL
	MOV	AH,3EH
	MOV	BX,[INHDL]
	INT	21H
	MOV	AH,3EH
	MOV	BX,[OUTHDL]
	INT	21H
	RET
FRLT:	MOV	AH,3FH
	MOV	CX,80H
	MOV	DI,DX
	PUSH	DX
	PUSH	BX
	INT	21H
	POP	BX
	POP	DX
	JC	FRLT0
	CMP	AL,1
	JC	FRLT0
	XCHG	AX,CX
	MOV	AL,0DH
	CLD
	REPNZ	SCASB
	JNZ	FRLT2
	MOV	AL,0AH
	JCXZ	FRLT1
	DEC	CX
	SCASB
	JZ	FRLT2
	DEC	DI
	INC	CX
FRLT1:	STOSB
FRLT2:	XOR	AX,AX
	SUB	AX,CX
	JZ	FRLT3
	PUSH	AX
	PUSH	DX
	CWD
	MOV	CX,4201H
	XCHG	AX,DX
	XCHG	AX,CX
	INT	21H
	POP	DX
	POP	AX
	JC	FRLT0
FRLT3:	ADD	AX,80H
	MOV	CX,DI
	SUB	CX,DX
	CLC
FRLT0:	RET
HALX:	MOV	AH,AL
	SHR	AH,1
	SHR	AH,1
	SHR	AH,1
	SHR	AH,1
	AND	AL,0FH
	CMP	AL,0AH
	JC	HALX1
	ADD	AL,7
HALX1:	XCHG	AL,AH
	CMP	AL,0AH
	JC	HALX2
	ADD	AL,7
HALX2:	ADD	AX,3030H
	STOSW
	RET
HAXL:	LODSW
	SUB	AX,3030H
	CMP	AL,0AH
	JC	HAXL1
	SUB	AL,7
HAXL1:	XCHG	AL,AH
	CMP	AL,0AH
	JC	HAXL2
	SUB	AL,7
HAXL2:	AND	AL,0FH
	SHL	AH,1
	SHL	AH,1
	SHL	AH,1
	SHL	AH,1
	OR	AL,AH
	RET
WRM:	MOV	CL,[SI]
	XOR	CH,CH
	INC	SI
	CLD
	REPZ	MOVSB
	RET
RN:	SUB	AL,48
	JC	RN9
	CMP	AL,10
	JNC	RN9
	XOR	AH,AH
	CMP	BX,1
	JC	RN9
	JA	RN1
	INC	SI
	RET
RN1:	CLD
	PUSH	DX
	PUSH	BX
	PUSH	SI
	DEC	BX
	XOR	DX,DX
	MOV	AL,[BX+SI]
	MOV	CL,4
	CMP	AL,48
	JC	RN0
	CMP	AL,58
	JC	RN5
	CMP	AL,72
	JZ	RN6
	CMP	AL,79
	JZ	RN8
	CMP	AL,81
	JZ	RN4
	CMP	AL,66
	JZ	RN2
RN0:	POP	SI
	POP	BX
	POP	DX
RN9:	STC
	RET
RN2:	DEC	CX
RN4:	DEC	CX
RN8:	DEC	CX
RN6:	SHL	DX,CL
	LODSB
	SUB	AL,48
	JC	RN0
	CMP	AL,10
	JC	RN7
	SUB	AL,7
RN7:	OR	DL,AL
	DEC	BX
	JNZ	RN6
RN3:	MOV	AX,DX
	POP	SI
	POP	BX
	ADD	SI,BX
	POP	DX
	RET
RN5:	LODSB
	SUB	AL,48
	JC	RN0
	CMP	AL,10
	JNC	RN0
	SHL	DX,1
	MOV	CX,DX
	SHL	DX,1
	SHL	DX,1
	ADD	DX,CX
	ADD	DX,AX
	DEC	BX
	JNS	RN5
	JMP	SHORT RN3
PC	DW	100H
LINWID	DW	10H
EOFREC	DB	":00000001FF",13,10
DOTCOM	DB	3,"COM"
DOTHEX	DB	3,"HEX"
INM	DB	4,"IN: "
OUTM	DB	5,"OUT: "
FILERR	DB	14,"ERROR READING "
USAGE	DB	"BINHEX [/H] [/P] [/C] [/O "
	DB	"<ORG>] [/L <LEN>] <IN> "
	DB	"[<OUT>]",13,10,36
HELP	DB	"Convert between binary "
	DB	"and Intel hex format"
	DB	13,10
	DB	"/C",9,"Use CP/M style "
	DB	"zero end record",13,10
	DB	"/H",9,"Convert from "
	DB	"binary to Intel hex",13,10
	DB	"/L len",9,"Set data "
	DB	"length per hex record",13,10
	DB	"/O addr",9,"Set start address"
	DB	" for hex file",13,10
	DB	"/P",9,"Pad address "
	DB	"gaps with zeroes",13,10,36
FUNC	DB	?
INHDL	DW	?
OUTHDL	DW	?
INFILE	DS	20H
OUTFILE	DS	20H
BUFFER:

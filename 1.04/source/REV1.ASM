; REVISING PROGRAM #1
TEMP	EQU	80H
TEMP2	EQU	0C0H
	MOV	AH,9
	MOV	DX,OFFSET AMSG
	INT	21H
	MOV	AH,30H
	INT	21H
	TEST	AL,AL
	JNZ	OKDOS
	MOV	AH,9
	MOV	DX,OFFSET DOSERR
	INT	21H
	INT	20H
OKDOS:	MOV	AX,SP
	SUB	AX,OFFSET BUFFER+80H
	MOV	[MAXMEM],AX
	MOV	SI,81H
	MOV	DI,OFFSET INFILE
	CALL	GETFN
	JNZ	MAIN
	MOV	AH,9
	MOV	DX,OFFSET USAGE
	INT	21H
	JMP	OVER
MAIN:	PUSH	SI
	MOV	SI,OFFSET INFILE
	XOR	AH,AH
	CLD
	LODSB
	ADD	SI,AX
	MOV	[SI],AH
	CALL	OPENF
	POP	SI
	MOV	DI,OFFSET INPUT+1
	CALL	GETFN
	JNZ	READ
	CALL	SIZES
	MOV	AH,9
	MOV	DX,OFFSET FORH
	INT	21H
NOREAD:	CALL	READN
	CALL	DISP
	JMP	SHORT NOREAD
READ:	MOV	AL,[INPUT+1]
	XOR	AH,AH
	MOV	DI,13
	ADD	AX,OFFSET INPUT+2
	XCHG	DI,AX
	STOSB
	CALL	READNM
	CALL	DISP
	JNC	OVER
	CALL	FSAV
OVER:	MOV	AX,4C00H
	INT	21H
DISP:	MOV	DI,OFFSET CMDLTR
	MOV	CX,CMDOFF-CMDLTR
	CLD
	REPNZ	SCASB
	JNZ	DISP1
	MOV	BX,CMDOFF-CMDLTR-1
	SUB	BX,CX
	SHL	BX,1
	ADD	BX,OFFSET CMDOFF
	JMP	[BX]
DISP1:	MOV	AX,[CMDS]
	TEST	AX,AX
	JZ	DISP2
	JMP	LEDT
DISP2:	CLC
	RET
RANGE:	MOV	DI,OFFSET BUFFER
	MOV	CX,[BUFLEN]
	XOR	DX,DX
	MOV	SI,DI
	TEST	CX,CX
	JZ	RANGE0
	MOV	AX,0A0DH
	CLD
	TEST	BX,BX
	JNZ	RANGE1
	INC	BX
RANGE1:	INC	DX
	MOV	SI,DI
	REPNZ	SCASB
	JNZ	RANGE0
	CMP	[DI],AH
	JNZ	RANGE2
	INC	DI
	DEC	CX
	JZ	RANGE0
RANGE2:	CMP	DX,BX
	JC	RANGE1
RANGE3:	TEST	BP,BP
	JZ	RANGE4
	CMP	DX,BP
	JNC	RANGE0
RANGE4:	INC	DX
	REPNZ	SCASB
	JNZ	RANGE0
	CMP	[DI],AH
	JNZ	RANGE3
	INC	DI
	DEC	CX
	JNZ	RANGE3
RANGE0:	TEST	DX,DX
	RET
LINN:	PUSH	CX
	PUSH	DX
	PUSH	DI
	MOV	DI,OFFSET INPUT
	CALL	BSTR
	MOV	AL,36
	STOSB
	MOV	AH,9
	MOV	DX,OFFSET INPUT
	INT	21H
	POP	DI
	POP	DX
	POP	CX
	RET
PAGE:	MOV	AX,[CMDS]
	TEST	AX,AX
	JNZ	PAGE1
	MOV	AX,[CUR]
PAGE1:	XOR	BX,BX
	XOR	BP,BP
	PUSH	AX
	CALL	RANGE
	POP	AX
	CMP	DX,AX
	JNC	PAGE2
	MOV	AX,DX
PAGE2:	MOV	[CMDS],AX
	ADD	AX,22
	CMP	DX,AX
	JNC	PAGE3
	MOV	AX,DX
PAGE3:	MOV	[CMDS+2],AX
	INC	AX
	CMP	DX,AX
	JNC	PAGE4
	MOV	AX,DX
PAGE4:	MOV	[CUR],AX
LIST:	MOV	BX,[CMDS]
	MOV	BP,[CMDS+2]
	TEST	BX,BX
	JZ	LIST4
	TEST	BP,BP
	JNZ	LIST4
	MOV	BP,BX
	CALL	RANGE
	JZ	LIST0
	MOV	CX,DI
	SUB	CX,SI
	MOV	AX,SI
	MOV	DI,OFFSET INPUT
	SUB	AX,OFFSET BUFFER
	CALL	LINN
	MOV	DI,OFFSET INPUT
	JMP	SHORT LIST6
LIST4:	CALL	RANGE
	JZ	LIST0
	MOV	CX,DI
	SUB	CX,SI
LIST1:	MOV	DI,OFFSET INPUT
	MOV	AX,BX
	CALL	LINN
LIST6:	MOV	AH,36
	CLD
LIST2:	LODSB
	STOSB
	CMP	AL,36
	JNZ	LIST7
	XOR	AH,AH
LIST7:	CMP	AL,13
	LOOPNZ	LIST2
	MOV	AL,10
	JCXZ	LIST3
	CMP	AL,[SI]
	JNZ	LIST3
	INC	SI
	DEC	CX
LIST3:	STOSW
LIST5:	TEST	AH,AH
	JNZ	LIST8
	PUSH	SI
	MOV	SI,OFFSET INPUT
	SUB	DI,OFFSET INPUT+1
	MOV	AH,2
LIST9:	LODSB
	MOV	DL,AL
	INT	21H
	DEC	DI
	JNZ	LIST9
	POP	SI
	JMP	SHORT LISTX
LIST8:	MOV	AH,9
	MOV	DX,OFFSET INPUT
	INT	21H
LISTX:	INC	BX
	TEST	CX,CX
	JNZ	LIST1
LIST0:	CLC
	RET
READN:	XOR	AX,AX
	MOV	[TEMP],AX
	MOV	[TEMP2],AX
	DEC	AX
	MOV	[INPUT],AX
	MOV	AH,9
	MOV	DX,OFFSET PROMPT
	INT	21H
	CALL	INP
READNM:	MOV	SI,OFFSET INPUT+1
	CLD
	LODSB
	TEST	AL,AL
	JZ	READN
	XOR	AH,AH
	ADD	AX,OFFSET INPUT+2
	MOV	BP,AX
	MOV	DI,OFFSET CMDS
	XOR	AX,AX
	MOV	CX,5
	REPZ	STOSW
	MOV	DI,OFFSET CMDS
READNL:	LODSB
	CMP	BP,SI
	JC	READNB
	CMP	AL,44
	JZ	READNC
	CMP	AL,48
	JC	READNL
	CMP	AL,58
	JC	READNN
	CMP	AL,63
	JZ	READNQ
	CMP	AL,65
	JC	READNL
	CMP	AL,91
	JC	READNI
	CMP	AL,97
	JC	READNL
	AND	AL,0DFH
READNI:	MOV	[CMDS+8],AL
	CALL	DECM
	JMP	SHORT XTPAR
READNB:	MOV	AX,[CMDS]
	TEST	AX,AX
	JZ	READN
	RET
READNC:	CALL	DECM
	MOV	AH,44
	JMP	SHORT READNL
READNN:	DEC	SI
	CALL	VAL
	STOSW
	JMP	SHORT READNL
READNQ:	MOV	[CMDS+9],AL
	CALL	DECM
	JMP	SHORT READNL
DECM:	CMP	AH,44
	JNZ	DECM0
	XOR	AX,AX
	STOSW
DECM0:	RET
XTPAR:	MOV	BX,TEMP
XTPAR3:	MOV	DI,BX
	INC	DI
	INC	DI
XTPAR1:	LODSB
	CMP	BP,SI
	JC	XTPAR0
	CMP	AL,26
	JZ	XTPAR2
	STOSB
	JMP	SHORT XTPAR1
XTPAR2:	CALL	XTPAR0
	MOV	BX,TEMP2
	JMP	SHORT XTPAR3
XTPAR0:	DEC	DI
	DEC	DI
	SUB	DI,BX
	MOV	AX,DI
	MOV	[BX],AX
	MOV	AL,[CMDS+8]
	RET
VAL:	XOR	DX,DX
	XOR	AH,AH
	CLD
VAL1:	LODSB
	SUB	AL,30H
	JC	VAL0
	CMP	AL,0AH
	JNC	VAL0
	SHL	DX,1
	MOV	CX,DX
	SHL	DX,1
	SHL	DX,1
	ADD	DX,CX
	ADD	DX,AX
	JMP	SHORT VAL1
VAL0:	MOV	AX,DX
	DEC	SI
	RET
STR:	MOV	BX,DI
	MOV	CX,10
STR1:	XOR	DX,DX
	DIV	CX
	ADD	DL,30H
	MOV	[DI],DL
	INC	DI
	TEST	AX,AX
	JNZ	STR1
	MOV	CX,DI
	SUB	CX,BX
	SHR	CX,1
	JZ	STR0
	STD
	PUSH	DI
	DEC	DI
STR2:	MOV	AL,[DI]
	XCHG	[BX],AL
	STOSB
	INC	BX
	LOOP	STR2
	POP	DI
STR0:	RET
BSTR:	PUSH	AX
	MOV	CX,6
	MOV	AL,20H
	CLD
	REPZ	STOSB
	MOV	AX,093AH
	STOSW
	POP	AX
	PUSH	DI
	SUB	DI,3
	MOV	CX,10
BSTR1:	XOR	DX,DX
	DIV	CX
	ADD	DL,30H
	MOV	[DI],DL
	DEC	DI
	TEST	AX,AX
	JNZ	BSTR1
	POP	DI
	RET
FSAV:	MOV	AH,3CH
	XOR	CX,CX
	MOV	DX,OFFSET INFILE+1
	INT	21H
	JC	FSAV0
	MOV	BX,AX
	MOV	CX,[BUFLEN]
	MOV	DX,OFFSET BUFFER
	MOV	AH,40H
	PUSH	BX
	INT	21H
	POP	BX
	MOV	AH,3EH
	INT	21H
FSAV0:	RET
LCPY:	MOV	BX,[CMDS]
	MOV	BP,[CMDS+2]
	CALL	RANGE
	SUB	DI,SI
	PUSH	SI
	PUSH	DI
	MOV	BX,[CMDS+4]
	XOR	BP,BP
	CALL	PREP
	POP	CX
	MOV	AX,[BUFLEN]
	ADD	AX,CX
	CMP	AX,[MAXMEM]
	JA	LCPY0
	XCHG	[BUFLEN],AX
	PUSH	SI
	PUSH	CX
	CALL	INSERT
	POP	CX
	POP	DI
	POP	SI
	CMP	DI,SI
	JA	LCPY1
	ADD	SI,CX
LCPY1:	CLD
	PUSH	SI
	PUSH	CX
	REPZ	MOVSB
	POP	CX
	POP	BX
	STC
	RET
LCPY0:	POP	SI
NOMEM:	MOV	AH,9
	MOV	DX,OFFSET MEMERR
	INT	21H
	CLC
	RET
LMOV:	CALL	LCPY
	MOV	DI,OFFSET BUFFER
	MOV	AX,[BUFLEN]
	SUB	BX,DI
	SUB	[BUFLEN],CX
	CALL	DELETE
	STC
	RET
LDEL:	MOV	BX,[CMDS]
	TEST	BX,BX
	JZ	LDEL0
	MOV	BP,[CMDS+2]
	TEST	BP,BP
	JNZ	LDEL1
	MOV	BP,BX
LDEL1:	CALL	PREP
	SUB	[BUFLEN],CX
	CALL	DELETE
LDEL0:	STC
	RET
FIND:	CLD
	MOV	AL,13
FIND1:	PUSH	CX
	MOV	CX,[TEMP]
	MOV	DI,TEMP+2
	PUSH	SI
	REPZ	CMPSB
	POP	SI
	JZ	FIND2
	CMP	[SI],AL
	JNZ	FIND3
	INC	BX
FIND3:	INC	SI
	POP	CX
	LOOP	FIND1
	STC
	RET
FIND2:	POP	CX
	CLC
	RET
LFND:	MOV	BX,[CMDS]
	MOV	BP,[CMDS+2]
	CALL	RANGE
	MOV	CX,DI
	SUB	CX,SI
	JNA	LFND3
LFND1:	CALL	FIND
	JC	LFND3
LFND2:	PUSH	CX
	PUSH	BX
	PUSH	SI
	MOV	BP,BX
	CALL	LIST4
	POP	SI
	POP	BX
	POP	CX
	ADD	SI,[TEMP]
	SUB	CX,[TEMP]
	JA	LFND1
	CLC
LFND3:	RET
LREP:	MOV	BX,[CMDS]
	MOV	BP,[CMDS+2]
	CALL	RANGE
	MOV	CX,DI
	SUB	CX,SI
	JNA	LREP4
LREP1:	CALL	FIND
	JC	LREP4
LREP2:	MOV	AL,[CMDS+9]
	CMP	AL,3FH
	JNZ	LREP3
	PUSH	CX
	PUSH	BX
	PUSH	SI
	MOV	BP,BX
	CALL	LIST4
	POP	SI
	POP	BX
	POP	CX
	CALL	YNCP
	JC	LREP4
	JNZ	LREP3
	ADD	SI,[TEMP]
	SUB	CX,[TEMP]
	JA	LREP1
	STC
LREP4:	RET
LREP3:	MOV	AX,[TEMP]
	MOV	DX,[TEMP2]
	MOV	DI,OFFSET TEMP2+2
	PUSH	AX
	PUSH	DX
	PUSH	CX
	CALL	INSDEL
	POP	CX
	POP	DX
	POP	AX
	JC	LREP4
	ADD	SI,DX
	SUB	CX,AX
	JA	LREP1
	STC
	RET
LOAD:	CALL	OPENF
STAT:	CALL	SIZES
	RET
OPENF:	XOR	AX,AX
	MOV	[BUFLEN],AX
	INC	AX
	MOV	[CUR],AX
	MOV	AX,3D00H
	MOV	DX,OFFSET INFILE+1
	INT	21H
	JC	OPENF0
	MOV	BX,AX
	MOV	AH,3FH
	MOV	DX,OFFSET BUFFER
	MOV	CX,[MAXMEM]
	PUSH	BX
	INT	21H
	MOV	[BUFLEN],AX
	POP	BX
	MOV	AH,3EH
	INT	21H
OPENF0:	RET
SIZES:	CLD
	MOV	DI,OFFSET INPUT
	MOV	SI,OFFSET INFILE+1
	MOV	CL,[INFILE]
	XOR	CH,CH
	REPZ	MOVSB
	MOV	AX,202CH
	STOSW
	XOR	BX,BX
	XOR	BP,BP
	PUSH	DI
	CALL	RANGE
	MOV	AX,DX
	POP	DI
	CALL	STR
	CLD
	MOV	SI,OFFSET LINES
	CALL	WRM
	MOV	AX,[MAXMEM]
	SUB	AX,[BUFLEN]
	CALL	STR
	CLD
	MOV	SI,OFFSET BYTES
	CALL	WRM
	MOV	AX,0A0DH
	STOSW
	MOV	AL,24H
	STOSB
	MOV	AH,9
	MOV	DX,OFFSET INPUT
	INT	21H
	RET
LEDT:	MOV	AX,[CMDS]
	TEST	AX,AX
	JZ	LEDT0
	MOV	[CUR],AX
	PUSH	AX
	MOV	BX,AX
	MOV	BP,AX
	CALL	PREP
	MOV	AX,[TEMP]
	TEST	AX,AX
	POP	AX
	JNZ	LEDT1
	CALL	LINN
	MOV	AL,0FFH
	MOV	AH,CL
	MOV	[INPUT],AX
	TEST	CX,CX
	JZ	LEDT1
	PUSH	CX
	PUSH	SI
	MOV	DI,OFFSET INPUT+2
	CLD
	REPZ	MOVSB
	POP	SI
	POP	CX
	MOV	DI,OFFSET INPUT+2
	MOV	AL,13
	PUSH	CX
	REPNZ	SCASB
	POP	CX
	JNZ	LEDT1
	MOV	AX,DI
	SUB	AX,OFFSET INPUT+3
	MOV	[INPUT+1],AL
LEDT1:	CALL	INP
	MOV	AX,[INPUT+1]
	CMP	AX,1A01H
	JZ	LEDT0
	XOR	AH,AH
	MOV	DX,CX
	XCHG	AX,DX
	INC	DX
	INC	DX
	MOV	DI,DX
	MOV	WORD PTR [DI+INPUT],0A0DH
	ADD	BYTE PTR [INPUT+1],2
	MOV	DI,OFFSET INPUT+2
	CALL	INSDEL
	JNC	LEDT2
	JMP	NOMEM
LEDT2:	STC
LEDT0:	RET
PREP:	CALL	RANGE
	JZ	PREP0
	INC	DX
	CMP	DX,BX
	JNZ	PREP1
	MOV	SI,DI
PREP1:	MOV	CX,DI
	MOV	BX,SI
	MOV	AX,[BUFLEN]
	MOV	DI,OFFSET BUFFER
	SUB	CX,SI
	SUB	BX,DI
	TEST	CX,CX
PREP0:	RET
INP:	PUSH	CX
	PUSH	DX
	PUSH	BX
	PUSH	SI
	PUSH	DI
	CLD
	MOV	AX,[TEMP]
	TEST	AX,AX
	JZ	INP1
	MOV	AX,[TEMP]
	MOV	SI,OFFSET TEMP+2
	MOV	DI,OFFSET INPUT+1
	MOV	CX,AX
	STOSB
	REPZ	MOVSB
	JMP	SHORT INP2
INP1:	MOV	AH,0AH
	MOV	DX,OFFSET INPUT
	INT	21H
	MOV	AH,9
	MOV	DX,OFFSET CRLF
	INT	21H
INP2:	XOR	BH,BH
	MOV	SI,OFFSET INPUT+2
	MOV	BL,[INPUT+1]
	MOV	DI,SI
	ADD	BX,SI
SCAN:	LODSB
	CMP	AL,13
	JZ	SCAN2
	CMP	AL,26
	JNZ	SCAN1
	STOSB
	CMP	SI,BX
	JNC	SCAN2
	LODSB
	CMP	AL,26
	JNZ	SCAN1
	MOV	AL,[SI]
	CMP	AL,26
	JNZ	SCAN3
	DEC	SI
	JMP	SHORT SCAN1
SCAN3:	CMP	SI,BX
	JNC	SCAN2
	LODSB
	CMP	AL,33
	JC	SCAN3
	DEC	SI
	DEC	DI
	CALL	VAL
	CMP	AX,100H
	JC	SCAN1
	STOSB
	MOV	AL,AH
SCAN1:	STOSB
	CMP	SI,BX
	JC	SCAN
SCAN2:	MOV	AX,DI
	SUB	AX,OFFSET INPUT+2
	MOV	[INPUT+1],AL
	POP	DI
	POP	SI
	POP	BX
	POP	DX
	POP	CX
	RET
PEND:	XOR	BX,BX
	XOR	BP,BP
	CALL	RANGE
	INC	DX
	MOV	BX,DI
	MOV	SI,DI
	SUB	BX,OFFSET BUFFER
	JMP	SHORT ENT1
ENT:	MOV	BX,[CMDS]
	XOR	BP,BP
	CALL	PREP
	MOV	DX,[CMDS]
	TEST	DX,DX
	JNZ	ENT1
	INC	DX
ENT1:	MOV	AX,[TEMP]
	TEST	AX,AX
	JNZ	ENT3
	MOV	AX,DX
	CALL	LINN
	MOV	AX,0FFH
	MOV	[INPUT],AX
ENT3:	PUSH	DX
	XOR	CX,CX
	CALL	LEDT1
	POP	DX
	JNC	ENT0
	MOV	BX,DI
	MOV	SI,DI
	SUB	BX,OFFSET BUFFER
	INC	DX
	MOV	AX,[TEMP]
	TEST	AX,AX
	JZ	ENT1
ENT0:	MOV	[CUR],DX
	STC
	RET
GETFN:	XOR	DX,DX
	PUSH	DI
	INC	DI
	CLD
GETFN1:	LODSB
	CMP	AL,0DH
	JZ	GETFN0
	CMP	AL,1AH
	JZ	GETFN3
	CMP	AL,20H
	JNA	GETFN2
	CMP	AL,61H
	JC	GETFN3
	CMP	AL,7AH
	JA	GETFN3
	AND	AL,0DFH
GETFN3:	INC	DX
	STOSB
	JMP	SHORT GETFN1
GETFN2:	TEST	DX,DX
	JZ	GETFN1
GETFN0:	DEC	SI
	POP	DI
	MOV	[DI],DL
	TEST	DX,DX
	RET
INSERT:	TEST	CX,CX
	JZ	INS_ER
	CMP	BX,AX
	JNC	INS_AP
	ADD	DI,AX
	DEC	DI
	MOV	SI,DI
	ADD	DI,CX
	PUSH	CX
	MOV	CX,AX
	SUB	CX,BX
	STD
	REPZ	MOVSB
	POP	CX
	JMP	SHORT INS_SB
INS_AP:	ADD	DI,AX
	ADD	CX,BX
	CLD
INS_SB:	ADD	AX,CX
	PUSH	AX
	MOV	AL,20H
	REPZ	STOSB
	POP	AX
INS_ER:	RET
DELETE:	TEST	CX,CX
	JZ	DEL_ER
	CMP	BX,AX
	JNC	DEL_ER
	MOV	DX,BX
	ADD	DX,CX
	CMP	AX,DX
	JC	DEL_ER
	ADD	DI,BX
	MOV	SI,DI
	ADD	SI,CX
	SUB	AX,CX
	MOV	CX,AX
	SUB	CX,BX
	CLD
	REPZ	MOVSB
DEL_ER:	RET
INSDEL:	MOV	CX,DX
	SUB	AX,DX
	JZ	INSDE4
	JC	INSDE2
INSDE1:	PUSH	DX
	PUSH	BX
	PUSH	SI
	PUSH	DI
	MOV	CX,AX
	MOV	BX,SI
	PUSH	CX
	MOV	DI,OFFSET BUFFER
	MOV	AX,[BUFLEN]
	SUB	BX,DI
	SUB	[BUFLEN],CX
	CALL	DELETE
	JMP	SHORT INSDE3
INSDE2:	NEG	AX
	PUSH	AX
	ADD	AX,[BUFLEN]
	CMP	AX,[MAXMEM]
	POP	AX
	JNC	INSDE0
	PUSH	DX
	PUSH	BX
	PUSH	SI
	PUSH	DI
	MOV	CX,AX
	MOV	BX,SI
	PUSH	CX
	MOV	DI,OFFSET BUFFER
	MOV	AX,[BUFLEN]
	SUB	BX,DI
	ADD	[BUFLEN],CX
	CALL	INSERT
INSDE3:	POP	AX
	POP	DI
	POP	SI
	POP	BX
	POP	CX
INSDE4:	PUSH	SI
	XCHG	SI,DI
	CLD
	REPZ	MOVSB
	POP	SI
	CLC
	RET
INSDE0:	STC
	RET
XPT:	CALL	PREPF
	MOV	BX,[CMDS]
	MOV	BP,[CMDS+2]
	CALL	RANGE
	MOV	AH,3CH
	XOR	CX,CX
	MOV	DX,TEMP+2
	INT	21H
	JC	XPT0
	MOV	BX,AX
	MOV	CX,DI
	MOV	DX,SI
	MOV	AH,40H
	SUB	CX,SI
	PUSH	BX
	INT	21H
	POP	BX
	MOV	AH,3EH
	INT	21H
	CLC
	RET
XPT0:	MOV	AH,9
	MOV	DX,OFFSET ERROR
	INT	21H
	CLC
	RET
YNCP:	MOV	AH,9
	MOV	DX,OFFSET YNC
	INT	21H
YNCP1:	XOR	AX,AX
	INT	16H
	AND	AL,0DFH
	CMP	AL,"Y"
	JZ	YNCP3
	CMP	AL,"N"
	JZ	YNCP2
	CMP	AL,"C"
	JNZ	YNCP1
	STC
	RET
YNCP3:	TEST	AL,AL
YNCP2:	CLC
	RET
WRM:	MOV	CL,[SI]
	XOR	CH,CH
	INC	SI
	CLD
	REPZ	MOVSB
	RET
FINC:	CALL	PREPF
	MOV	BX,[CMDS]
	MOV	BP,BX
	CALL	RANGE
	MOV	AX,[CMDS]
	TEST	AX,AX
	JNZ	FINC4
	MOV	SI,DI
FINC4:	MOV	AX,3D00H
	MOV	DX,TEMP+2
	INT	21H
	JC	FINC0
	MOV	BX,AX
	XOR	BP,BP
FINC1:	MOV	AH,3FH
	MOV	CX,100H
	MOV	DX,OFFSET INPUT
	PUSH	BX
	INT	21H
	POP	BX
	ADD	BP,AX
	JO	FINC2
	TEST	AX,AX
	JNZ	FINC1
	MOV	AX,[BUFLEN]
	NEG	AX
	ADD	AX,[MAXMEM]
	CMP	AX,BP
	JC	FINC3
	MOV	AX,4200H
	XOR	CX,CX
	XOR	DX,DX
	PUSH	BX
	INT	21H
	POP	BX
	MOV	CX,BP
	PUSH	CX
	PUSH	BX
	MOV	DI,OFFSET BUFFER
	MOV	BX,SI
	MOV	AX,[BUFLEN]
	ADD	[BUFLEN],CX
	SUB	BX,DI
	PUSH	SI
	CALL	INSERT
	POP	DX
	POP	BX
	POP	CX
	MOV	AH,3FH
	PUSH	BX
	INT	21H
	POP	BX
FINC2:	MOV	AH,3EH
	INT	21H
	STC
	RET
FINC3:	MOV	AH,3EH
	INT	21H
	JMP	NOMEM
FINC0:	JMP	XPT0
PREPF:	CLD
	XOR	AL,AL
	MOV	DI,TEMP+2
	ADD	DI,[TEMP]
	STOSB
	MOV	DI,[TEMP2+2]
	ADD	DI,[TEMP2]
	STOSB
	RET
HELP:	MOV	AH,9
	MOV	DX,OFFSET HLPT
	INT	21H
	CLC
	RET
CMDLTR	DB	"ACDEHILMOQRSTUWXY"
CMDOFF	DW	PEND,LCPY,LDEL,LEDT
	DW	HELP,ENT,PAGE,LMOV
	DW	LOAD,OVER,LREP,LFND
	DW	FINC,STAT,FSAV,XPT
	DW	LIST
LINES	DB	8," LINES, "
BYTES	DB	11," BYTES FREE"
AMSG	DB	"PC-72 REVISING PROGRAM #1 "
	DB	"V1.0 FOR DOS",13,10,36
USAGE	DB	"REV1 <IN> [<CMD>]",13,10,36
DOSERR	DB	"BAD DOS VERSION",13,10,36
MEMERR	DB	"NOT ENOUGH MEMORY",13,10,36
ERROR	DB	"ERROR"
CRLF	DB	13,10,36
FORH	DB	"ENTER H FOR HELP",13,10,36
YNC	DB	"[Y]ES [N]O [C]ANCEL",13,10,36
HLPT	DB	"append",9,9,"A[text]",13,10
	DB	"copy",9,9,"start,end,destC",13,10
	DB	"delete",9,9,"start,endD",13,10
	DB	"edit",9,9,"line[E[text]]",13,10
	DB	"insert",9,9,"destI[text]",13,10
	DB	"list",9,9,"[start]L",13,10
	DB	"move",9,9,"start,end,destM",13,10
	DB	"reload",9,9,"O",13,10
	DB	"quit",9,9,"Q",13,10
	DB	"replace",9,9,"[start][,end]"
	DB	"Rstring1^Zstring2",13,10
	DB	"search",9,9,"[start][,end]"
	DB	"Sstring",13,10
	DB	"import file",9,"destTfile",13,10
	DB	"status",9,9,"U",13,10
	DB	"save",9,9,"W",13,10
	DB	"export lines",9,"start,end"
	DB	"Xfile",13,10
	DB	"type",9,9,"[start][,end]Y",13,10
	DB	"To input arbitrary ASCII "
	DB	"characters, use ^Z^Zcode"
	DB	13,10,36
PROMPT	DB	"-$"
CUR	DW	?
MAXMEM	DW	?
BUFLEN	DW	?
CMDS	DS	10H
INPUT	DS	100H
INFILE	DS	80H
BUFFER:

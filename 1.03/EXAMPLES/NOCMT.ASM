		CALL OPENF
		JNC START
		RET
START:		MOV DI, 80H
		MOV BX, [INHDL]
		CALL FRLT
		OR AX, AX
		JZ OVER
		MOV DI, 81H
		MOV AL, 3BH
		MOV CL, [80H]
		XOR CH, CH
		CLD
	REPNZ	SCASB
		JNZ NOTRN
		DEC DI
SPCL:		DEC DI
		MOV AL, [DI]
		CMP AL, 20H
		JZ SPCL
		CMP AL, 9
		JZ SPCL
		INC DI
		MOV AX, 0A0DH
		STOSW
		MOV AX, DI
		SUB AX, 81H
		MOV [80H], AL
NOTRN:		MOV SI, 80H
		MOV BX, [OUTHDL]
		CALL FWLT
		JMP SHORT START
OVER:		CALL CLOSF
		RET
GETFN:		XOR DX, DX
		PUSH DI
		INC DI
		CLD
GETFN1:		LODSB
		CMP AL, 0DH
		JZ GETFN0
		CMP AL, 20H
		JNA GETFN2
		CMP AL, 61H
		JC GETFN3
		CMP AL, 7AH
		JA GETFN3
		AND AL, 0DFH
GETFN3:		INC DX
		STOSB
		JMP SHORT GETFN1
GETFN2:		OR DX, DX
		JZ GETFN1
GETFN0:		DEC SI
		POP DI
		MOV [DI], DL
		OR DX, DX
		RET
ADDEXT:		LAHF
		CLD
		MOV BP, DI
		XOR CH, CH
		MOV CL, [DI]
		INC DI
		MOV AL, 2EH
	REPNZ	SCASB
		JNZ ADDXT2
		SAHF
		JNC ADDXT0
		DEC DI
ADDXT2:		SAHF
		JC ADDXT1
		STOSB
		CALL WRM
ADDXT1:		MOV AX, DI
		SUB AX, BP
		DEC AX
		MOV DI, BP
		STOSB
ADDXT0:		RET
PREPF:		XOR AH, AH
		CLD
		LODSB
		ADD SI, AX
		MOV [SI], AH
		RET
OPENF:		MOV SI, 81H
		MOV DI, OFFSET INFILE
		CALL GETFN
		JZ NOPE
		MOV DI, OFFSET OUTFILE
		CALL GETFN
		JZ NOPE
		MOV SI, OFFSET DOTASM
		MOV DI, OFFSET INFILE
		CLC
		CALL ADDEXT
		MOV SI, OFFSET DOTASM
		MOV DI, OFFSET OUTFILE
		CLC
		CALL ADDEXT
		MOV SI, OFFSET INFILE
		CALL PREPF
		MOV SI, OFFSET OUTFILE
		CALL PREPF
		MOV AX, 3D00H
		MOV DX, OFFSET INFILE+1
		INT 21H
		JC FAIL
		MOV [INHDL], AX
		MOV SI, OFFSET OUTFILE
		MOV AH, 3CH
		XOR CX, CX
		MOV DX, OFFSET OUTFILE+1
		INT 21H
		JNC OK
		MOV AH, 3EH
		MOV BX, [INHDL]
		INT 21H
FAIL:		PUSH SI
		MOV DI, 80H
		MOV SI, OFFSET FILERR
		CALL WRM
		POP SI
		CALL FINAL
		STC
		RET
NOPE:		MOV AH, 9
		MOV DX, OFFSET USAGE
		INT 21H
		STC
		RET
OK:		MOV [OUTHDL], AX
		MOV SI, OFFSET INM
		MOV DI, 80H
		CALL WRM
		MOV SI, OFFSET INFILE
FINAL:		CALL WRM
		MOV AX, 0A0DH
		STOSW
		MOV AL, 24H
		STOSB
		MOV AH, 9
		MOV DX, 80H
		INT 21H
		CLC
		RET
FRLT:		PUSH CX
		PUSH DX
		PUSH SI
		PUSH DI
		MOV SI, DI
		INC DI
		MOV AH, 3FH
		MOV CX, 7FH
		MOV DX, DI
		PUSH BX
		INT 21H
		POP BX
		JC RDX
		OR AX, AX
		JZ RD0
		MOV DX, AX
		MOV CX, AX
		MOV AL, 0DH
		CLD
	REPNZ	SCASB
		JNZ RD0
		CMP BYTE PTR [DI], 0AH
		JNZ RD1
		INC DI
RD1:		MOV AX, DI
		SUB AX, SI
		DEC AX
		MOV [SI], AL
		PUSH AX
		NEG AX
		ADD AX, DX
		NEG AX
		CWD
		MOV CX, DX
		MOV DX, AX
		MOV AX, 4201H
		PUSH BX
		INT 21H
		POP BX
		POP AX
		JC RDX
		JMP SHORT RD2
RD0:		XOR AX, AX
		MOV [SI], AL
RD2:		CLC
RDX:		POP DI
		POP SI
		POP DX
		POP CX
		RET
FWLT:		PUSH AX
		PUSH CX
		PUSH DX
		PUSH BX
		MOV AH, 40H
		MOV CL, [SI]
		XOR CH, CH
		MOV DX, SI
		INC DX
		INT 21H
		POP BX
		POP DX
		POP CX
		POP AX
		RET
CLOSF:		MOV SI, OFFSET OUTM
		MOV DI, 80H
		CALL WRM
		MOV SI, OFFSET OUTFILE
		CALL FINAL
		MOV AH, 3EH
		MOV BX, [INHDL]
		INT 21H
		MOV AH, 3EH
		MOV BX, [OUTHDL]
		INT 21H
		RET
WRM:		MOV CL, [SI]
		XOR CH, CH
		INC SI
		CLD
	REPZ	MOVSB
		RET
DOTASM		DB 3, "ASM"
INM		DB 4, "In: "
OUTM		DB 5, "Out: "
FILERR		DB 17, "Unable to access "
USAGE		DB "NOCMT <in>[.ASM] <out>[.ASM]", 13, 10, 36
INHDL		DW ?
OUTHDL		DW ?
INFILE		DS 40H
OUTFILE		DS 40H

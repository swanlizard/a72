		MOV AH, 9
		MOV DX, OFFSET AMSG
		INT 21H
		MOV AX, 1200H
		MOV BL, 32H
		INT 10H
		CMP AL, 12H
		JNZ NOVGA
		CALL CMDLIN
		JNC PERF
NOPE:		MOV AH, 9
		MOV DX, OFFSET USAGE
		INT 21H
		MOV AX, 4C00H
		INT 21H
NOVGA:		MOV AH, 9
		MOV DX, OFFSET NOVGAM
		INT 21H
		MOV AX, 4C00H
		INT 21H
PERF:		CALL INIT
		CALL STFONT
		MOV SI, OFFSET FONT
		CALL XBUF
		CALL STSCR
		MOV SI, OFFSET SCRBUF
		CALL XBUF
		CALL DRAWUI
		MOV SI, OFFSET OKM
		CALL STATUS
		CALL LOADF
		CALL EDUPD
PERFL:		CALL TOGCUR
		XOR AH, AH
		INT 16H
		MOV [KEY], AH
		CALL TOGCUR
		CLD
		PUSH DS
		POP ES
		MOV AL, [KEY]
		MOV DI, OFFSET MOVKEY
		MOV CX, 12
	REPNZ	SCASB
		JZ DOMOVC
		MOV DI, OFFSET MODKEY
		MOV CX, 10
	REPNZ	SCASB
		JZ DOMODC
		CMP AL, 1
		JZ CHSAVE
		CMP AL, 44H
		JZ CHSAVE
		JMP PERFL
DOMOVC:		MOV BX, 11
		SUB BX, CX
		SHL BX, 1
		ADD BX, OFFSET MOVES
		CALL [BX]
		CALL EDUPD
		JMP PERFL
DOMODC:		MOV BX, 9
		SUB BX, CX
		SHL BX, 1
		ADD BX, OFFSET MODIFS
		CALL [BX]
		CALL EDUPD
		CALL LTRUPD
		OR BYTE PTR [FLAGS], 1
		MOV SI, OFFSET MODM
		CALL STATUS
		JMP PERFL
CHSAVE:		TEST BYTE PTR [FLAGS], 1
		JZ OVER
		MOV SI, OFFSET YNQ
		CALL STATUS
TRYIT:		XOR AH, AH
		INT 16H
		CMP AL, 78
		JZ OVER
		CMP AL, 110
		JZ OVER
		CMP AL, 89
		JZ SAVEIT
		CMP AL, 121
		JZ SAVEIT
		JMP PERFL
SAVEIT:		CALL SAVEF
OVER:		MOV SI, OFFSET SCRBUF
		CALL XBUF
		CALL LDSCR
		MOV SI, OFFSET FONT
		CALL XBUF
		CALL LDFONT
		MOV AX, 4C00H
		INT 21H
CURINX:		MOV AL, [CURSOR]
		MOV AH, AL
		AND AX, 0F007H
		INC AL
		AND AL, 07H
		OR AL, AH
		MOV [CURSOR], AL
		RET
CURDEX:		MOV AL, [CURSOR]
		MOV AH, AL
		AND AX, 0F007H
		DEC AL
		AND AL, 07H
		OR AL, AH
		MOV [CURSOR], AL
		RET
CURINY:		MOV AL, [CURSOR]
		MOV AH, AL
		AND AX, 0FF0H
		ADD AL, 10H
		AND AL, 0F0H
		OR AL, AH
		MOV [CURSOR], AL
		RET
CURDEY:		MOV AL, [CURSOR]
		MOV AH, AL
		AND AX, 0FF0H
		SUB AL, 10H
		AND AL, 0F0H
		OR AL, AH
		MOV [CURSOR], AL
		RET
CHRINX:		MOV AL, [CURCHR]
		MOV AH, AL
		AND AX, 0F00FH
		INC AL
		AND AL, 0FH
		OR AL, AH
		MOV [CURCHR], AL
		RET
CHRDEX:		MOV AL, [CURCHR]
		MOV AH, AL
		AND AX, 0F00FH
		DEC AL
		AND AL, 0FH
		OR AL, AH
		MOV [CURCHR], AL
		RET
CHRINY:		MOV AL, [CURCHR]
		MOV AH, AL
		AND AX, 0FF0H
		ADD AL, 10H
		AND AL, 0F0H
		OR AL, AH
		MOV [CURCHR], AL
		RET
CHRDEY:		MOV AL, [CURCHR]
		MOV AH, AL
		AND AX, 0FF0H
		SUB AL, 10H
		AND AL, 0F0H
		OR AL, AH
		MOV [CURCHR], AL
		RET
USCRM:		PUSH DS
		POP ES
		CALL GETCHR
		MOV DI, SI
		INC SI
		MOV AL, [DI]
		MOV CX, 15
		CLD
	REPZ	MOVSB
		STOSB
		RET
DSCRM:		PUSH DS
		POP ES
		CALL GETCHR
		ADD SI, 15
		MOV DI, SI
		DEC SI
		MOV AL, [DI]
		MOV CX, 15
		STD
	REPZ	MOVSB
		STOSB
		RET
LSCRM:		PUSH DS
		POP ES
		CALL GETCHR
		MOV DI, SI
		MOV CX, 16
		CLD
		LODSB
		ROL AL, 1
		STOSB
		LOOP $-4
		RET
RSCRM:		PUSH DS
		POP ES
		CALL GETCHR
		MOV DI, SI
		MOV CX, 16
		CLD
		LODSB
		ROR AL, 1
		STOSB
		LOOP $-4
		RET
HELP:		CALL STSCR
		MOV AX, 0B800H
		MOV ES, AX
		MOV DI, 650
		MOV AX, 07C9H
		CLD
		STOSW
		MOV AL, 0CDH
		MOV CX, 68
	REPZ	STOSW
		MOV AL, 0BBH
		STOSW
		ADD DI, 20
		MOV CX, 15
BOXL:		PUSH CX
		MOV AL, 0BAH
		STOSW
		XOR AL, AL
		MOV CX, 68
	REPZ	STOSW
		MOV AL, 0BAH
		STOSW
		ADD DI, 20
		POP CX
		LOOP BOXL
		MOV AL, 0C8H
		STOSW
		MOV AL, 0CDH
		MOV CX, 68
	REPZ	STOSW
		MOV AL, 0BCH
		STOSW
		MOV BX, 51DH
		MOV SI, OFFSET MTITLE
		CALL TEXT
		MOV BX, 0708H
		MOV SI, OFFSET MINFO
		CALL TEXT
		MOV BX, 0C11H
		MOV SI, OFFSET MKEYS
		CALL TEXT
		MOV BX, 131DH
		MOV SI, OFFSET ANYKEY
		CALL TEXT
		XOR AH, AH
		INT 16H
		CALL LDSCR
		RET
TEXT:		PUSH AX
		PUSH CX
		PUSH BX
		CALL CPOS
		MOV CL, [SI]
		XOR CH, CH
		JCXZ TEXT0
		MOV AH, 7
		INC SI
		CLD
TEXTL:		LODSB
		CMP AL, 13
		JZ TEXTNL
		CMP AL, 10
		JZ $+3
		STOSW
		LOOP TEXTL
		JMP SHORT TEXT0
TEXTNL:		INC BH
		CALL CPOS
		LOOP TEXTL
TEXT0:		POP BX
		POP CX
		POP AX
		RET
TOGGLE:		CALL GETCHR
		CALL GETCUR
		MOV CL, BL
		MOV BL, BH
		XOR BH, BH
		MOV AL, 80H
		ROR AL, CL
		XOR [BX+SI], AL
		RET
CLEAR:		CALL GETCHR
		MOV DI, SI
		XOR AX, AX
		MOV CX, 8
		CLD
	REPZ	STOSW
		RET
INVERT:		CALL GETCHR
		MOV DI, SI
		MOV CX, 8
		CLD
INVL:		LODSW
		NOT AX
		STOSW
		LOOP INVL
		RET
COPY:		CALL GETCHR
		MOV DI, OFFSET BUFFER
		MOV CX, 8
		CLD
	REPZ	MOVSW
		RET
PASTE:		CALL GETCHR
		MOV DI, SI
		MOV SI, OFFSET BUFFER
		MOV CX, 8
		CLD
	REPZ	MOVSW
		RET
HFLIP:		CALL GETCHR
		MOV DI, SI
		MOV CX, 16
		CLD
HFL:		LODSB
		PUSH CX
		MOV AH, AL
		MOV CX, 8
		RCL AH, 1
		RCR AL, 1
		LOOP $-4
		POP CX
		STOSB
		LOOP HFL
		RET
VFLIP:		CALL GETCHR
		MOV DI, SI
		ADD DI, 15
		MOV CX, 8
VFL:		MOV AL, [SI]
		XCHG [DI], AL
		MOV [SI], AL
		INC SI
		DEC DI
		LOOP VFL
		RET
TOGCUR:		CALL GETCUR
		CALL CPOS
		MOV AL, 77H
		PUSH BX
		XOR BH, BH
		SHL BL, 1
		ADD DI, BX
		POP BX
		ADD DI, 323
		XOR ES:[DI], AL
		XOR ES:[DI+2], AL
		MOV BL, [CURCHR]
		MOV BH, BL
		MOV CL, 4
		SHR BH, CL
		AND BL, 0FH
		CALL CPOS
		MOV AL, 77H
		ADD DI, 363
		XOR ES:[DI], AL
		RET
GETCHR:		PUSH AX
		MOV AL, [CURCHR]
		XOR AH, AH
		MOV CL, 4
		SHL AX, CL
		ADD AX, OFFSET FONT
		MOV SI, AX
		POP AX
		RET
GETCUR:		PUSH AX
		MOV AL, [CURSOR]
		MOV AH, AL
		MOV CL, 4
		SHR AH, CL
		AND AL, 0FH
		MOV BX, AX
		POP AX
		RET
CPOS:		MOV DI, 0B800H
		MOV ES, DI
		PUSH BX
		XOR BL, BL
		MOV DI, BX
		XCHG BL, BH
		SHR DI, 1
		SHR DI, 1
		SHL BX, 1
		SHL BX, 1
		SHL BX, 1
		SHL BX, 1
		ADD DI, BX
		POP BX
		PUSH BX
		XOR BH, BH
		ADD DI, BX
		SHL DI, 1
		POP BX
		CLD
		RET
LDSCR:		MOV DI, 0B800H
		MOV ES, DI
		XOR DI, DI
		MOV SI, OFFSET SCRBUF
		MOV CX, 2000
		CLD
	REPZ	MOVSW
		RET
STSCR:		PUSH DS
		POP ES
		PUSH DS
		MOV SI, 0B800H
		MOV DS, SI
		XOR SI, SI
		MOV DI, OFFSET SCRBUF
		MOV CX, 2000
		CLD
	REPZ	MOVSW
		POP DS
		RET
DRAWUI:		MOV DI, 0B800H
		MOV ES, DI
		MOV AX, 700H
		XOR DI, DI
		MOV CX, 2000
		CLD
	REPZ	STOSW
		MOV DI, 42
		MOV CX, 10
HEXDL1:		MOV AL, 58
		SUB AL, CL
		STOSW
		LOOP HEXDL1
		MOV CX, 6
HEXDL2:		MOV AL, 71
		SUB AL, CL
		STOSW
		LOOP HEXDL2
		MOV DI, 160
		MOV AL, 0C9H
		STOSW
		MOV CX, 16
		MOV AL, 0CDH
	REPZ	STOSW
		MOV AL, 0BBH
		STOSW
		ADD DI, 4
		MOV AL, 0DAH
		STOSW
		MOV CX, 16
		MOV AL, 0C2H
	REPZ	STOSW
		MOV AL, 0BFH
		STOSW
		ADD DI, 84
		MOV CX, 16
BOXDL:		MOV AL, 0BAH
		STOSW
		ADD DI, 32
		STOSW
		INC DI
		INC DI
		MOV AL, 16
		SUB AL, CL
		CMP AL, 9
		JZ $+4
		ADD AL, 7
		ADD AL, 30H
		STOSW
		MOV AL, 0C3H
		STOSW
		ADD DI, 32
		MOV AL, 0B4H
		STOSW
		ADD DI, 84
		LOOP BOXDL
		MOV AL, 0C8H
		STOSW
		MOV CX, 16
		MOV AL, 0CDH
	REPZ	STOSW
		MOV AL, 0BCH
		STOSW
		ADD DI, 4
		MOV AL, 0C0H
		STOSW
		MOV CX, 16
		MOV AL, 0C1H
	REPZ	STOSW
		MOV AL, 0D9H
		STOSW
		MOV SI, OFFSET MFKEYS
		MOV BX, 1800H
		CALL TEXT
		MOV DI, 3840
		MOV CX, 10
		MOV AL, 70H
CLRDL:		ADD DI, 5
		STOSB
		INC DI
		STOSB
		INC DI
		STOSB
		INC DI
		STOSB
		INC DI
		STOSB
		INC DI
		STOSB
		LOOP CLRDL
		MOV CX, 100H
		MOV DI, 362
CHARL:		MOV AX, 100H
		SUB AX, CX
		STOSB
		INC DI
		AND AL, 0FH
		CMP AL, 0FH
		JNZ CHARLL
		ADD DI, 128
CHARLL:		LOOP CHARL
		RET
LTRUPD:		CALL GETCHR
		MOV BP, SI
		MOV AX, 1110H
		MOV CX, 1
		MOV DL, [CURCHR]
		XOR DH, DH
		MOV BX, 1000H
		PUSH DS
		POP ES
		INT 10H
		RET
EDUPD:		MOV AX, 0B800H
		MOV ES, AX
		CALL GETCHR
		MOV CX, 16
		MOV DI, 322
		CLD
EDUPDL:		LODSB
		MOV AH, AL
		PUSH CX
		MOV CX, 8
EDUPL2:		RCL AH, 1
		SALC
		AND AL, 0B0H
		STOSB
		INC DI
		STOSB
		INC DI
		LOOP EDUPL2
		POP CX
		ADD DI, 128
		LOOP EDUPDL
		RET
LDFONT:		MOV AX, 1110H
		MOV CX, 100H
		XOR DX, DX
		MOV BX, 1000H
		MOV BP, OFFSET FONT
		PUSH DS
		POP ES
		INT 10H
		RET
STFONT:		MOV AX, 1130H
		MOV BH, 6
		INT 10H
		PUSH DS
		PUSH ES
		PUSH DS
		POP ES
		POP DS
		MOV SI, BP
		MOV DI, OFFSET FONT
		XOR CH, CH
		MOV CH, CL
		SHR CX, 1
		CLD
	REPZ	MOVSW
		POP DS
		RET
INIT:		MOV DI, OFFSET FONT
		MOV CX, 2000H
		XOR AX, AX
		CLD
	REPZ	STOSW
		MOV [FLAGS], AL
		RET
XBUF:		MOV DI, SI
		ADD DI, 1000H
		MOV CX, 800H
		CLD
XBUFL:		MOV AX, [DI]
		XCHG AX, [SI]
		STOSW
		INC SI
		INC SI
		LOOP XBUFL
		RET
SAVEF:		MOV SI, OFFSET SAVEM
		CALL STATUS
		MOV AH, 3CH
		XOR CX, CX
		MOV DX, OFFSET FNAME
		INT 21H
		JC SAVEF0
		PUSH AX
		MOV BX, AX
		MOV AH, 40H
		MOV CX, 19
		MOV DX, OFFSET HEADER
		INT 21H
		MOV AH, 40H
		MOV CX, 1000H
		MOV DX, OFFSET FONT
		POP BX
		PUSH BX
		INT 21H
		POP BX
		MOV AH, 3EH
		INT 21H
		MOV SI, OFFSET OKM
		CALL STATUS
		MOV BYTE PTR [FLAGS], 0
		RET
SAVEF0:		MOV SI, OFFSET SVERM
		JMP STATUS
LOADF:		MOV SI, OFFSET LOADM
		CALL STATUS
		MOV AX, 3D00H
		MOV DX, OFFSET FNAME
		INT 21H
		JC LOADF0
		PUSH AX
		MOV BX, AX
		MOV AH, 3FH
		MOV CX, 19
		MOV DX, OFFSET DUMMY
		INT 21H
		MOV CX, 19
		MOV SI, OFFSET DUMMY
		MOV DI, OFFSET HEADER
		PUSH DS
		POP ES
		CLD
	REPZ	CMPSB
		JNZ CLOSEF
		POP BX
		MOV AH, 3FH
		MOV CX, 1000H
		MOV DX, OFFSET FONT
		PUSH BX
		INT 21H
		POP BX
		PUSH AX
CLOSEF:		MOV AH, 3EH
		INT 21H
		POP AX
		CMP AX, 1000H
		JC LOADF0
		MOV SI, OFFSET OKM
		CALL STATUS
		CALL LDFONT
		RET
LOADF0:		CALL STFONT
		CALL LDFONT
		MOV SI, OFFSET LDERM
		JMP STATUS
CMDLIN:		MOV SI, 80H
		CLD
		LODSB
		XOR AH, AH
		MOV CX, AX
		JCXZ CMDL0
		MOV DI, OFFSET FNAME
CMDSL:		LODSB
		CMP AL, 20H
		JZ $+4
		CMP AL, 9
		LOOPZ CMDSL
		JZ CMDL0
		DEC SI
		INC CX
CMDLL:		LODSB
		CMP AL, 20H
		JC CMDLN
		PUSH CX
		PUSH DI
		MOV CX, 15
		MOV DI, OFFSET INVALID
	REPNZ	SCASB
		POP DI
		POP CX
		JZ CMDLN
		CMP AL, 95
		JC CMDLU
		CMP AL, 122
		JA CMDLU
		AND AL, 0DFH
CMDLU:		STOSB
		LOOP CMDLL
CMDLN:		CMP DI, OFFSET FNAME
		JNA CMDL0
		XOR AL, AL
		STOSB
		CLC
		RET
CMDL0:		STC
		RET
STATUS:		MOV AX, 0B800H
		MOV ES, AX
		MOV DI, 3680
		MOV CX, 80
		MOV AX, 7000H
		CLD
	REPZ	STOSW
		MOV DI, 3680
		PUSH SI
		MOV SI, OFFSET FNAME
STATL:		LODSB
		OR AL, AL
		JZ $+5
		STOSW
		JMP SHORT STATL
		MOV AL, 3AH
		STOSW
		INC DI
		INC DI
		POP SI
		LODSB
		XOR AH, AH
		MOV CX, AX
STATL2:		LODSB
		STOSB
		INC DI
		LOOP STATL2
		RET
HEADER:		MOV AX, 1110H
		MOV CX, 100H
		XOR DX, DX
		MOV BX, 1000H
		MOV BP, 113H
		PUSH DS
		POP ES
		INT 10H
		RET
FLAGS		DB 0
CURCHR		DB 0
CURSOR		DB 0
KEY		DB 0
FILE		DW 0
KBDBUF		DW 0
MOVKEY		DB 48H, 50H, 4BH, 4DH, 47H, 4FH, 53H, 51H
		DB 3FH, 3CH, 3DH, 3BH
MOVES		DW CURDEY, CURINY, CURDEX, CURINX
		DW CHRDEY, CHRINY, CHRDEX, CHRINX
		DW COPY, SAVEF, LOADF, HELP
MODKEY		DB 39H, 41H, 43H, 3EH, 11H, 1FH, 1EH, 20H, 40H, 42H
MODIFS		DW TOGGLE, HFLIP, VFLIP, INVERT
		DW USCRM, DSCRM, LSCRM, RSCRM
		DW PASTE, CLEAR
KBDLOC		DB 0, 1CH, 0, 40H
OKM		DB 2, "Ok"
SAVEM		DB 6, "Saving"
LOADM		DB 7, "Loading"
MODM		DB 22, "File has been modified"
LDERM		DB 18, "Couldn't load file"
SVERM		DB 18, "Couldn't save file"
YNQ		DB 31, "Save file before exiting? (Y/N)"
INVALID		DB 22H, "*+,/:;<=>?\[]|"
MTITLE		DB 24, "VGA ROM BIOS font editor"
MINFO		DB 217
		DB "Edits the ROM BIOS character font"
		DB " and updates it on the fly.", 13, 10
		DB "Saves font files with a script"
		DB " header.  These can then be", 13, 10
		DB "executed at the DOS prompt"
		DB " to change the system font if saved", 13, 10
		DB "or renamed with a .COM extension."
MKEYS		DB 233
		DB "Arrow keys .....................  move cursor", 13, 10
		DB "Home/End/Delete/PgDn ....... select character", 13, 10
		DB "Space  ......................... toggle point", 13, 10
		DB "W/S/A/D  ................... scroll character", 13, 10
		DB "F10 or Esc ............................. quit"
ANYKEY		DB 22, "Press any key to close"
MFKEYS		DB 80
		DB " 1Help   2Save   3Reload 4Invert 5Copy  "
		DB " 6Paste  7HFlip  8Clear  9VFlip 10Quit  "
AMSG		DB "VGA ROM BIOS font editor by PC-72"
		DB 13, 10, 36
USAGE		DB "Syntax:  VGAFONT <filename>", 13, 10, 36
NOVGAM		DB "Error: VGA not detected.", 13, 10, 36
FNAME		DS 16
BUFFER		DS 16
DUMMY		DS 20
FONT		DS 1000H
FNT2		DS 1000H
SCRBUF		DS 1000H
SCRBF2		DS 1000H

; Programmed by PC-72
; Thank you Alexey Pajitnov for inventing this digital drug
		CALL INIT
		CALL NUMBER
		CALL NEWPC
		CALL GETPC
MAINL:		CALL CLRKBD
		CALL REACT
		CALL DRAW
		CALL VRET
		IN AL, 60H
		CMP AL, [KEY]
		JZ GDOWN
		MOV [KEY], AL
		MOV DI, OFFSET KEYS
		MOV CX, 7;9
		CLD
	REPNZ	SCASB
		JZ GETKEY
GDOWN:		INC BYTE PTR [TICK]
		MOV AL, [MAX]
		CMP [TICK], AL
		JC MAINL
		XOR AL, AL
		MOV [TICK], AL
		CALL DOWN
		JNC MAINL
GNEW:		CALL NEWPC
		CALL GETPC
		JNC MAINL
		JMP QUIT
GETKEY:		SUB DI, OFFSET KEYS+1
		SHL DI, 1
		ADD DI, OFFSET COMMS
		MOV BP, [COL]
		CALL [DI]
		JC GNEW
		CMP AL, "Y"
		JNZ GDOWN
		JMP QUIT
NUMBER:		PUSH ES
		MOV AX, 0B800H
		MOV ES, AX
		MOV AX, [SCORE]
		MOV DI, 1036
		MOV CX, 5
		MOV BX, 10
NUML:		XOR DX, DX
		DIV BX
		ADD DL, 30H
		MOV ES:[DI], DL
		DEC DI
		DEC DI
		LOOP NUML
;		MOV DI, 1508
;		MOV AL, [LEVEL]
;		AAM
;		OR AX, 3030H
;		XCHG AL, AH
;		STOSB
;		INC DI
;		MOV AL, AH
;		STOSB
		POP ES
		RET
DISP:		SALC
		AND AL, 177
		PUSH ES
		PUSH BX
		PUSH AX
		MOV AX, 0B800H
		MOV ES, AX
		POP AX
		XCHG BL, BH
		SHR BX, 1
		MOV DI, BX
		SHR DI, 1
		SHR DI, 1
		ADD DI, BX
		MOV BX, CX
		SHL BX, 1
		SHL BX, 1
		ADD DI, BX
		POP BX
		STOSB
		INC DI
		STOSB
		POP ES
		RET
CLRKBD:		PUSH ES
		MOV AX, 40H
		MOV ES, AX
		MOV AX, ES:[1AH]
		MOV ES:[1CH], AX
		POP ES
		RET
VRET:		MOV DX, 3DAH
VRET1:		IN AL, DX
		AND AL, 8
		JNZ VRET1
VRET2:		IN AL, DX
		AND AL, 8
		JZ VRET2
		RET
REACT:		XOR DX, DX
		MOV SI, OFFSET FIELD+2
		MOV CX, 20
REACTL:		MOV AX, [SI]
		CMP AX, 0FFFFH
		JNZ REACTS
		INC DX
		MOV AX, 0E007H
		MOV [SI], AX
REACTS:		INC SI
		INC SI
		LOOP REACTL
		OR DX, DX
		JNZ CALC
		RET
CALC:		MOV CX, DX
		DEC CX
		SHL CL, 1
		MOV AX, 1
		SHL AX, CL
		ADD [SCORE], AX
		CALL NUMBER
		CALL GETLEV
		MOV SI, OFFSET FIELD+40
		MOV CX, 20
COMPL:		PUSH CX
		CALL LMT
		POP CX
		JC COMP0
		CMP SI, DI
		JA COMPS
		MOV AX, [SI]
		XCHG AX, [DI]
		MOV [SI], AX
COMPS:		DEC SI
		DEC SI
		LOOP COMPL
COMP0:		RET
LMT:		MOV DI, OFFSET FIELD+40
		MOV CX, 20
LMTL:		MOV AX, [DI]
		CMP AX, 0E007H
		JZ LMTX
		DEC DI
		DEC DI
		LOOP LMTL
		STC
		RET
LMTX:		CLC
		RET
DRAW:		MOV CX, 22
DRAWVL:		PUSH CX
		MOV BX, CX
		MOV SI, CX
		DEC SI
		DEC BX
		SHL SI, 1
		MOV DX, [SI+FIELD]
		MOV CX, 16
		MOV AL, [ROW]
		CMP BL, AL
		JC DRAWHL
		ADD AL, 3
		CMP BL, AL
		JA DRAWHL
		MOV AL, BL
		SUB AL, [ROW]
		SHL AL, 1
		XOR AH, AH
		MOV SI, AX
		OR DX, [SI+CUR]
DRAWHL:		PUSH CX
		RCR DX, 1
		DEC CX
		CALL DISP
		POP CX
		LOOP DRAWHL
		POP CX
		LOOP DRAWVL
		PUSH ES
		MOV AX, 0B800H
		MOV ES, AX
		MOV AL, [NEXT]
		MOV BX, OFFSET PIECE
		XLATB
		MOV AH, AL
		CLD
		MOV DI, 388
		MOV CX, 4
NEXT1:		RCL AH, 1
		SALC
		AND AL, 177
		STOSB
		INC DI
		STOSB
		INC DI
		LOOP NEXT1
		ADD DI, 144
		MOV CX, 4
NEXT2:		RCL AH, 1
		SALC
		AND AL, 177
		STOSB
		INC DI
		STOSB
		INC DI
		LOOP NEXT2
		POP ES
		RET
;UP:		DEC BYTE PTR [ROW]
;		CALL GETPC
;		JC OLDRC
;		RET
RIGHT:		INC BYTE PTR [COL]
		CALL GETPC
		JC OLDRC
		RET
LEFT:		DEC BYTE PTR [COL]
		CALL GETPC
		JC OLDRC
		RET
OLDRC:		MOV [COL], BP
		CALL GETPC
		CLC
		RET
DOWN:		INC BYTE PTR [ROW]
		CALL GETPC
		JC GETFIX
		RET
DROP:		INC BYTE PTR [ROW]
		CALL GETPC
		JNC DROP
GETFIX:		DEC BYTE PTR [ROW]
		CALL GETPC
		JMP FIX
ROTL:		MOV BP, [ROT]
		DEC BYTE PTR [ROT]
;		MOV BYTE PTR [TICK], 0
		CALL GETPC
		JC NOROT
		RET
ROTR:		MOV BP, [ROT]
		INC BYTE PTR [ROT]
;		MOV BYTE PTR [TICK], 0
		CALL GETPC
		JC NOROT
		RET
NOROT:		MOV [ROT], BP
		CALL GETPC
		CLC
		RET
INIT:		CLD
		XOR AH, AH
		INT 1AH
		MOV [RANDS], DX
		XOR [RANDS], CX
		MOV DI, OFFSET FIELD
		MOV AX, 0FFFFH
		STOSW
		MOV CX, 20
		MOV AX, 0E007H
		CLD
	REPZ	STOSW
		MOV AX, 0FFFFH
		STOSW
		XOR AX, AX
		MOV [KEY], AL
		MOV [LEVEL], AL
		MOV [SCORE], AX
		CALL GETLEV
		CALL SHUF
		PUSH DS
		MOV AX, 0B800H
		MOV DS, AX
		XOR SI, SI
		MOV DI, OFFSET SCNBUF
		MOV CX, 2000
		CLD
	REPZ	MOVSW
		POP DS
		PUSH ES
		MOV ES, AX
		XOR DI, DI
		MOV CX, 2000
		MOV AX, 720H
	REPZ	STOSW
		MOV SI, OFFSET STATUS
		MOV DI, 228
		CALL TEXT
		POP ES
		RET
NEWPC:		XOR AX, AX
		MOV [ROT], AL
		MOV [ROW], AL
		MOV AL, 6
		MOV [COL], AL
		MOV AL, [NEXT]
		MOV [PCE], AL
SHUF:		MOV AX, 7
		CALL RAND
		INC AX
		MOV [NEXT], AL
		RET
GETPC:		MOV AX, [ROT]
		AND AL, 3
		SHL AL, 1
		SHL AL, 1
		SHL AL, 1
		ADD AL, AH
		MOV BX, OFFSET PIECE
		XLATB
		MOV DH, AL
		MOV AL, [ROT]
		TEST AL, 1
		JZ GETPCH
		MOV CX, 4
		MOV DI, OFFSET CUR
		CLD
		XOR AL, AL
GPCVL:		MOV AH, DH
		AND AH, 0C0H
		STOSW
		SHL DH, 1
		SHL DH, 1
		LOOP GPCVL
		JMP SHORT GETPCV
GETPCH:		MOV AH, DH
		XOR AL, AL
		XOR DL, DL
		MOV CL, 4
		SHL DX, CL
		AND AH, 0F0H
		MOV [CUR+2], AX
		MOV [CUR+4], DX
		XOR AX, AX
		MOV [CUR], AX
		MOV [CUR+6], AX
GETPCV:		MOV CL, [COL]
		OR CL, CL
		JZ COLL
		ROR WORD PTR [CUR], CL
		ROR WORD PTR [CUR+2], CL
		ROR WORD PTR [CUR+4], CL
		ROR WORD PTR [CUR+6], CL
COLL:		MOV AL, [ROW]
		XOR AH, AH
		SHL AL, 1
		ADD AX, OFFSET FIELD
		MOV DI, AX
		MOV SI, OFFSET CUR
		MOV CX, 4
		CLD
COLLL:		LODSW
		AND AX, [DI]
		JNZ COLL0
		INC DI
		INC DI
		LOOP COLLL
		CLC
		RET
COLL0:		STC
		RET
FIX:		MOV AL, [ROW]
		XOR AH, AH
		SHL AL, 1
		ADD AX, OFFSET FIELD
		MOV DI, AX
		MOV SI, OFFSET CUR
		MOV CX, 4
		CLD
FIXL:		LODSW
		OR [DI], AX
		INC DI
		INC DI
		LOOP FIXL
		STC
		RET
RAND:		PUSH CX
		PUSH DX
		PUSH AX
		MOV AX, [RANDS]
		MOV DX, AX
		MOV CL, 7
		SHL DX, CL
		XOR AX, DX
		MOV DX, AX
		ADD CL, 2
		SHR DX, CL
		XOR AX, DX
		MOV DX, AX
		DEC CL
		SHL DX, CL
		XOR AX, DX
		XOR DX, DX
		MOV [RANDS], AX
		POP CX
		OR CX, CX
		JZ RAND0
		DIV CX
RAND0:		MOV AX, DX
		POP DX
		POP CX
		RET
GETLEV:		XOR CX, CX
		MOV AX, [SCORE]
		CMP AX, 10
		JC GETLV0
		INC CX
		CMP AX, 50
		JC GETLV0
		INC CX
		CMP AX, 100
		JC GETLV0
		INC CX
		CMP AX, 500
		JC GETLV0
		INC CX
		CMP AX, 1000
		JC GETLV0
		INC CX
		CMP AX, 5000
		JC GETLV0
		INC CX
		CMP AX, 10000
		JC GETLV0
		INC CX
		CMP AX, 50000
		JC GETLV0
		INC CX
GETLV0:		MOV [LEVEL], CL
		MOV AL, 10
		MUL CL
		NEG AX
		ADD AX, 90
		MOV [MAX], AL
		RET
TEXT:		MOV CL, [SI]
		XOR CH, CH
		MOV AH, 7
		MOV BP, DI
		INC SI
		CLD
TEXTL:		LODSB
		CMP AL, 13
		JZ TEXTNL
		CMP AL, 10
		JZ $+3
		STOSW
		LOOP TEXTL
		JMP SHORT TEXT0
TEXTNL:		ADD BP, 160
		MOV DI, BP
		LOOP TEXTL
TEXT0:		RET
PAUSE:		PUSH ES
		MOV AX, 0B800H
		MOV ES, AX
		MOV SI, OFFSET PAUSED
		MOV DI, 1622
		CALL TEXT
		POP ES
		CALL CLRKBD
		XOR AH, AH
		INT 16H
		AND AL, 0DFH
		CLC
		RET
QUIT:		PUSH ES
		MOV AX, 0B800H
		MOV ES, AX
		MOV SI, OFFSET GOVER
		MOV DI, 1622
		CALL TEXT
		CALL CLRKBD
		XOR AH, AH
		INT 16H
		XOR DI, DI
		MOV SI, OFFSET SCNBUF
		MOV CX, 2000
		CLD
	REPZ	MOVSW
		POP ES
		RET
PIECE		DB 0, 0F0H, 66H, 0C6H, 6CH, 4EH, 8EH, 2EH
		DB 0, 0AAH, 3CH, 78H, 0B4H, 0B8H, 0E8H, 0ACH
		DB 0, 0F0H, 66H, 0C6H, 6CH, 0E4H, 0E2H, 0E8H
		DB 0, 0AAH, 3CH, 78H, 0B4H, 74H, 5CH, 0D4H
KEYS		DB 4BH, 50H, 4DH, 48H, 1, 39H, 1CH;, 0FH, 0EH
COMMS		DW LEFT, DOWN, RIGHT, ROTL, PAUSE, ROTR, DROP;, UP, SHUF
STATUS		DB 75;83
		DB "NEXT", 13, 13, 13, 13
		DB "SCORE", 13, 13, 13
;		DB "LEVEL", 13, 13, 13
		DB 32, 24, "   TURN", 13
		DB 27, 197, 26, "  MOVE", 13
		DB 32, 25, "   DOWN", 13, 13
		DB 32, 27, 217, "  DROP", 13, 13
		DB "PRESS ESC TO QUIT"
PAUSED		DB 11, "QUIT? (Y/N)"
GOVER		DB 11, " GAME OVER "
SCORE		DW ?
RANDS		DW ?
LEVEL		DB ?
MAX		DB ?
TICK		DB ?
KEY		DB ?
COL		DB ?
ROW		DB ?
ROT		DB ?
PCE		DB ?
NEXT		DB ?
CUR		DS 8
FIELD		DS 44
SCNBUF:

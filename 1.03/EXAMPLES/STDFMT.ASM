		CALL OPENF
		JNC START
		RET
START:		MOV DI, OFFSET INPUT
		MOV BX, [INHDL]
		CALL FRLT
		OR AX, AX
		JZ OVER
		CALL PROCL
		MOV SI, OFFSET OUTPUT
		MOV BX, [OUTHDL]
		CALL FWLT
		JMP SHORT START
OVER:		CALL CLOSF
		RET
PROCL:		XOR AL, AL
		MOV [OUTPUT], AL
		MOV SI, OFFSET INPUT+1
		MOV DI, OFFSET OUTPUT+1
		CALL CC
		JZ EOL3
		PUSH SI
		ADD SI, BX
		CALL CC
		CLD
		LODSW
		POP SI
		CMP AL, 3AH
		JZ COL
		CMP BL, 2
		JA NOCOL
		CMP AX, 6264H
		JZ DEF
		CMP AX, 6464H
		JZ DEF
		CMP AX, 7164H
		JZ DEF
		CMP AX, 7364H
		JZ DEF
		CMP AX, 7464H
		JZ DEF
		CMP AX, 7764H
		JNZ NOCOL
DEF:		CALL CC
		MOV CX, BX
	REPZ	MOVSB
		JMP SHORT NOCOL
COL:		CALL CC
		MOV CX, BX
	REPZ	MOVSB
		CALL CC
		MOVSB
NOCOL:		CALL CC
		JZ EOL
		MOV AL, 9
		STOSB
		MOV CX, BX
	REPZ	MOVSB
		CALL CC
		JZ EOL
		MOV AL, 9
		STOSB
		JMP SHORT ELEMENT
EOL:		CALL DESP
		CALL CC
		CMP AL, 3BH
		JNZ EOL2
		MOV AL, 9
		STOSB
		MOV AX, SI
		SUB AX, OFFSET INPUT+1
		XOR CH, CH
		MOV CL, [INPUT]
		SUB CX, AX
	REPZ	MOVSB
		JMP SHORT EOL1
EOL3:		CMP AL, 3BH
		JNZ EOL2
		MOV CL, [INPUT]
		XOR CH, CH
	REPZ	MOVSB
		JMP SHORT EOL1
EOL2:		MOV AX, 0A0DH
		STOSW
EOL1:		MOV AX, DI
		SUB AX, OFFSET OUTPUT+1
		MOV [OUTPUT], AL
		RET
ELEMENT:	CALL CC
		JZ EOL
		CMP AL, 24H
		JZ NOSPC
		CMP AL, 2AH
		JC SPC
		CMP AL, 2FH
		JC NOSPC
		CMP AL, 3AH
		JZ NOSPC
		CMP AL, 3FH
		JZ NOSPC
		CMP AL, 28H
		JZ PRESPC
		CMP AL, 5BH
		JZ PRESPC
		CMP AL, 29H
		JZ POSPC
		CMP AL, 5DH
		JZ POSPC
SPC:		CALL VN
		MOV CX, BX
	REPZ	MOVSB
		MOV AL, 20H
		STOSB
		JMP SHORT ELEMENT
NOSPC:		CALL DESP
PRESPC:		MOVSB
		JMP SHORT ELEMENT
POSPC:		CALL DESP
		INC SI
		MOV AH, 20H
		STOSW
		JMP SHORT ELEMENT
DESP:		CMP BYTE PTR [DI-1], 20H
		JNZ DESP0
		DEC DI
DESP0:		RET
VN:		OR BX, BX
		JZ VN0
		CMP AL, 30H
		JC VN0
		CMP AL, 39H
		JA VN0
		CMP BL, 2
		JNA VN0
		PUSH AX
		PUSH BX
		DEC BX
		MOV AL, [BX+SI]
		CMP AL, 68H
		JZ VN1
		CMP AL, 6FH
		JZ VN1
		CMP AL, 71H
		JZ VN1
		CMP AL, 62H
		JNZ VN2
VN1:		DEC BX
		JZ VN2
		MOV AL, [BX+SI]
		CMP AL, 61H
		JC VN1
		CMP AL, 7AH
		JA VN1
		AND AL, 0DFH
		MOV [BX+SI], AL
		JMP SHORT VN1
VN2:		POP BX
		POP AX
VN0:		RET
GETFN:		XOR DX, DX
		PUSH DI
		INC DI
		CLD
GETFN1:		LODSB
		CMP AL, 0DH
		JZ GETFN0
		CMP AL, 20H
		JNA GETFN2
		CMP AL, 61H
		JC GETFN3
		CMP AL, 7AH
		JA GETFN3
		AND AL, 0DFH
GETFN3:		INC DX
		STOSB
		JMP SHORT GETFN1
GETFN2:		OR DX, DX
		JZ GETFN1
GETFN0:		DEC SI
		POP DI
		MOV [DI], DL
		OR DX, DX
		RET
ADDEXT:		LAHF
		CLD
		MOV BP, DI
		XOR CH, CH
		MOV CL, [DI]
		INC DI
		MOV AL, 2EH
	REPNZ	SCASB
		JNZ ADDXT2
		SAHF
		JNC ADDXT0
		DEC DI
ADDXT2:		SAHF
		JC ADDXT1
		STOSB
		CALL WRM
ADDXT1:		MOV AX, DI
		SUB AX, BP
		DEC AX
		MOV DI, BP
		STOSB
ADDXT0:		RET
PREPF:		XOR AH, AH
		CLD
		LODSB
		ADD SI, AX
		MOV [SI], AH
		RET
OPENF:		MOV SI, 81H
		MOV DI, OFFSET INFILE
		CALL GETFN
		JZ NOPE
		MOV DI, OFFSET OUTFILE
		CALL GETFN
		JZ NOPE
		MOV SI, OFFSET DOTASM
		MOV DI, OFFSET INFILE
		CLC
		CALL ADDEXT
		MOV SI, OFFSET DOTASM
		MOV DI, OFFSET OUTFILE
		CLC
		CALL ADDEXT
		MOV SI, OFFSET INFILE
		CALL PREPF
		MOV SI, OFFSET OUTFILE
		CALL PREPF
		MOV AX, 3D00H
		MOV DX, OFFSET INFILE+1
		INT 21H
		JC FAIL
		MOV [INHDL], AX
		MOV SI, OFFSET OUTFILE
		MOV AH, 3CH
		XOR CX, CX
		MOV DX, OFFSET OUTFILE+1
		INT 21H
		JNC OK
		MOV AH, 3EH
		MOV BX, [INHDL]
		INT 21H
FAIL:		PUSH SI
		MOV DI, 80H
		MOV SI, OFFSET FILERR
		CALL WRM
		POP SI
		CALL FINAL
		STC
		RET
NOPE:		MOV AH, 9
		MOV DX, OFFSET USAGE
		INT 21H
		STC
		RET
OK:		MOV [OUTHDL], AX
		MOV SI, OFFSET INM
		MOV DI, 80H
		CALL WRM
		MOV SI, OFFSET INFILE
FINAL:		CALL WRM
		MOV AX, 0A0DH
		STOSW
		MOV AL, 24H
		STOSB
		MOV AH, 9
		MOV DX, 80H
		INT 21H
		CLC
		RET
FRLT:		PUSH CX
		PUSH DX
		PUSH SI
		PUSH DI
		MOV SI, DI
		INC DI
		MOV AH, 3FH
		MOV CX, 7FH
		MOV DX, DI
		PUSH BX
		INT 21H
		POP BX
		JC RDX
		OR AX, AX
		JZ RD0
		MOV DX, AX
		MOV CX, AX
		MOV AL, 0DH
		CLD
	REPNZ	SCASB
		JNZ RD0
		CMP BYTE PTR [DI], 0AH
		JNZ RD1
		INC DI
RD1:		MOV AX, DI
		SUB AX, SI
		DEC AX
		MOV [SI], AL
		PUSH AX
		NEG AX
		ADD AX, DX
		NEG AX
		CWD
		MOV CX, DX
		MOV DX, AX
		MOV AX, 4201H
		PUSH BX
		INT 21H
		POP BX
		POP AX
		JC RDX
		JMP SHORT RD2
RD0:		XOR AX, AX
		MOV [SI], AL
RD2:		CLC
RDX:		POP DI
		POP SI
		POP DX
		POP CX
		RET
FWLT:		PUSH AX
		PUSH CX
		PUSH DX
		PUSH BX
		MOV AH, 40H
		MOV CL, [SI]
		XOR CH, CH
		MOV DX, SI
		INC DX
		INT 21H
		POP BX
		POP DX
		POP CX
		POP AX
		RET
CLOSF:		MOV SI, OFFSET OUTM
		MOV DI, 80H
		CALL WRM
		MOV SI, OFFSET OUTFILE
		CALL FINAL
		MOV AH, 3EH
		MOV BX, [INHDL]
		INT 21H
		MOV AH, 3EH
		MOV BX, [OUTHDL]
		INT 21H
		RET
WRM:		MOV CL, [SI]
		XOR CH, CH
		INC SI
		CLD
	REPZ	MOVSB
		RET
CC:		XOR BX, BX
CCM:		MOV AL, [BX+SI]
		OR AL, AL
		JZ CCT
		CMP AL, 0DH
		JZ CCT
		CMP AL, 21H
		JC CCK
		CMP AL, 22H
		JZ CCQ
		CMP AL, 27H
		JZ CCQ
		CMP AL, 30H
		JC CCS
		CMP AL, 3AH
		JC CCL
		CMP AL, 3BH
		JZ CCT
		CMP AL, 41H
		JC CCS
		CMP AL, 7BH
		JNC CCS
		CMP AL, 61H
		JNC CCL
		CMP AL, 5FH
		JZ CCL
		CMP AL, 5BH
		JNC CCS
		OR AL, 20H
		MOV [BX+SI], AL
CCL:		INC BX
		JMP SHORT CCM
CCQ:		INC BX
		CMP [BX+SI], AL
		JNZ CCQ
		INC BX
CCT:		MOV AL, [SI]
		OR BX, BX
		RET
CCS:		OR BX, BX
		JNZ CCT
		INC BX
		JMP SHORT CCT
CCK:		OR BX, BX
		JNZ CCT
		INC SI
		JMP SHORT CCM
DOTASM		DB 3, "ASM"
INM		DB 4, "In: "
OUTM		DB 5, "Out: "
FILERR		DB 17, "Unable to access "
USAGE		DB "STDFMT <in>[.ASM] <out>[.ASM]", 13, 10, 36
INHDL		DW ?
OUTHDL		DW ?
INFILE		DS 40H
OUTFILE		DS 40H
INPUT		DS 80H
OUTPUT		DS 80H
